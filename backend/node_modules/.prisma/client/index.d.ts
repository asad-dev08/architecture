
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model ApplicationLog
 * 
 */
export type ApplicationLog = $Result.DefaultSelection<Prisma.$ApplicationLogPayload>
/**
 * Model AuditLog
 * 
 */
export type AuditLog = $Result.DefaultSelection<Prisma.$AuditLogPayload>
/**
 * Model Company
 * 
 */
export type Company = $Result.DefaultSelection<Prisma.$CompanyPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model RefreshToken
 * 
 */
export type RefreshToken = $Result.DefaultSelection<Prisma.$RefreshTokenPayload>
/**
 * Model SecurityRule
 * 
 */
export type SecurityRule = $Result.DefaultSelection<Prisma.$SecurityRulePayload>
/**
 * Model SecurityRuleWiseMenuPermission
 * 
 */
export type SecurityRuleWiseMenuPermission = $Result.DefaultSelection<Prisma.$SecurityRuleWiseMenuPermissionPayload>
/**
 * Model SecurityGroup
 * 
 */
export type SecurityGroup = $Result.DefaultSelection<Prisma.$SecurityGroupPayload>
/**
 * Model SecurityGroupRule
 * 
 */
export type SecurityGroupRule = $Result.DefaultSelection<Prisma.$SecurityGroupRulePayload>
/**
 * Model UserGroup
 * 
 */
export type UserGroup = $Result.DefaultSelection<Prisma.$UserGroupPayload>
/**
 * Model Menu
 * 
 */
export type Menu = $Result.DefaultSelection<Prisma.$MenuPayload>
/**
 * Model Project
 * 
 */
export type Project = $Result.DefaultSelection<Prisma.$ProjectPayload>
/**
 * Model ProjectGallery
 * 
 */
export type ProjectGallery = $Result.DefaultSelection<Prisma.$ProjectGalleryPayload>
/**
 * Model ProjectKeyFeature
 * 
 */
export type ProjectKeyFeature = $Result.DefaultSelection<Prisma.$ProjectKeyFeaturePayload>
/**
 * Model ProjectService
 * 
 */
export type ProjectService = $Result.DefaultSelection<Prisma.$ProjectServicePayload>
/**
 * Model Contact
 * 
 */
export type Contact = $Result.DefaultSelection<Prisma.$ContactPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Career
 * 
 */
export type Career = $Result.DefaultSelection<Prisma.$CareerPayload>
/**
 * Model News
 * 
 */
export type News = $Result.DefaultSelection<Prisma.$NewsPayload>
/**
 * Model NewsGallery
 * 
 */
export type NewsGallery = $Result.DefaultSelection<Prisma.$NewsGalleryPayload>
/**
 * Model CompanyAdditionalInfo
 * 
 */
export type CompanyAdditionalInfo = $Result.DefaultSelection<Prisma.$CompanyAdditionalInfoPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more ApplicationLogs
 * const applicationLogs = await prisma.applicationLog.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more ApplicationLogs
   * const applicationLogs = await prisma.applicationLog.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.applicationLog`: Exposes CRUD operations for the **ApplicationLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ApplicationLogs
    * const applicationLogs = await prisma.applicationLog.findMany()
    * ```
    */
  get applicationLog(): Prisma.ApplicationLogDelegate<ExtArgs>;

  /**
   * `prisma.auditLog`: Exposes CRUD operations for the **AuditLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuditLogs
    * const auditLogs = await prisma.auditLog.findMany()
    * ```
    */
  get auditLog(): Prisma.AuditLogDelegate<ExtArgs>;

  /**
   * `prisma.company`: Exposes CRUD operations for the **Company** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.company.findMany()
    * ```
    */
  get company(): Prisma.CompanyDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.refreshToken`: Exposes CRUD operations for the **RefreshToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RefreshTokens
    * const refreshTokens = await prisma.refreshToken.findMany()
    * ```
    */
  get refreshToken(): Prisma.RefreshTokenDelegate<ExtArgs>;

  /**
   * `prisma.securityRule`: Exposes CRUD operations for the **SecurityRule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SecurityRules
    * const securityRules = await prisma.securityRule.findMany()
    * ```
    */
  get securityRule(): Prisma.SecurityRuleDelegate<ExtArgs>;

  /**
   * `prisma.securityRuleWiseMenuPermission`: Exposes CRUD operations for the **SecurityRuleWiseMenuPermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SecurityRuleWiseMenuPermissions
    * const securityRuleWiseMenuPermissions = await prisma.securityRuleWiseMenuPermission.findMany()
    * ```
    */
  get securityRuleWiseMenuPermission(): Prisma.SecurityRuleWiseMenuPermissionDelegate<ExtArgs>;

  /**
   * `prisma.securityGroup`: Exposes CRUD operations for the **SecurityGroup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SecurityGroups
    * const securityGroups = await prisma.securityGroup.findMany()
    * ```
    */
  get securityGroup(): Prisma.SecurityGroupDelegate<ExtArgs>;

  /**
   * `prisma.securityGroupRule`: Exposes CRUD operations for the **SecurityGroupRule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SecurityGroupRules
    * const securityGroupRules = await prisma.securityGroupRule.findMany()
    * ```
    */
  get securityGroupRule(): Prisma.SecurityGroupRuleDelegate<ExtArgs>;

  /**
   * `prisma.userGroup`: Exposes CRUD operations for the **UserGroup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserGroups
    * const userGroups = await prisma.userGroup.findMany()
    * ```
    */
  get userGroup(): Prisma.UserGroupDelegate<ExtArgs>;

  /**
   * `prisma.menu`: Exposes CRUD operations for the **Menu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Menus
    * const menus = await prisma.menu.findMany()
    * ```
    */
  get menu(): Prisma.MenuDelegate<ExtArgs>;

  /**
   * `prisma.project`: Exposes CRUD operations for the **Project** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Projects
    * const projects = await prisma.project.findMany()
    * ```
    */
  get project(): Prisma.ProjectDelegate<ExtArgs>;

  /**
   * `prisma.projectGallery`: Exposes CRUD operations for the **ProjectGallery** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProjectGalleries
    * const projectGalleries = await prisma.projectGallery.findMany()
    * ```
    */
  get projectGallery(): Prisma.ProjectGalleryDelegate<ExtArgs>;

  /**
   * `prisma.projectKeyFeature`: Exposes CRUD operations for the **ProjectKeyFeature** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProjectKeyFeatures
    * const projectKeyFeatures = await prisma.projectKeyFeature.findMany()
    * ```
    */
  get projectKeyFeature(): Prisma.ProjectKeyFeatureDelegate<ExtArgs>;

  /**
   * `prisma.projectService`: Exposes CRUD operations for the **ProjectService** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProjectServices
    * const projectServices = await prisma.projectService.findMany()
    * ```
    */
  get projectService(): Prisma.ProjectServiceDelegate<ExtArgs>;

  /**
   * `prisma.contact`: Exposes CRUD operations for the **Contact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contacts
    * const contacts = await prisma.contact.findMany()
    * ```
    */
  get contact(): Prisma.ContactDelegate<ExtArgs>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs>;

  /**
   * `prisma.career`: Exposes CRUD operations for the **Career** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Careers
    * const careers = await prisma.career.findMany()
    * ```
    */
  get career(): Prisma.CareerDelegate<ExtArgs>;

  /**
   * `prisma.news`: Exposes CRUD operations for the **News** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more News
    * const news = await prisma.news.findMany()
    * ```
    */
  get news(): Prisma.NewsDelegate<ExtArgs>;

  /**
   * `prisma.newsGallery`: Exposes CRUD operations for the **NewsGallery** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more NewsGalleries
    * const newsGalleries = await prisma.newsGallery.findMany()
    * ```
    */
  get newsGallery(): Prisma.NewsGalleryDelegate<ExtArgs>;

  /**
   * `prisma.companyAdditionalInfo`: Exposes CRUD operations for the **CompanyAdditionalInfo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CompanyAdditionalInfos
    * const companyAdditionalInfos = await prisma.companyAdditionalInfo.findMany()
    * ```
    */
  get companyAdditionalInfo(): Prisma.CompanyAdditionalInfoDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.21.1
   * Query Engine version: bf0e5e8a04cada8225617067eaa03d041e2bba36
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    ApplicationLog: 'ApplicationLog',
    AuditLog: 'AuditLog',
    Company: 'Company',
    User: 'User',
    RefreshToken: 'RefreshToken',
    SecurityRule: 'SecurityRule',
    SecurityRuleWiseMenuPermission: 'SecurityRuleWiseMenuPermission',
    SecurityGroup: 'SecurityGroup',
    SecurityGroupRule: 'SecurityGroupRule',
    UserGroup: 'UserGroup',
    Menu: 'Menu',
    Project: 'Project',
    ProjectGallery: 'ProjectGallery',
    ProjectKeyFeature: 'ProjectKeyFeature',
    ProjectService: 'ProjectService',
    Contact: 'Contact',
    Category: 'Category',
    Career: 'Career',
    News: 'News',
    NewsGallery: 'NewsGallery',
    CompanyAdditionalInfo: 'CompanyAdditionalInfo'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "applicationLog" | "auditLog" | "company" | "user" | "refreshToken" | "securityRule" | "securityRuleWiseMenuPermission" | "securityGroup" | "securityGroupRule" | "userGroup" | "menu" | "project" | "projectGallery" | "projectKeyFeature" | "projectService" | "contact" | "category" | "career" | "news" | "newsGallery" | "companyAdditionalInfo"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      ApplicationLog: {
        payload: Prisma.$ApplicationLogPayload<ExtArgs>
        fields: Prisma.ApplicationLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApplicationLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApplicationLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          findFirst: {
            args: Prisma.ApplicationLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApplicationLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          findMany: {
            args: Prisma.ApplicationLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>[]
          }
          create: {
            args: Prisma.ApplicationLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          createMany: {
            args: Prisma.ApplicationLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ApplicationLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          update: {
            args: Prisma.ApplicationLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          deleteMany: {
            args: Prisma.ApplicationLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApplicationLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ApplicationLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          aggregate: {
            args: Prisma.ApplicationLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApplicationLog>
          }
          groupBy: {
            args: Prisma.ApplicationLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApplicationLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApplicationLogCountArgs<ExtArgs>
            result: $Utils.Optional<ApplicationLogCountAggregateOutputType> | number
          }
        }
      }
      AuditLog: {
        payload: Prisma.$AuditLogPayload<ExtArgs>
        fields: Prisma.AuditLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuditLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuditLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findFirst: {
            args: Prisma.AuditLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuditLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findMany: {
            args: Prisma.AuditLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          create: {
            args: Prisma.AuditLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          createMany: {
            args: Prisma.AuditLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AuditLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          update: {
            args: Prisma.AuditLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          deleteMany: {
            args: Prisma.AuditLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuditLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AuditLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          aggregate: {
            args: Prisma.AuditLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuditLog>
          }
          groupBy: {
            args: Prisma.AuditLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuditLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuditLogCountArgs<ExtArgs>
            result: $Utils.Optional<AuditLogCountAggregateOutputType> | number
          }
        }
      }
      Company: {
        payload: Prisma.$CompanyPayload<ExtArgs>
        fields: Prisma.CompanyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findFirst: {
            args: Prisma.CompanyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findMany: {
            args: Prisma.CompanyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          create: {
            args: Prisma.CompanyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          createMany: {
            args: Prisma.CompanyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CompanyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          update: {
            args: Prisma.CompanyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          deleteMany: {
            args: Prisma.CompanyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          aggregate: {
            args: Prisma.CompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompany>
          }
          groupBy: {
            args: Prisma.CompanyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      RefreshToken: {
        payload: Prisma.$RefreshTokenPayload<ExtArgs>
        fields: Prisma.RefreshTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RefreshTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RefreshTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findFirst: {
            args: Prisma.RefreshTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RefreshTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findMany: {
            args: Prisma.RefreshTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          create: {
            args: Prisma.RefreshTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          createMany: {
            args: Prisma.RefreshTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RefreshTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          update: {
            args: Prisma.RefreshTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          deleteMany: {
            args: Prisma.RefreshTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RefreshTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RefreshTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefreshToken>
          }
          groupBy: {
            args: Prisma.RefreshTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.RefreshTokenCountArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenCountAggregateOutputType> | number
          }
        }
      }
      SecurityRule: {
        payload: Prisma.$SecurityRulePayload<ExtArgs>
        fields: Prisma.SecurityRuleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SecurityRuleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SecurityRuleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          findFirst: {
            args: Prisma.SecurityRuleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SecurityRuleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          findMany: {
            args: Prisma.SecurityRuleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>[]
          }
          create: {
            args: Prisma.SecurityRuleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          createMany: {
            args: Prisma.SecurityRuleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SecurityRuleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          update: {
            args: Prisma.SecurityRuleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          deleteMany: {
            args: Prisma.SecurityRuleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SecurityRuleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SecurityRuleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          aggregate: {
            args: Prisma.SecurityRuleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurityRule>
          }
          groupBy: {
            args: Prisma.SecurityRuleGroupByArgs<ExtArgs>
            result: $Utils.Optional<SecurityRuleGroupByOutputType>[]
          }
          count: {
            args: Prisma.SecurityRuleCountArgs<ExtArgs>
            result: $Utils.Optional<SecurityRuleCountAggregateOutputType> | number
          }
        }
      }
      SecurityRuleWiseMenuPermission: {
        payload: Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>
        fields: Prisma.SecurityRuleWiseMenuPermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SecurityRuleWiseMenuPermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SecurityRuleWiseMenuPermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          findFirst: {
            args: Prisma.SecurityRuleWiseMenuPermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SecurityRuleWiseMenuPermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          findMany: {
            args: Prisma.SecurityRuleWiseMenuPermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>[]
          }
          create: {
            args: Prisma.SecurityRuleWiseMenuPermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          createMany: {
            args: Prisma.SecurityRuleWiseMenuPermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SecurityRuleWiseMenuPermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          update: {
            args: Prisma.SecurityRuleWiseMenuPermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          deleteMany: {
            args: Prisma.SecurityRuleWiseMenuPermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SecurityRuleWiseMenuPermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SecurityRuleWiseMenuPermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          aggregate: {
            args: Prisma.SecurityRuleWiseMenuPermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurityRuleWiseMenuPermission>
          }
          groupBy: {
            args: Prisma.SecurityRuleWiseMenuPermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SecurityRuleWiseMenuPermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SecurityRuleWiseMenuPermissionCountArgs<ExtArgs>
            result: $Utils.Optional<SecurityRuleWiseMenuPermissionCountAggregateOutputType> | number
          }
        }
      }
      SecurityGroup: {
        payload: Prisma.$SecurityGroupPayload<ExtArgs>
        fields: Prisma.SecurityGroupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SecurityGroupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SecurityGroupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          findFirst: {
            args: Prisma.SecurityGroupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SecurityGroupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          findMany: {
            args: Prisma.SecurityGroupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>[]
          }
          create: {
            args: Prisma.SecurityGroupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          createMany: {
            args: Prisma.SecurityGroupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SecurityGroupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          update: {
            args: Prisma.SecurityGroupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          deleteMany: {
            args: Prisma.SecurityGroupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SecurityGroupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SecurityGroupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          aggregate: {
            args: Prisma.SecurityGroupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurityGroup>
          }
          groupBy: {
            args: Prisma.SecurityGroupGroupByArgs<ExtArgs>
            result: $Utils.Optional<SecurityGroupGroupByOutputType>[]
          }
          count: {
            args: Prisma.SecurityGroupCountArgs<ExtArgs>
            result: $Utils.Optional<SecurityGroupCountAggregateOutputType> | number
          }
        }
      }
      SecurityGroupRule: {
        payload: Prisma.$SecurityGroupRulePayload<ExtArgs>
        fields: Prisma.SecurityGroupRuleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SecurityGroupRuleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SecurityGroupRuleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          findFirst: {
            args: Prisma.SecurityGroupRuleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SecurityGroupRuleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          findMany: {
            args: Prisma.SecurityGroupRuleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>[]
          }
          create: {
            args: Prisma.SecurityGroupRuleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          createMany: {
            args: Prisma.SecurityGroupRuleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SecurityGroupRuleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          update: {
            args: Prisma.SecurityGroupRuleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          deleteMany: {
            args: Prisma.SecurityGroupRuleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SecurityGroupRuleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SecurityGroupRuleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          aggregate: {
            args: Prisma.SecurityGroupRuleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurityGroupRule>
          }
          groupBy: {
            args: Prisma.SecurityGroupRuleGroupByArgs<ExtArgs>
            result: $Utils.Optional<SecurityGroupRuleGroupByOutputType>[]
          }
          count: {
            args: Prisma.SecurityGroupRuleCountArgs<ExtArgs>
            result: $Utils.Optional<SecurityGroupRuleCountAggregateOutputType> | number
          }
        }
      }
      UserGroup: {
        payload: Prisma.$UserGroupPayload<ExtArgs>
        fields: Prisma.UserGroupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserGroupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserGroupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          findFirst: {
            args: Prisma.UserGroupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserGroupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          findMany: {
            args: Prisma.UserGroupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>[]
          }
          create: {
            args: Prisma.UserGroupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          createMany: {
            args: Prisma.UserGroupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserGroupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          update: {
            args: Prisma.UserGroupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          deleteMany: {
            args: Prisma.UserGroupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserGroupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserGroupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          aggregate: {
            args: Prisma.UserGroupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserGroup>
          }
          groupBy: {
            args: Prisma.UserGroupGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserGroupCountArgs<ExtArgs>
            result: $Utils.Optional<UserGroupCountAggregateOutputType> | number
          }
        }
      }
      Menu: {
        payload: Prisma.$MenuPayload<ExtArgs>
        fields: Prisma.MenuFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MenuFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MenuFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          findFirst: {
            args: Prisma.MenuFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MenuFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          findMany: {
            args: Prisma.MenuFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>[]
          }
          create: {
            args: Prisma.MenuCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          createMany: {
            args: Prisma.MenuCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MenuDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          update: {
            args: Prisma.MenuUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          deleteMany: {
            args: Prisma.MenuDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MenuUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MenuUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          aggregate: {
            args: Prisma.MenuAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenu>
          }
          groupBy: {
            args: Prisma.MenuGroupByArgs<ExtArgs>
            result: $Utils.Optional<MenuGroupByOutputType>[]
          }
          count: {
            args: Prisma.MenuCountArgs<ExtArgs>
            result: $Utils.Optional<MenuCountAggregateOutputType> | number
          }
        }
      }
      Project: {
        payload: Prisma.$ProjectPayload<ExtArgs>
        fields: Prisma.ProjectFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProjectFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProjectFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          findFirst: {
            args: Prisma.ProjectFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProjectFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          findMany: {
            args: Prisma.ProjectFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          create: {
            args: Prisma.ProjectCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          createMany: {
            args: Prisma.ProjectCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProjectDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          update: {
            args: Prisma.ProjectUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          deleteMany: {
            args: Prisma.ProjectDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProjectUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProjectUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          aggregate: {
            args: Prisma.ProjectAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProject>
          }
          groupBy: {
            args: Prisma.ProjectGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProjectCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectCountAggregateOutputType> | number
          }
        }
      }
      ProjectGallery: {
        payload: Prisma.$ProjectGalleryPayload<ExtArgs>
        fields: Prisma.ProjectGalleryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProjectGalleryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectGalleryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProjectGalleryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectGalleryPayload>
          }
          findFirst: {
            args: Prisma.ProjectGalleryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectGalleryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProjectGalleryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectGalleryPayload>
          }
          findMany: {
            args: Prisma.ProjectGalleryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectGalleryPayload>[]
          }
          create: {
            args: Prisma.ProjectGalleryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectGalleryPayload>
          }
          createMany: {
            args: Prisma.ProjectGalleryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProjectGalleryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectGalleryPayload>
          }
          update: {
            args: Prisma.ProjectGalleryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectGalleryPayload>
          }
          deleteMany: {
            args: Prisma.ProjectGalleryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProjectGalleryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProjectGalleryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectGalleryPayload>
          }
          aggregate: {
            args: Prisma.ProjectGalleryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProjectGallery>
          }
          groupBy: {
            args: Prisma.ProjectGalleryGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectGalleryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProjectGalleryCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectGalleryCountAggregateOutputType> | number
          }
        }
      }
      ProjectKeyFeature: {
        payload: Prisma.$ProjectKeyFeaturePayload<ExtArgs>
        fields: Prisma.ProjectKeyFeatureFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProjectKeyFeatureFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectKeyFeaturePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProjectKeyFeatureFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectKeyFeaturePayload>
          }
          findFirst: {
            args: Prisma.ProjectKeyFeatureFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectKeyFeaturePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProjectKeyFeatureFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectKeyFeaturePayload>
          }
          findMany: {
            args: Prisma.ProjectKeyFeatureFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectKeyFeaturePayload>[]
          }
          create: {
            args: Prisma.ProjectKeyFeatureCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectKeyFeaturePayload>
          }
          createMany: {
            args: Prisma.ProjectKeyFeatureCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProjectKeyFeatureDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectKeyFeaturePayload>
          }
          update: {
            args: Prisma.ProjectKeyFeatureUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectKeyFeaturePayload>
          }
          deleteMany: {
            args: Prisma.ProjectKeyFeatureDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProjectKeyFeatureUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProjectKeyFeatureUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectKeyFeaturePayload>
          }
          aggregate: {
            args: Prisma.ProjectKeyFeatureAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProjectKeyFeature>
          }
          groupBy: {
            args: Prisma.ProjectKeyFeatureGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectKeyFeatureGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProjectKeyFeatureCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectKeyFeatureCountAggregateOutputType> | number
          }
        }
      }
      ProjectService: {
        payload: Prisma.$ProjectServicePayload<ExtArgs>
        fields: Prisma.ProjectServiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProjectServiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectServicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProjectServiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectServicePayload>
          }
          findFirst: {
            args: Prisma.ProjectServiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectServicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProjectServiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectServicePayload>
          }
          findMany: {
            args: Prisma.ProjectServiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectServicePayload>[]
          }
          create: {
            args: Prisma.ProjectServiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectServicePayload>
          }
          createMany: {
            args: Prisma.ProjectServiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProjectServiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectServicePayload>
          }
          update: {
            args: Prisma.ProjectServiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectServicePayload>
          }
          deleteMany: {
            args: Prisma.ProjectServiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProjectServiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProjectServiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectServicePayload>
          }
          aggregate: {
            args: Prisma.ProjectServiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProjectService>
          }
          groupBy: {
            args: Prisma.ProjectServiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectServiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProjectServiceCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectServiceCountAggregateOutputType> | number
          }
        }
      }
      Contact: {
        payload: Prisma.$ContactPayload<ExtArgs>
        fields: Prisma.ContactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findFirst: {
            args: Prisma.ContactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findMany: {
            args: Prisma.ContactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          create: {
            args: Prisma.ContactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          createMany: {
            args: Prisma.ContactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ContactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          update: {
            args: Prisma.ContactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          deleteMany: {
            args: Prisma.ContactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ContactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          aggregate: {
            args: Prisma.ContactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContact>
          }
          groupBy: {
            args: Prisma.ContactGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContactCountArgs<ExtArgs>
            result: $Utils.Optional<ContactCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Career: {
        payload: Prisma.$CareerPayload<ExtArgs>
        fields: Prisma.CareerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CareerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CareerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareerPayload>
          }
          findFirst: {
            args: Prisma.CareerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CareerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareerPayload>
          }
          findMany: {
            args: Prisma.CareerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareerPayload>[]
          }
          create: {
            args: Prisma.CareerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareerPayload>
          }
          createMany: {
            args: Prisma.CareerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CareerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareerPayload>
          }
          update: {
            args: Prisma.CareerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareerPayload>
          }
          deleteMany: {
            args: Prisma.CareerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CareerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CareerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareerPayload>
          }
          aggregate: {
            args: Prisma.CareerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCareer>
          }
          groupBy: {
            args: Prisma.CareerGroupByArgs<ExtArgs>
            result: $Utils.Optional<CareerGroupByOutputType>[]
          }
          count: {
            args: Prisma.CareerCountArgs<ExtArgs>
            result: $Utils.Optional<CareerCountAggregateOutputType> | number
          }
        }
      }
      News: {
        payload: Prisma.$NewsPayload<ExtArgs>
        fields: Prisma.NewsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NewsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NewsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          findFirst: {
            args: Prisma.NewsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NewsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          findMany: {
            args: Prisma.NewsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>[]
          }
          create: {
            args: Prisma.NewsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          createMany: {
            args: Prisma.NewsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.NewsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          update: {
            args: Prisma.NewsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          deleteMany: {
            args: Prisma.NewsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NewsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NewsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          aggregate: {
            args: Prisma.NewsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNews>
          }
          groupBy: {
            args: Prisma.NewsGroupByArgs<ExtArgs>
            result: $Utils.Optional<NewsGroupByOutputType>[]
          }
          count: {
            args: Prisma.NewsCountArgs<ExtArgs>
            result: $Utils.Optional<NewsCountAggregateOutputType> | number
          }
        }
      }
      NewsGallery: {
        payload: Prisma.$NewsGalleryPayload<ExtArgs>
        fields: Prisma.NewsGalleryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NewsGalleryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsGalleryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NewsGalleryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsGalleryPayload>
          }
          findFirst: {
            args: Prisma.NewsGalleryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsGalleryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NewsGalleryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsGalleryPayload>
          }
          findMany: {
            args: Prisma.NewsGalleryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsGalleryPayload>[]
          }
          create: {
            args: Prisma.NewsGalleryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsGalleryPayload>
          }
          createMany: {
            args: Prisma.NewsGalleryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.NewsGalleryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsGalleryPayload>
          }
          update: {
            args: Prisma.NewsGalleryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsGalleryPayload>
          }
          deleteMany: {
            args: Prisma.NewsGalleryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NewsGalleryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NewsGalleryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsGalleryPayload>
          }
          aggregate: {
            args: Prisma.NewsGalleryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNewsGallery>
          }
          groupBy: {
            args: Prisma.NewsGalleryGroupByArgs<ExtArgs>
            result: $Utils.Optional<NewsGalleryGroupByOutputType>[]
          }
          count: {
            args: Prisma.NewsGalleryCountArgs<ExtArgs>
            result: $Utils.Optional<NewsGalleryCountAggregateOutputType> | number
          }
        }
      }
      CompanyAdditionalInfo: {
        payload: Prisma.$CompanyAdditionalInfoPayload<ExtArgs>
        fields: Prisma.CompanyAdditionalInfoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyAdditionalInfoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyAdditionalInfoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          findFirst: {
            args: Prisma.CompanyAdditionalInfoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyAdditionalInfoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          findMany: {
            args: Prisma.CompanyAdditionalInfoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>[]
          }
          create: {
            args: Prisma.CompanyAdditionalInfoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          createMany: {
            args: Prisma.CompanyAdditionalInfoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CompanyAdditionalInfoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          update: {
            args: Prisma.CompanyAdditionalInfoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          deleteMany: {
            args: Prisma.CompanyAdditionalInfoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyAdditionalInfoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyAdditionalInfoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          aggregate: {
            args: Prisma.CompanyAdditionalInfoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompanyAdditionalInfo>
          }
          groupBy: {
            args: Prisma.CompanyAdditionalInfoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyAdditionalInfoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyAdditionalInfoCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyAdditionalInfoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CompanyCountOutputType
   */

  export type CompanyCountOutputType = {
    CompanyAdditionalInfo: number
  }

  export type CompanyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CompanyAdditionalInfo?: boolean | CompanyCountOutputTypeCountCompanyAdditionalInfoArgs
  }

  // Custom InputTypes
  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyCountOutputType
     */
    select?: CompanyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountCompanyAdditionalInfoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyAdditionalInfoWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    UserGroups: number
    RefreshToken: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserGroups?: boolean | UserCountOutputTypeCountUserGroupsArgs
    RefreshToken?: boolean | UserCountOutputTypeCountRefreshTokenArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserGroupWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }


  /**
   * Count Type SecurityRuleCountOutputType
   */

  export type SecurityRuleCountOutputType = {
    SecurityRuleWiseMenuPermissions: number
    SecurityGroupRules: number
  }

  export type SecurityRuleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SecurityRuleWiseMenuPermissions?: boolean | SecurityRuleCountOutputTypeCountSecurityRuleWiseMenuPermissionsArgs
    SecurityGroupRules?: boolean | SecurityRuleCountOutputTypeCountSecurityGroupRulesArgs
  }

  // Custom InputTypes
  /**
   * SecurityRuleCountOutputType without action
   */
  export type SecurityRuleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleCountOutputType
     */
    select?: SecurityRuleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SecurityRuleCountOutputType without action
   */
  export type SecurityRuleCountOutputTypeCountSecurityRuleWiseMenuPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityRuleWiseMenuPermissionWhereInput
  }

  /**
   * SecurityRuleCountOutputType without action
   */
  export type SecurityRuleCountOutputTypeCountSecurityGroupRulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityGroupRuleWhereInput
  }


  /**
   * Count Type SecurityGroupCountOutputType
   */

  export type SecurityGroupCountOutputType = {
    SecurityGroupRules: number
    UserGroups: number
  }

  export type SecurityGroupCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SecurityGroupRules?: boolean | SecurityGroupCountOutputTypeCountSecurityGroupRulesArgs
    UserGroups?: boolean | SecurityGroupCountOutputTypeCountUserGroupsArgs
  }

  // Custom InputTypes
  /**
   * SecurityGroupCountOutputType without action
   */
  export type SecurityGroupCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupCountOutputType
     */
    select?: SecurityGroupCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SecurityGroupCountOutputType without action
   */
  export type SecurityGroupCountOutputTypeCountSecurityGroupRulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityGroupRuleWhereInput
  }

  /**
   * SecurityGroupCountOutputType without action
   */
  export type SecurityGroupCountOutputTypeCountUserGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserGroupWhereInput
  }


  /**
   * Count Type ProjectCountOutputType
   */

  export type ProjectCountOutputType = {
    gallery: number
    key_features: number
    services: number
  }

  export type ProjectCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    gallery?: boolean | ProjectCountOutputTypeCountGalleryArgs
    key_features?: boolean | ProjectCountOutputTypeCountKey_featuresArgs
    services?: boolean | ProjectCountOutputTypeCountServicesArgs
  }

  // Custom InputTypes
  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectCountOutputType
     */
    select?: ProjectCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountGalleryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectGalleryWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountKey_featuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectKeyFeatureWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountServicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectServiceWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    Projects: number
    News: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Projects?: boolean | CategoryCountOutputTypeCountProjectsArgs
    News?: boolean | CategoryCountOutputTypeCountNewsArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountProjectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountNewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsWhereInput
  }


  /**
   * Count Type NewsCountOutputType
   */

  export type NewsCountOutputType = {
    gallery: number
  }

  export type NewsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    gallery?: boolean | NewsCountOutputTypeCountGalleryArgs
  }

  // Custom InputTypes
  /**
   * NewsCountOutputType without action
   */
  export type NewsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsCountOutputType
     */
    select?: NewsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * NewsCountOutputType without action
   */
  export type NewsCountOutputTypeCountGalleryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsGalleryWhereInput
  }


  /**
   * Models
   */

  /**
   * Model ApplicationLog
   */

  export type AggregateApplicationLog = {
    _count: ApplicationLogCountAggregateOutputType | null
    _min: ApplicationLogMinAggregateOutputType | null
    _max: ApplicationLogMaxAggregateOutputType | null
  }

  export type ApplicationLogMinAggregateOutputType = {
    id: string | null
    level: string | null
    message: string | null
    timestamp: Date | null
  }

  export type ApplicationLogMaxAggregateOutputType = {
    id: string | null
    level: string | null
    message: string | null
    timestamp: Date | null
  }

  export type ApplicationLogCountAggregateOutputType = {
    id: number
    level: number
    message: number
    meta: number
    timestamp: number
    _all: number
  }


  export type ApplicationLogMinAggregateInputType = {
    id?: true
    level?: true
    message?: true
    timestamp?: true
  }

  export type ApplicationLogMaxAggregateInputType = {
    id?: true
    level?: true
    message?: true
    timestamp?: true
  }

  export type ApplicationLogCountAggregateInputType = {
    id?: true
    level?: true
    message?: true
    meta?: true
    timestamp?: true
    _all?: true
  }

  export type ApplicationLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationLog to aggregate.
     */
    where?: ApplicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationLogs to fetch.
     */
    orderBy?: ApplicationLogOrderByWithRelationInput | ApplicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApplicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ApplicationLogs
    **/
    _count?: true | ApplicationLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApplicationLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApplicationLogMaxAggregateInputType
  }

  export type GetApplicationLogAggregateType<T extends ApplicationLogAggregateArgs> = {
        [P in keyof T & keyof AggregateApplicationLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApplicationLog[P]>
      : GetScalarType<T[P], AggregateApplicationLog[P]>
  }




  export type ApplicationLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationLogWhereInput
    orderBy?: ApplicationLogOrderByWithAggregationInput | ApplicationLogOrderByWithAggregationInput[]
    by: ApplicationLogScalarFieldEnum[] | ApplicationLogScalarFieldEnum
    having?: ApplicationLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApplicationLogCountAggregateInputType | true
    _min?: ApplicationLogMinAggregateInputType
    _max?: ApplicationLogMaxAggregateInputType
  }

  export type ApplicationLogGroupByOutputType = {
    id: string
    level: string
    message: string
    meta: JsonValue
    timestamp: Date
    _count: ApplicationLogCountAggregateOutputType | null
    _min: ApplicationLogMinAggregateOutputType | null
    _max: ApplicationLogMaxAggregateOutputType | null
  }

  type GetApplicationLogGroupByPayload<T extends ApplicationLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApplicationLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApplicationLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApplicationLogGroupByOutputType[P]>
            : GetScalarType<T[P], ApplicationLogGroupByOutputType[P]>
        }
      >
    >


  export type ApplicationLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    level?: boolean
    message?: boolean
    meta?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["applicationLog"]>


  export type ApplicationLogSelectScalar = {
    id?: boolean
    level?: boolean
    message?: boolean
    meta?: boolean
    timestamp?: boolean
  }


  export type $ApplicationLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ApplicationLog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      level: string
      message: string
      meta: Prisma.JsonValue
      timestamp: Date
    }, ExtArgs["result"]["applicationLog"]>
    composites: {}
  }

  type ApplicationLogGetPayload<S extends boolean | null | undefined | ApplicationLogDefaultArgs> = $Result.GetResult<Prisma.$ApplicationLogPayload, S>

  type ApplicationLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ApplicationLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ApplicationLogCountAggregateInputType | true
    }

  export interface ApplicationLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ApplicationLog'], meta: { name: 'ApplicationLog' } }
    /**
     * Find zero or one ApplicationLog that matches the filter.
     * @param {ApplicationLogFindUniqueArgs} args - Arguments to find a ApplicationLog
     * @example
     * // Get one ApplicationLog
     * const applicationLog = await prisma.applicationLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApplicationLogFindUniqueArgs>(args: SelectSubset<T, ApplicationLogFindUniqueArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ApplicationLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ApplicationLogFindUniqueOrThrowArgs} args - Arguments to find a ApplicationLog
     * @example
     * // Get one ApplicationLog
     * const applicationLog = await prisma.applicationLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApplicationLogFindUniqueOrThrowArgs>(args: SelectSubset<T, ApplicationLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ApplicationLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogFindFirstArgs} args - Arguments to find a ApplicationLog
     * @example
     * // Get one ApplicationLog
     * const applicationLog = await prisma.applicationLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApplicationLogFindFirstArgs>(args?: SelectSubset<T, ApplicationLogFindFirstArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ApplicationLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogFindFirstOrThrowArgs} args - Arguments to find a ApplicationLog
     * @example
     * // Get one ApplicationLog
     * const applicationLog = await prisma.applicationLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApplicationLogFindFirstOrThrowArgs>(args?: SelectSubset<T, ApplicationLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ApplicationLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ApplicationLogs
     * const applicationLogs = await prisma.applicationLog.findMany()
     * 
     * // Get first 10 ApplicationLogs
     * const applicationLogs = await prisma.applicationLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const applicationLogWithIdOnly = await prisma.applicationLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ApplicationLogFindManyArgs>(args?: SelectSubset<T, ApplicationLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ApplicationLog.
     * @param {ApplicationLogCreateArgs} args - Arguments to create a ApplicationLog.
     * @example
     * // Create one ApplicationLog
     * const ApplicationLog = await prisma.applicationLog.create({
     *   data: {
     *     // ... data to create a ApplicationLog
     *   }
     * })
     * 
     */
    create<T extends ApplicationLogCreateArgs>(args: SelectSubset<T, ApplicationLogCreateArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ApplicationLogs.
     * @param {ApplicationLogCreateManyArgs} args - Arguments to create many ApplicationLogs.
     * @example
     * // Create many ApplicationLogs
     * const applicationLog = await prisma.applicationLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApplicationLogCreateManyArgs>(args?: SelectSubset<T, ApplicationLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ApplicationLog.
     * @param {ApplicationLogDeleteArgs} args - Arguments to delete one ApplicationLog.
     * @example
     * // Delete one ApplicationLog
     * const ApplicationLog = await prisma.applicationLog.delete({
     *   where: {
     *     // ... filter to delete one ApplicationLog
     *   }
     * })
     * 
     */
    delete<T extends ApplicationLogDeleteArgs>(args: SelectSubset<T, ApplicationLogDeleteArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ApplicationLog.
     * @param {ApplicationLogUpdateArgs} args - Arguments to update one ApplicationLog.
     * @example
     * // Update one ApplicationLog
     * const applicationLog = await prisma.applicationLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApplicationLogUpdateArgs>(args: SelectSubset<T, ApplicationLogUpdateArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ApplicationLogs.
     * @param {ApplicationLogDeleteManyArgs} args - Arguments to filter ApplicationLogs to delete.
     * @example
     * // Delete a few ApplicationLogs
     * const { count } = await prisma.applicationLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApplicationLogDeleteManyArgs>(args?: SelectSubset<T, ApplicationLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApplicationLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ApplicationLogs
     * const applicationLog = await prisma.applicationLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApplicationLogUpdateManyArgs>(args: SelectSubset<T, ApplicationLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ApplicationLog.
     * @param {ApplicationLogUpsertArgs} args - Arguments to update or create a ApplicationLog.
     * @example
     * // Update or create a ApplicationLog
     * const applicationLog = await prisma.applicationLog.upsert({
     *   create: {
     *     // ... data to create a ApplicationLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ApplicationLog we want to update
     *   }
     * })
     */
    upsert<T extends ApplicationLogUpsertArgs>(args: SelectSubset<T, ApplicationLogUpsertArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ApplicationLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogCountArgs} args - Arguments to filter ApplicationLogs to count.
     * @example
     * // Count the number of ApplicationLogs
     * const count = await prisma.applicationLog.count({
     *   where: {
     *     // ... the filter for the ApplicationLogs we want to count
     *   }
     * })
    **/
    count<T extends ApplicationLogCountArgs>(
      args?: Subset<T, ApplicationLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApplicationLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ApplicationLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApplicationLogAggregateArgs>(args: Subset<T, ApplicationLogAggregateArgs>): Prisma.PrismaPromise<GetApplicationLogAggregateType<T>>

    /**
     * Group by ApplicationLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApplicationLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApplicationLogGroupByArgs['orderBy'] }
        : { orderBy?: ApplicationLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApplicationLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApplicationLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ApplicationLog model
   */
  readonly fields: ApplicationLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ApplicationLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApplicationLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ApplicationLog model
   */ 
  interface ApplicationLogFieldRefs {
    readonly id: FieldRef<"ApplicationLog", 'String'>
    readonly level: FieldRef<"ApplicationLog", 'String'>
    readonly message: FieldRef<"ApplicationLog", 'String'>
    readonly meta: FieldRef<"ApplicationLog", 'Json'>
    readonly timestamp: FieldRef<"ApplicationLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ApplicationLog findUnique
   */
  export type ApplicationLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter, which ApplicationLog to fetch.
     */
    where: ApplicationLogWhereUniqueInput
  }

  /**
   * ApplicationLog findUniqueOrThrow
   */
  export type ApplicationLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter, which ApplicationLog to fetch.
     */
    where: ApplicationLogWhereUniqueInput
  }

  /**
   * ApplicationLog findFirst
   */
  export type ApplicationLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter, which ApplicationLog to fetch.
     */
    where?: ApplicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationLogs to fetch.
     */
    orderBy?: ApplicationLogOrderByWithRelationInput | ApplicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationLogs.
     */
    cursor?: ApplicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationLogs.
     */
    distinct?: ApplicationLogScalarFieldEnum | ApplicationLogScalarFieldEnum[]
  }

  /**
   * ApplicationLog findFirstOrThrow
   */
  export type ApplicationLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter, which ApplicationLog to fetch.
     */
    where?: ApplicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationLogs to fetch.
     */
    orderBy?: ApplicationLogOrderByWithRelationInput | ApplicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationLogs.
     */
    cursor?: ApplicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationLogs.
     */
    distinct?: ApplicationLogScalarFieldEnum | ApplicationLogScalarFieldEnum[]
  }

  /**
   * ApplicationLog findMany
   */
  export type ApplicationLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter, which ApplicationLogs to fetch.
     */
    where?: ApplicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationLogs to fetch.
     */
    orderBy?: ApplicationLogOrderByWithRelationInput | ApplicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ApplicationLogs.
     */
    cursor?: ApplicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationLogs.
     */
    skip?: number
    distinct?: ApplicationLogScalarFieldEnum | ApplicationLogScalarFieldEnum[]
  }

  /**
   * ApplicationLog create
   */
  export type ApplicationLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * The data needed to create a ApplicationLog.
     */
    data: XOR<ApplicationLogCreateInput, ApplicationLogUncheckedCreateInput>
  }

  /**
   * ApplicationLog createMany
   */
  export type ApplicationLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ApplicationLogs.
     */
    data: ApplicationLogCreateManyInput | ApplicationLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ApplicationLog update
   */
  export type ApplicationLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * The data needed to update a ApplicationLog.
     */
    data: XOR<ApplicationLogUpdateInput, ApplicationLogUncheckedUpdateInput>
    /**
     * Choose, which ApplicationLog to update.
     */
    where: ApplicationLogWhereUniqueInput
  }

  /**
   * ApplicationLog updateMany
   */
  export type ApplicationLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ApplicationLogs.
     */
    data: XOR<ApplicationLogUpdateManyMutationInput, ApplicationLogUncheckedUpdateManyInput>
    /**
     * Filter which ApplicationLogs to update
     */
    where?: ApplicationLogWhereInput
  }

  /**
   * ApplicationLog upsert
   */
  export type ApplicationLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * The filter to search for the ApplicationLog to update in case it exists.
     */
    where: ApplicationLogWhereUniqueInput
    /**
     * In case the ApplicationLog found by the `where` argument doesn't exist, create a new ApplicationLog with this data.
     */
    create: XOR<ApplicationLogCreateInput, ApplicationLogUncheckedCreateInput>
    /**
     * In case the ApplicationLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApplicationLogUpdateInput, ApplicationLogUncheckedUpdateInput>
  }

  /**
   * ApplicationLog delete
   */
  export type ApplicationLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter which ApplicationLog to delete.
     */
    where: ApplicationLogWhereUniqueInput
  }

  /**
   * ApplicationLog deleteMany
   */
  export type ApplicationLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationLogs to delete
     */
    where?: ApplicationLogWhereInput
  }

  /**
   * ApplicationLog without action
   */
  export type ApplicationLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
  }


  /**
   * Model AuditLog
   */

  export type AggregateAuditLog = {
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  export type AuditLogMinAggregateOutputType = {
    id: string | null
    table_name: string | null
    record_id: string | null
    action: string | null
    changed_by: string | null
    timestamp: Date | null
  }

  export type AuditLogMaxAggregateOutputType = {
    id: string | null
    table_name: string | null
    record_id: string | null
    action: string | null
    changed_by: string | null
    timestamp: Date | null
  }

  export type AuditLogCountAggregateOutputType = {
    id: number
    table_name: number
    record_id: number
    action: number
    previous_data: number
    new_data: number
    changed_by: number
    timestamp: number
    _all: number
  }


  export type AuditLogMinAggregateInputType = {
    id?: true
    table_name?: true
    record_id?: true
    action?: true
    changed_by?: true
    timestamp?: true
  }

  export type AuditLogMaxAggregateInputType = {
    id?: true
    table_name?: true
    record_id?: true
    action?: true
    changed_by?: true
    timestamp?: true
  }

  export type AuditLogCountAggregateInputType = {
    id?: true
    table_name?: true
    record_id?: true
    action?: true
    previous_data?: true
    new_data?: true
    changed_by?: true
    timestamp?: true
    _all?: true
  }

  export type AuditLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLog to aggregate.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuditLogs
    **/
    _count?: true | AuditLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuditLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuditLogMaxAggregateInputType
  }

  export type GetAuditLogAggregateType<T extends AuditLogAggregateArgs> = {
        [P in keyof T & keyof AggregateAuditLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuditLog[P]>
      : GetScalarType<T[P], AggregateAuditLog[P]>
  }




  export type AuditLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditLogWhereInput
    orderBy?: AuditLogOrderByWithAggregationInput | AuditLogOrderByWithAggregationInput[]
    by: AuditLogScalarFieldEnum[] | AuditLogScalarFieldEnum
    having?: AuditLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuditLogCountAggregateInputType | true
    _min?: AuditLogMinAggregateInputType
    _max?: AuditLogMaxAggregateInputType
  }

  export type AuditLogGroupByOutputType = {
    id: string
    table_name: string
    record_id: string
    action: string
    previous_data: JsonValue
    new_data: JsonValue
    changed_by: string
    timestamp: Date
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  type GetAuditLogGroupByPayload<T extends AuditLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuditLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuditLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
            : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
        }
      >
    >


  export type AuditLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    table_name?: boolean
    record_id?: boolean
    action?: boolean
    previous_data?: boolean
    new_data?: boolean
    changed_by?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["auditLog"]>


  export type AuditLogSelectScalar = {
    id?: boolean
    table_name?: boolean
    record_id?: boolean
    action?: boolean
    previous_data?: boolean
    new_data?: boolean
    changed_by?: boolean
    timestamp?: boolean
  }


  export type $AuditLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuditLog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      table_name: string
      record_id: string
      action: string
      previous_data: Prisma.JsonValue
      new_data: Prisma.JsonValue
      changed_by: string
      timestamp: Date
    }, ExtArgs["result"]["auditLog"]>
    composites: {}
  }

  type AuditLogGetPayload<S extends boolean | null | undefined | AuditLogDefaultArgs> = $Result.GetResult<Prisma.$AuditLogPayload, S>

  type AuditLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AuditLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AuditLogCountAggregateInputType | true
    }

  export interface AuditLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuditLog'], meta: { name: 'AuditLog' } }
    /**
     * Find zero or one AuditLog that matches the filter.
     * @param {AuditLogFindUniqueArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuditLogFindUniqueArgs>(args: SelectSubset<T, AuditLogFindUniqueArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AuditLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AuditLogFindUniqueOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuditLogFindUniqueOrThrowArgs>(args: SelectSubset<T, AuditLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuditLogFindFirstArgs>(args?: SelectSubset<T, AuditLogFindFirstArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuditLogFindFirstOrThrowArgs>(args?: SelectSubset<T, AuditLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AuditLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuditLogs
     * const auditLogs = await prisma.auditLog.findMany()
     * 
     * // Get first 10 AuditLogs
     * const auditLogs = await prisma.auditLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuditLogFindManyArgs>(args?: SelectSubset<T, AuditLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AuditLog.
     * @param {AuditLogCreateArgs} args - Arguments to create a AuditLog.
     * @example
     * // Create one AuditLog
     * const AuditLog = await prisma.auditLog.create({
     *   data: {
     *     // ... data to create a AuditLog
     *   }
     * })
     * 
     */
    create<T extends AuditLogCreateArgs>(args: SelectSubset<T, AuditLogCreateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AuditLogs.
     * @param {AuditLogCreateManyArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuditLogCreateManyArgs>(args?: SelectSubset<T, AuditLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AuditLog.
     * @param {AuditLogDeleteArgs} args - Arguments to delete one AuditLog.
     * @example
     * // Delete one AuditLog
     * const AuditLog = await prisma.auditLog.delete({
     *   where: {
     *     // ... filter to delete one AuditLog
     *   }
     * })
     * 
     */
    delete<T extends AuditLogDeleteArgs>(args: SelectSubset<T, AuditLogDeleteArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AuditLog.
     * @param {AuditLogUpdateArgs} args - Arguments to update one AuditLog.
     * @example
     * // Update one AuditLog
     * const auditLog = await prisma.auditLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuditLogUpdateArgs>(args: SelectSubset<T, AuditLogUpdateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AuditLogs.
     * @param {AuditLogDeleteManyArgs} args - Arguments to filter AuditLogs to delete.
     * @example
     * // Delete a few AuditLogs
     * const { count } = await prisma.auditLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuditLogDeleteManyArgs>(args?: SelectSubset<T, AuditLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuditLogs
     * const auditLog = await prisma.auditLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuditLogUpdateManyArgs>(args: SelectSubset<T, AuditLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AuditLog.
     * @param {AuditLogUpsertArgs} args - Arguments to update or create a AuditLog.
     * @example
     * // Update or create a AuditLog
     * const auditLog = await prisma.auditLog.upsert({
     *   create: {
     *     // ... data to create a AuditLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuditLog we want to update
     *   }
     * })
     */
    upsert<T extends AuditLogUpsertArgs>(args: SelectSubset<T, AuditLogUpsertArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogCountArgs} args - Arguments to filter AuditLogs to count.
     * @example
     * // Count the number of AuditLogs
     * const count = await prisma.auditLog.count({
     *   where: {
     *     // ... the filter for the AuditLogs we want to count
     *   }
     * })
    **/
    count<T extends AuditLogCountArgs>(
      args?: Subset<T, AuditLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuditLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuditLogAggregateArgs>(args: Subset<T, AuditLogAggregateArgs>): Prisma.PrismaPromise<GetAuditLogAggregateType<T>>

    /**
     * Group by AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuditLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuditLogGroupByArgs['orderBy'] }
        : { orderBy?: AuditLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuditLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuditLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuditLog model
   */
  readonly fields: AuditLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuditLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuditLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuditLog model
   */ 
  interface AuditLogFieldRefs {
    readonly id: FieldRef<"AuditLog", 'String'>
    readonly table_name: FieldRef<"AuditLog", 'String'>
    readonly record_id: FieldRef<"AuditLog", 'String'>
    readonly action: FieldRef<"AuditLog", 'String'>
    readonly previous_data: FieldRef<"AuditLog", 'Json'>
    readonly new_data: FieldRef<"AuditLog", 'Json'>
    readonly changed_by: FieldRef<"AuditLog", 'String'>
    readonly timestamp: FieldRef<"AuditLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AuditLog findUnique
   */
  export type AuditLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findUniqueOrThrow
   */
  export type AuditLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findFirst
   */
  export type AuditLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findFirstOrThrow
   */
  export type AuditLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findMany
   */
  export type AuditLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLogs to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog create
   */
  export type AuditLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The data needed to create a AuditLog.
     */
    data: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
  }

  /**
   * AuditLog createMany
   */
  export type AuditLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuditLog update
   */
  export type AuditLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The data needed to update a AuditLog.
     */
    data: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
    /**
     * Choose, which AuditLog to update.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog updateMany
   */
  export type AuditLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuditLogs.
     */
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyInput>
    /**
     * Filter which AuditLogs to update
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog upsert
   */
  export type AuditLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The filter to search for the AuditLog to update in case it exists.
     */
    where: AuditLogWhereUniqueInput
    /**
     * In case the AuditLog found by the `where` argument doesn't exist, create a new AuditLog with this data.
     */
    create: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
    /**
     * In case the AuditLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
  }

  /**
   * AuditLog delete
   */
  export type AuditLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter which AuditLog to delete.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog deleteMany
   */
  export type AuditLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLogs to delete
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog without action
   */
  export type AuditLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
  }


  /**
   * Model Company
   */

  export type AggregateCompany = {
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  export type CompanyAvgAggregateOutputType = {
    number_of_employees: number | null
    annual_revenue: Decimal | null
  }

  export type CompanySumAggregateOutputType = {
    number_of_employees: number | null
    annual_revenue: Decimal | null
  }

  export type CompanyMinAggregateOutputType = {
    id: string | null
    company_name: string | null
    company_short_name: string | null
    company_code: string | null
    registration_number: string | null
    tax_id: string | null
    address: string | null
    city: string | null
    state: string | null
    country: string | null
    postal_code: string | null
    phone: string | null
    email: string | null
    website: string | null
    industry: string | null
    number_of_employees: number | null
    annual_revenue: Decimal | null
    description: string | null
    is_active: boolean | null
  }

  export type CompanyMaxAggregateOutputType = {
    id: string | null
    company_name: string | null
    company_short_name: string | null
    company_code: string | null
    registration_number: string | null
    tax_id: string | null
    address: string | null
    city: string | null
    state: string | null
    country: string | null
    postal_code: string | null
    phone: string | null
    email: string | null
    website: string | null
    industry: string | null
    number_of_employees: number | null
    annual_revenue: Decimal | null
    description: string | null
    is_active: boolean | null
  }

  export type CompanyCountAggregateOutputType = {
    id: number
    company_name: number
    company_short_name: number
    company_code: number
    registration_number: number
    tax_id: number
    address: number
    city: number
    state: number
    country: number
    postal_code: number
    phone: number
    email: number
    website: number
    industry: number
    number_of_employees: number
    annual_revenue: number
    description: number
    is_active: number
    _all: number
  }


  export type CompanyAvgAggregateInputType = {
    number_of_employees?: true
    annual_revenue?: true
  }

  export type CompanySumAggregateInputType = {
    number_of_employees?: true
    annual_revenue?: true
  }

  export type CompanyMinAggregateInputType = {
    id?: true
    company_name?: true
    company_short_name?: true
    company_code?: true
    registration_number?: true
    tax_id?: true
    address?: true
    city?: true
    state?: true
    country?: true
    postal_code?: true
    phone?: true
    email?: true
    website?: true
    industry?: true
    number_of_employees?: true
    annual_revenue?: true
    description?: true
    is_active?: true
  }

  export type CompanyMaxAggregateInputType = {
    id?: true
    company_name?: true
    company_short_name?: true
    company_code?: true
    registration_number?: true
    tax_id?: true
    address?: true
    city?: true
    state?: true
    country?: true
    postal_code?: true
    phone?: true
    email?: true
    website?: true
    industry?: true
    number_of_employees?: true
    annual_revenue?: true
    description?: true
    is_active?: true
  }

  export type CompanyCountAggregateInputType = {
    id?: true
    company_name?: true
    company_short_name?: true
    company_code?: true
    registration_number?: true
    tax_id?: true
    address?: true
    city?: true
    state?: true
    country?: true
    postal_code?: true
    phone?: true
    email?: true
    website?: true
    industry?: true
    number_of_employees?: true
    annual_revenue?: true
    description?: true
    is_active?: true
    _all?: true
  }

  export type CompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Company to aggregate.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Companies
    **/
    _count?: true | CompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyMaxAggregateInputType
  }

  export type GetCompanyAggregateType<T extends CompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompany[P]>
      : GetScalarType<T[P], AggregateCompany[P]>
  }




  export type CompanyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithAggregationInput | CompanyOrderByWithAggregationInput[]
    by: CompanyScalarFieldEnum[] | CompanyScalarFieldEnum
    having?: CompanyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyCountAggregateInputType | true
    _avg?: CompanyAvgAggregateInputType
    _sum?: CompanySumAggregateInputType
    _min?: CompanyMinAggregateInputType
    _max?: CompanyMaxAggregateInputType
  }

  export type CompanyGroupByOutputType = {
    id: string
    company_name: string
    company_short_name: string | null
    company_code: string | null
    registration_number: string
    tax_id: string
    address: string | null
    city: string | null
    state: string | null
    country: string | null
    postal_code: string | null
    phone: string
    email: string
    website: string | null
    industry: string | null
    number_of_employees: number | null
    annual_revenue: Decimal | null
    description: string | null
    is_active: boolean
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  type GetCompanyGroupByPayload<T extends CompanyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyGroupByOutputType[P]>
        }
      >
    >


  export type CompanySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    company_name?: boolean
    company_short_name?: boolean
    company_code?: boolean
    registration_number?: boolean
    tax_id?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    postal_code?: boolean
    phone?: boolean
    email?: boolean
    website?: boolean
    industry?: boolean
    number_of_employees?: boolean
    annual_revenue?: boolean
    description?: boolean
    is_active?: boolean
    CompanyAdditionalInfo?: boolean | Company$CompanyAdditionalInfoArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>


  export type CompanySelectScalar = {
    id?: boolean
    company_name?: boolean
    company_short_name?: boolean
    company_code?: boolean
    registration_number?: boolean
    tax_id?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    postal_code?: boolean
    phone?: boolean
    email?: boolean
    website?: boolean
    industry?: boolean
    number_of_employees?: boolean
    annual_revenue?: boolean
    description?: boolean
    is_active?: boolean
  }

  export type CompanyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CompanyAdditionalInfo?: boolean | Company$CompanyAdditionalInfoArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CompanyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Company"
    objects: {
      CompanyAdditionalInfo: Prisma.$CompanyAdditionalInfoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      company_name: string
      company_short_name: string | null
      company_code: string | null
      registration_number: string
      tax_id: string
      address: string | null
      city: string | null
      state: string | null
      country: string | null
      postal_code: string | null
      phone: string
      email: string
      website: string | null
      industry: string | null
      number_of_employees: number | null
      annual_revenue: Prisma.Decimal | null
      description: string | null
      is_active: boolean
    }, ExtArgs["result"]["company"]>
    composites: {}
  }

  type CompanyGetPayload<S extends boolean | null | undefined | CompanyDefaultArgs> = $Result.GetResult<Prisma.$CompanyPayload, S>

  type CompanyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CompanyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CompanyCountAggregateInputType | true
    }

  export interface CompanyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Company'], meta: { name: 'Company' } }
    /**
     * Find zero or one Company that matches the filter.
     * @param {CompanyFindUniqueArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyFindUniqueArgs>(args: SelectSubset<T, CompanyFindUniqueArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Company that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CompanyFindUniqueOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Company that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyFindFirstArgs>(args?: SelectSubset<T, CompanyFindFirstArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Company that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.company.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.company.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyWithIdOnly = await prisma.company.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompanyFindManyArgs>(args?: SelectSubset<T, CompanyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Company.
     * @param {CompanyCreateArgs} args - Arguments to create a Company.
     * @example
     * // Create one Company
     * const Company = await prisma.company.create({
     *   data: {
     *     // ... data to create a Company
     *   }
     * })
     * 
     */
    create<T extends CompanyCreateArgs>(args: SelectSubset<T, CompanyCreateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Companies.
     * @param {CompanyCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyCreateManyArgs>(args?: SelectSubset<T, CompanyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Company.
     * @param {CompanyDeleteArgs} args - Arguments to delete one Company.
     * @example
     * // Delete one Company
     * const Company = await prisma.company.delete({
     *   where: {
     *     // ... filter to delete one Company
     *   }
     * })
     * 
     */
    delete<T extends CompanyDeleteArgs>(args: SelectSubset<T, CompanyDeleteArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Company.
     * @param {CompanyUpdateArgs} args - Arguments to update one Company.
     * @example
     * // Update one Company
     * const company = await prisma.company.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyUpdateArgs>(args: SelectSubset<T, CompanyUpdateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Companies.
     * @param {CompanyDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.company.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyDeleteManyArgs>(args?: SelectSubset<T, CompanyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyUpdateManyArgs>(args: SelectSubset<T, CompanyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Company.
     * @param {CompanyUpsertArgs} args - Arguments to update or create a Company.
     * @example
     * // Update or create a Company
     * const company = await prisma.company.upsert({
     *   create: {
     *     // ... data to create a Company
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Company we want to update
     *   }
     * })
     */
    upsert<T extends CompanyUpsertArgs>(args: SelectSubset<T, CompanyUpsertArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.company.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends CompanyCountArgs>(
      args?: Subset<T, CompanyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAggregateArgs>(args: Subset<T, CompanyAggregateArgs>): Prisma.PrismaPromise<GetCompanyAggregateType<T>>

    /**
     * Group by Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyGroupByArgs['orderBy'] }
        : { orderBy?: CompanyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Company model
   */
  readonly fields: CompanyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Company.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CompanyAdditionalInfo<T extends Company$CompanyAdditionalInfoArgs<ExtArgs> = {}>(args?: Subset<T, Company$CompanyAdditionalInfoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Company model
   */ 
  interface CompanyFieldRefs {
    readonly id: FieldRef<"Company", 'String'>
    readonly company_name: FieldRef<"Company", 'String'>
    readonly company_short_name: FieldRef<"Company", 'String'>
    readonly company_code: FieldRef<"Company", 'String'>
    readonly registration_number: FieldRef<"Company", 'String'>
    readonly tax_id: FieldRef<"Company", 'String'>
    readonly address: FieldRef<"Company", 'String'>
    readonly city: FieldRef<"Company", 'String'>
    readonly state: FieldRef<"Company", 'String'>
    readonly country: FieldRef<"Company", 'String'>
    readonly postal_code: FieldRef<"Company", 'String'>
    readonly phone: FieldRef<"Company", 'String'>
    readonly email: FieldRef<"Company", 'String'>
    readonly website: FieldRef<"Company", 'String'>
    readonly industry: FieldRef<"Company", 'String'>
    readonly number_of_employees: FieldRef<"Company", 'Int'>
    readonly annual_revenue: FieldRef<"Company", 'Decimal'>
    readonly description: FieldRef<"Company", 'String'>
    readonly is_active: FieldRef<"Company", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Company findUnique
   */
  export type CompanyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findUniqueOrThrow
   */
  export type CompanyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findFirst
   */
  export type CompanyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findFirstOrThrow
   */
  export type CompanyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findMany
   */
  export type CompanyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Companies to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company create
   */
  export type CompanyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to create a Company.
     */
    data: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
  }

  /**
   * Company createMany
   */
  export type CompanyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Company update
   */
  export type CompanyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to update a Company.
     */
    data: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
    /**
     * Choose, which Company to update.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company updateMany
   */
  export type CompanyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Companies.
     */
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyInput>
    /**
     * Filter which Companies to update
     */
    where?: CompanyWhereInput
  }

  /**
   * Company upsert
   */
  export type CompanyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The filter to search for the Company to update in case it exists.
     */
    where: CompanyWhereUniqueInput
    /**
     * In case the Company found by the `where` argument doesn't exist, create a new Company with this data.
     */
    create: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
    /**
     * In case the Company was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
  }

  /**
   * Company delete
   */
  export type CompanyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter which Company to delete.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company deleteMany
   */
  export type CompanyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Companies to delete
     */
    where?: CompanyWhereInput
  }

  /**
   * Company.CompanyAdditionalInfo
   */
  export type Company$CompanyAdditionalInfoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    where?: CompanyAdditionalInfoWhereInput
    orderBy?: CompanyAdditionalInfoOrderByWithRelationInput | CompanyAdditionalInfoOrderByWithRelationInput[]
    cursor?: CompanyAdditionalInfoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompanyAdditionalInfoScalarFieldEnum | CompanyAdditionalInfoScalarFieldEnum[]
  }

  /**
   * Company without action
   */
  export type CompanyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    fullname: string | null
    username: string | null
    email: string | null
    password: string | null
    address: string | null
    phone: string | null
    is_active: boolean | null
    is_admin: boolean | null
    is_password_reset: boolean | null
    user_type: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    fullname: string | null
    username: string | null
    email: string | null
    password: string | null
    address: string | null
    phone: string | null
    is_active: boolean | null
    is_admin: boolean | null
    is_password_reset: boolean | null
    user_type: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    fullname: number
    username: number
    email: number
    password: number
    address: number
    phone: number
    is_active: number
    is_admin: number
    is_password_reset: number
    user_type: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    fullname?: true
    username?: true
    email?: true
    password?: true
    address?: true
    phone?: true
    is_active?: true
    is_admin?: true
    is_password_reset?: true
    user_type?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    fullname?: true
    username?: true
    email?: true
    password?: true
    address?: true
    phone?: true
    is_active?: true
    is_admin?: true
    is_password_reset?: true
    user_type?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    fullname?: true
    username?: true
    email?: true
    password?: true
    address?: true
    phone?: true
    is_active?: true
    is_admin?: true
    is_password_reset?: true
    user_type?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    fullname: string
    username: string
    email: string
    password: string
    address: string | null
    phone: string
    is_active: boolean | null
    is_admin: boolean | null
    is_password_reset: boolean | null
    user_type: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fullname?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    address?: boolean
    phone?: boolean
    is_active?: boolean
    is_admin?: boolean
    is_password_reset?: boolean
    user_type?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    UserGroups?: boolean | User$UserGroupsArgs<ExtArgs>
    RefreshToken?: boolean | User$RefreshTokenArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>


  export type UserSelectScalar = {
    id?: boolean
    fullname?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    address?: boolean
    phone?: boolean
    is_active?: boolean
    is_admin?: boolean
    is_password_reset?: boolean
    user_type?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserGroups?: boolean | User$UserGroupsArgs<ExtArgs>
    RefreshToken?: boolean | User$RefreshTokenArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      UserGroups: Prisma.$UserGroupPayload<ExtArgs>[]
      RefreshToken: Prisma.$RefreshTokenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      fullname: string
      username: string
      email: string
      password: string
      address: string | null
      phone: string
      is_active: boolean | null
      is_admin: boolean | null
      is_password_reset: boolean | null
      user_type: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    UserGroups<T extends User$UserGroupsArgs<ExtArgs> = {}>(args?: Subset<T, User$UserGroupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findMany"> | Null>
    RefreshToken<T extends User$RefreshTokenArgs<ExtArgs> = {}>(args?: Subset<T, User$RefreshTokenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly fullname: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly address: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly is_active: FieldRef<"User", 'Boolean'>
    readonly is_admin: FieldRef<"User", 'Boolean'>
    readonly is_password_reset: FieldRef<"User", 'Boolean'>
    readonly user_type: FieldRef<"User", 'String'>
    readonly created_at: FieldRef<"User", 'DateTime'>
    readonly created_by: FieldRef<"User", 'String'>
    readonly created_ip: FieldRef<"User", 'String'>
    readonly updated_at: FieldRef<"User", 'DateTime'>
    readonly updated_by: FieldRef<"User", 'String'>
    readonly updated_ip: FieldRef<"User", 'String'>
    readonly company_id: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.UserGroups
   */
  export type User$UserGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    where?: UserGroupWhereInput
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    cursor?: UserGroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserGroupScalarFieldEnum | UserGroupScalarFieldEnum[]
  }

  /**
   * User.RefreshToken
   */
  export type User$RefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model RefreshToken
   */

  export type AggregateRefreshToken = {
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  export type RefreshTokenMinAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
    isRevoked: boolean | null
  }

  export type RefreshTokenMaxAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
    isRevoked: boolean | null
  }

  export type RefreshTokenCountAggregateOutputType = {
    id: number
    token: number
    userId: number
    expiresAt: number
    createdAt: number
    isRevoked: number
    _all: number
  }


  export type RefreshTokenMinAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    isRevoked?: true
  }

  export type RefreshTokenMaxAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    isRevoked?: true
  }

  export type RefreshTokenCountAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    isRevoked?: true
    _all?: true
  }

  export type RefreshTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshToken to aggregate.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RefreshTokens
    **/
    _count?: true | RefreshTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type GetRefreshTokenAggregateType<T extends RefreshTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshToken[P]>
      : GetScalarType<T[P], AggregateRefreshToken[P]>
  }




  export type RefreshTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithAggregationInput | RefreshTokenOrderByWithAggregationInput[]
    by: RefreshTokenScalarFieldEnum[] | RefreshTokenScalarFieldEnum
    having?: RefreshTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshTokenCountAggregateInputType | true
    _min?: RefreshTokenMinAggregateInputType
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type RefreshTokenGroupByOutputType = {
    id: string
    token: string
    userId: string
    expiresAt: Date
    createdAt: Date
    isRevoked: boolean
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  type GetRefreshTokenGroupByPayload<T extends RefreshTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
        }
      >
    >


  export type RefreshTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    isRevoked?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>


  export type RefreshTokenSelectScalar = {
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    isRevoked?: boolean
  }

  export type RefreshTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $RefreshTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RefreshToken"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      userId: string
      expiresAt: Date
      createdAt: Date
      isRevoked: boolean
    }, ExtArgs["result"]["refreshToken"]>
    composites: {}
  }

  type RefreshTokenGetPayload<S extends boolean | null | undefined | RefreshTokenDefaultArgs> = $Result.GetResult<Prisma.$RefreshTokenPayload, S>

  type RefreshTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RefreshTokenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RefreshTokenCountAggregateInputType | true
    }

  export interface RefreshTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RefreshToken'], meta: { name: 'RefreshToken' } }
    /**
     * Find zero or one RefreshToken that matches the filter.
     * @param {RefreshTokenFindUniqueArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RefreshTokenFindUniqueArgs>(args: SelectSubset<T, RefreshTokenFindUniqueArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RefreshToken that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RefreshTokenFindUniqueOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RefreshTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, RefreshTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RefreshToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RefreshTokenFindFirstArgs>(args?: SelectSubset<T, RefreshTokenFindFirstArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RefreshToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RefreshTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, RefreshTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RefreshTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany()
     * 
     * // Get first 10 RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RefreshTokenFindManyArgs>(args?: SelectSubset<T, RefreshTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RefreshToken.
     * @param {RefreshTokenCreateArgs} args - Arguments to create a RefreshToken.
     * @example
     * // Create one RefreshToken
     * const RefreshToken = await prisma.refreshToken.create({
     *   data: {
     *     // ... data to create a RefreshToken
     *   }
     * })
     * 
     */
    create<T extends RefreshTokenCreateArgs>(args: SelectSubset<T, RefreshTokenCreateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RefreshTokens.
     * @param {RefreshTokenCreateManyArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RefreshTokenCreateManyArgs>(args?: SelectSubset<T, RefreshTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RefreshToken.
     * @param {RefreshTokenDeleteArgs} args - Arguments to delete one RefreshToken.
     * @example
     * // Delete one RefreshToken
     * const RefreshToken = await prisma.refreshToken.delete({
     *   where: {
     *     // ... filter to delete one RefreshToken
     *   }
     * })
     * 
     */
    delete<T extends RefreshTokenDeleteArgs>(args: SelectSubset<T, RefreshTokenDeleteArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RefreshToken.
     * @param {RefreshTokenUpdateArgs} args - Arguments to update one RefreshToken.
     * @example
     * // Update one RefreshToken
     * const refreshToken = await prisma.refreshToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RefreshTokenUpdateArgs>(args: SelectSubset<T, RefreshTokenUpdateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RefreshTokens.
     * @param {RefreshTokenDeleteManyArgs} args - Arguments to filter RefreshTokens to delete.
     * @example
     * // Delete a few RefreshTokens
     * const { count } = await prisma.refreshToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RefreshTokenDeleteManyArgs>(args?: SelectSubset<T, RefreshTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RefreshTokenUpdateManyArgs>(args: SelectSubset<T, RefreshTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RefreshToken.
     * @param {RefreshTokenUpsertArgs} args - Arguments to update or create a RefreshToken.
     * @example
     * // Update or create a RefreshToken
     * const refreshToken = await prisma.refreshToken.upsert({
     *   create: {
     *     // ... data to create a RefreshToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RefreshToken we want to update
     *   }
     * })
     */
    upsert<T extends RefreshTokenUpsertArgs>(args: SelectSubset<T, RefreshTokenUpsertArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenCountArgs} args - Arguments to filter RefreshTokens to count.
     * @example
     * // Count the number of RefreshTokens
     * const count = await prisma.refreshToken.count({
     *   where: {
     *     // ... the filter for the RefreshTokens we want to count
     *   }
     * })
    **/
    count<T extends RefreshTokenCountArgs>(
      args?: Subset<T, RefreshTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshTokenAggregateArgs>(args: Subset<T, RefreshTokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshTokenAggregateType<T>>

    /**
     * Group by RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RefreshTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RefreshTokenGroupByArgs['orderBy'] }
        : { orderBy?: RefreshTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RefreshTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RefreshToken model
   */
  readonly fields: RefreshTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RefreshToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RefreshTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RefreshToken model
   */ 
  interface RefreshTokenFieldRefs {
    readonly id: FieldRef<"RefreshToken", 'String'>
    readonly token: FieldRef<"RefreshToken", 'String'>
    readonly userId: FieldRef<"RefreshToken", 'String'>
    readonly expiresAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly createdAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly isRevoked: FieldRef<"RefreshToken", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * RefreshToken findUnique
   */
  export type RefreshTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findUniqueOrThrow
   */
  export type RefreshTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findFirst
   */
  export type RefreshTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findFirstOrThrow
   */
  export type RefreshTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findMany
   */
  export type RefreshTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshTokens to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken create
   */
  export type RefreshTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a RefreshToken.
     */
    data: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
  }

  /**
   * RefreshToken createMany
   */
  export type RefreshTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefreshToken update
   */
  export type RefreshTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a RefreshToken.
     */
    data: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
    /**
     * Choose, which RefreshToken to update.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken updateMany
   */
  export type RefreshTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
  }

  /**
   * RefreshToken upsert
   */
  export type RefreshTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the RefreshToken to update in case it exists.
     */
    where: RefreshTokenWhereUniqueInput
    /**
     * In case the RefreshToken found by the `where` argument doesn't exist, create a new RefreshToken with this data.
     */
    create: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
    /**
     * In case the RefreshToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
  }

  /**
   * RefreshToken delete
   */
  export type RefreshTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter which RefreshToken to delete.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken deleteMany
   */
  export type RefreshTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshTokens to delete
     */
    where?: RefreshTokenWhereInput
  }

  /**
   * RefreshToken without action
   */
  export type RefreshTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
  }


  /**
   * Model SecurityRule
   */

  export type AggregateSecurityRule = {
    _count: SecurityRuleCountAggregateOutputType | null
    _min: SecurityRuleMinAggregateOutputType | null
    _max: SecurityRuleMaxAggregateOutputType | null
  }

  export type SecurityRuleMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityRuleMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityRuleCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type SecurityRuleMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityRuleMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityRuleCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type SecurityRuleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityRule to aggregate.
     */
    where?: SecurityRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRules to fetch.
     */
    orderBy?: SecurityRuleOrderByWithRelationInput | SecurityRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SecurityRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SecurityRules
    **/
    _count?: true | SecurityRuleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SecurityRuleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SecurityRuleMaxAggregateInputType
  }

  export type GetSecurityRuleAggregateType<T extends SecurityRuleAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurityRule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurityRule[P]>
      : GetScalarType<T[P], AggregateSecurityRule[P]>
  }




  export type SecurityRuleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityRuleWhereInput
    orderBy?: SecurityRuleOrderByWithAggregationInput | SecurityRuleOrderByWithAggregationInput[]
    by: SecurityRuleScalarFieldEnum[] | SecurityRuleScalarFieldEnum
    having?: SecurityRuleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SecurityRuleCountAggregateInputType | true
    _min?: SecurityRuleMinAggregateInputType
    _max?: SecurityRuleMaxAggregateInputType
  }

  export type SecurityRuleGroupByOutputType = {
    id: string
    name: string
    description: string | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: SecurityRuleCountAggregateOutputType | null
    _min: SecurityRuleMinAggregateOutputType | null
    _max: SecurityRuleMaxAggregateOutputType | null
  }

  type GetSecurityRuleGroupByPayload<T extends SecurityRuleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SecurityRuleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SecurityRuleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SecurityRuleGroupByOutputType[P]>
            : GetScalarType<T[P], SecurityRuleGroupByOutputType[P]>
        }
      >
    >


  export type SecurityRuleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    SecurityRuleWiseMenuPermissions?: boolean | SecurityRule$SecurityRuleWiseMenuPermissionsArgs<ExtArgs>
    SecurityGroupRules?: boolean | SecurityRule$SecurityGroupRulesArgs<ExtArgs>
    _count?: boolean | SecurityRuleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["securityRule"]>


  export type SecurityRuleSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type SecurityRuleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SecurityRuleWiseMenuPermissions?: boolean | SecurityRule$SecurityRuleWiseMenuPermissionsArgs<ExtArgs>
    SecurityGroupRules?: boolean | SecurityRule$SecurityGroupRulesArgs<ExtArgs>
    _count?: boolean | SecurityRuleCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SecurityRulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SecurityRule"
    objects: {
      SecurityRuleWiseMenuPermissions: Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>[]
      SecurityGroupRules: Prisma.$SecurityGroupRulePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["securityRule"]>
    composites: {}
  }

  type SecurityRuleGetPayload<S extends boolean | null | undefined | SecurityRuleDefaultArgs> = $Result.GetResult<Prisma.$SecurityRulePayload, S>

  type SecurityRuleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SecurityRuleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SecurityRuleCountAggregateInputType | true
    }

  export interface SecurityRuleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SecurityRule'], meta: { name: 'SecurityRule' } }
    /**
     * Find zero or one SecurityRule that matches the filter.
     * @param {SecurityRuleFindUniqueArgs} args - Arguments to find a SecurityRule
     * @example
     * // Get one SecurityRule
     * const securityRule = await prisma.securityRule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SecurityRuleFindUniqueArgs>(args: SelectSubset<T, SecurityRuleFindUniqueArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SecurityRule that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SecurityRuleFindUniqueOrThrowArgs} args - Arguments to find a SecurityRule
     * @example
     * // Get one SecurityRule
     * const securityRule = await prisma.securityRule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SecurityRuleFindUniqueOrThrowArgs>(args: SelectSubset<T, SecurityRuleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SecurityRule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleFindFirstArgs} args - Arguments to find a SecurityRule
     * @example
     * // Get one SecurityRule
     * const securityRule = await prisma.securityRule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SecurityRuleFindFirstArgs>(args?: SelectSubset<T, SecurityRuleFindFirstArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SecurityRule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleFindFirstOrThrowArgs} args - Arguments to find a SecurityRule
     * @example
     * // Get one SecurityRule
     * const securityRule = await prisma.securityRule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SecurityRuleFindFirstOrThrowArgs>(args?: SelectSubset<T, SecurityRuleFindFirstOrThrowArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SecurityRules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SecurityRules
     * const securityRules = await prisma.securityRule.findMany()
     * 
     * // Get first 10 SecurityRules
     * const securityRules = await prisma.securityRule.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const securityRuleWithIdOnly = await prisma.securityRule.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SecurityRuleFindManyArgs>(args?: SelectSubset<T, SecurityRuleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SecurityRule.
     * @param {SecurityRuleCreateArgs} args - Arguments to create a SecurityRule.
     * @example
     * // Create one SecurityRule
     * const SecurityRule = await prisma.securityRule.create({
     *   data: {
     *     // ... data to create a SecurityRule
     *   }
     * })
     * 
     */
    create<T extends SecurityRuleCreateArgs>(args: SelectSubset<T, SecurityRuleCreateArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SecurityRules.
     * @param {SecurityRuleCreateManyArgs} args - Arguments to create many SecurityRules.
     * @example
     * // Create many SecurityRules
     * const securityRule = await prisma.securityRule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SecurityRuleCreateManyArgs>(args?: SelectSubset<T, SecurityRuleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SecurityRule.
     * @param {SecurityRuleDeleteArgs} args - Arguments to delete one SecurityRule.
     * @example
     * // Delete one SecurityRule
     * const SecurityRule = await prisma.securityRule.delete({
     *   where: {
     *     // ... filter to delete one SecurityRule
     *   }
     * })
     * 
     */
    delete<T extends SecurityRuleDeleteArgs>(args: SelectSubset<T, SecurityRuleDeleteArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SecurityRule.
     * @param {SecurityRuleUpdateArgs} args - Arguments to update one SecurityRule.
     * @example
     * // Update one SecurityRule
     * const securityRule = await prisma.securityRule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SecurityRuleUpdateArgs>(args: SelectSubset<T, SecurityRuleUpdateArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SecurityRules.
     * @param {SecurityRuleDeleteManyArgs} args - Arguments to filter SecurityRules to delete.
     * @example
     * // Delete a few SecurityRules
     * const { count } = await prisma.securityRule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SecurityRuleDeleteManyArgs>(args?: SelectSubset<T, SecurityRuleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SecurityRules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SecurityRules
     * const securityRule = await prisma.securityRule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SecurityRuleUpdateManyArgs>(args: SelectSubset<T, SecurityRuleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SecurityRule.
     * @param {SecurityRuleUpsertArgs} args - Arguments to update or create a SecurityRule.
     * @example
     * // Update or create a SecurityRule
     * const securityRule = await prisma.securityRule.upsert({
     *   create: {
     *     // ... data to create a SecurityRule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SecurityRule we want to update
     *   }
     * })
     */
    upsert<T extends SecurityRuleUpsertArgs>(args: SelectSubset<T, SecurityRuleUpsertArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SecurityRules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleCountArgs} args - Arguments to filter SecurityRules to count.
     * @example
     * // Count the number of SecurityRules
     * const count = await prisma.securityRule.count({
     *   where: {
     *     // ... the filter for the SecurityRules we want to count
     *   }
     * })
    **/
    count<T extends SecurityRuleCountArgs>(
      args?: Subset<T, SecurityRuleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SecurityRuleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SecurityRule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SecurityRuleAggregateArgs>(args: Subset<T, SecurityRuleAggregateArgs>): Prisma.PrismaPromise<GetSecurityRuleAggregateType<T>>

    /**
     * Group by SecurityRule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SecurityRuleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SecurityRuleGroupByArgs['orderBy'] }
        : { orderBy?: SecurityRuleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SecurityRuleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurityRuleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SecurityRule model
   */
  readonly fields: SecurityRuleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SecurityRule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SecurityRuleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    SecurityRuleWiseMenuPermissions<T extends SecurityRule$SecurityRuleWiseMenuPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, SecurityRule$SecurityRuleWiseMenuPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findMany"> | Null>
    SecurityGroupRules<T extends SecurityRule$SecurityGroupRulesArgs<ExtArgs> = {}>(args?: Subset<T, SecurityRule$SecurityGroupRulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SecurityRule model
   */ 
  interface SecurityRuleFieldRefs {
    readonly id: FieldRef<"SecurityRule", 'String'>
    readonly name: FieldRef<"SecurityRule", 'String'>
    readonly description: FieldRef<"SecurityRule", 'String'>
    readonly created_at: FieldRef<"SecurityRule", 'DateTime'>
    readonly created_by: FieldRef<"SecurityRule", 'String'>
    readonly created_ip: FieldRef<"SecurityRule", 'String'>
    readonly updated_at: FieldRef<"SecurityRule", 'DateTime'>
    readonly updated_by: FieldRef<"SecurityRule", 'String'>
    readonly updated_ip: FieldRef<"SecurityRule", 'String'>
    readonly company_id: FieldRef<"SecurityRule", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SecurityRule findUnique
   */
  export type SecurityRuleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRule to fetch.
     */
    where: SecurityRuleWhereUniqueInput
  }

  /**
   * SecurityRule findUniqueOrThrow
   */
  export type SecurityRuleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRule to fetch.
     */
    where: SecurityRuleWhereUniqueInput
  }

  /**
   * SecurityRule findFirst
   */
  export type SecurityRuleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRule to fetch.
     */
    where?: SecurityRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRules to fetch.
     */
    orderBy?: SecurityRuleOrderByWithRelationInput | SecurityRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityRules.
     */
    cursor?: SecurityRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityRules.
     */
    distinct?: SecurityRuleScalarFieldEnum | SecurityRuleScalarFieldEnum[]
  }

  /**
   * SecurityRule findFirstOrThrow
   */
  export type SecurityRuleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRule to fetch.
     */
    where?: SecurityRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRules to fetch.
     */
    orderBy?: SecurityRuleOrderByWithRelationInput | SecurityRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityRules.
     */
    cursor?: SecurityRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityRules.
     */
    distinct?: SecurityRuleScalarFieldEnum | SecurityRuleScalarFieldEnum[]
  }

  /**
   * SecurityRule findMany
   */
  export type SecurityRuleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRules to fetch.
     */
    where?: SecurityRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRules to fetch.
     */
    orderBy?: SecurityRuleOrderByWithRelationInput | SecurityRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SecurityRules.
     */
    cursor?: SecurityRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRules.
     */
    skip?: number
    distinct?: SecurityRuleScalarFieldEnum | SecurityRuleScalarFieldEnum[]
  }

  /**
   * SecurityRule create
   */
  export type SecurityRuleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * The data needed to create a SecurityRule.
     */
    data: XOR<SecurityRuleCreateInput, SecurityRuleUncheckedCreateInput>
  }

  /**
   * SecurityRule createMany
   */
  export type SecurityRuleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SecurityRules.
     */
    data: SecurityRuleCreateManyInput | SecurityRuleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SecurityRule update
   */
  export type SecurityRuleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * The data needed to update a SecurityRule.
     */
    data: XOR<SecurityRuleUpdateInput, SecurityRuleUncheckedUpdateInput>
    /**
     * Choose, which SecurityRule to update.
     */
    where: SecurityRuleWhereUniqueInput
  }

  /**
   * SecurityRule updateMany
   */
  export type SecurityRuleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SecurityRules.
     */
    data: XOR<SecurityRuleUpdateManyMutationInput, SecurityRuleUncheckedUpdateManyInput>
    /**
     * Filter which SecurityRules to update
     */
    where?: SecurityRuleWhereInput
  }

  /**
   * SecurityRule upsert
   */
  export type SecurityRuleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * The filter to search for the SecurityRule to update in case it exists.
     */
    where: SecurityRuleWhereUniqueInput
    /**
     * In case the SecurityRule found by the `where` argument doesn't exist, create a new SecurityRule with this data.
     */
    create: XOR<SecurityRuleCreateInput, SecurityRuleUncheckedCreateInput>
    /**
     * In case the SecurityRule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SecurityRuleUpdateInput, SecurityRuleUncheckedUpdateInput>
  }

  /**
   * SecurityRule delete
   */
  export type SecurityRuleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter which SecurityRule to delete.
     */
    where: SecurityRuleWhereUniqueInput
  }

  /**
   * SecurityRule deleteMany
   */
  export type SecurityRuleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityRules to delete
     */
    where?: SecurityRuleWhereInput
  }

  /**
   * SecurityRule.SecurityRuleWiseMenuPermissions
   */
  export type SecurityRule$SecurityRuleWiseMenuPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    where?: SecurityRuleWiseMenuPermissionWhereInput
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithRelationInput | SecurityRuleWiseMenuPermissionOrderByWithRelationInput[]
    cursor?: SecurityRuleWiseMenuPermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SecurityRuleWiseMenuPermissionScalarFieldEnum | SecurityRuleWiseMenuPermissionScalarFieldEnum[]
  }

  /**
   * SecurityRule.SecurityGroupRules
   */
  export type SecurityRule$SecurityGroupRulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    where?: SecurityGroupRuleWhereInput
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    cursor?: SecurityGroupRuleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SecurityGroupRuleScalarFieldEnum | SecurityGroupRuleScalarFieldEnum[]
  }

  /**
   * SecurityRule without action
   */
  export type SecurityRuleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
  }


  /**
   * Model SecurityRuleWiseMenuPermission
   */

  export type AggregateSecurityRuleWiseMenuPermission = {
    _count: SecurityRuleWiseMenuPermissionCountAggregateOutputType | null
    _avg: SecurityRuleWiseMenuPermissionAvgAggregateOutputType | null
    _sum: SecurityRuleWiseMenuPermissionSumAggregateOutputType | null
    _min: SecurityRuleWiseMenuPermissionMinAggregateOutputType | null
    _max: SecurityRuleWiseMenuPermissionMaxAggregateOutputType | null
  }

  export type SecurityRuleWiseMenuPermissionAvgAggregateOutputType = {
    menu_id: number | null
  }

  export type SecurityRuleWiseMenuPermissionSumAggregateOutputType = {
    menu_id: number | null
  }

  export type SecurityRuleWiseMenuPermissionMinAggregateOutputType = {
    id: string | null
    menu_id: number | null
    can_view: boolean | null
    can_create: boolean | null
    can_update: boolean | null
    can_delete: boolean | null
    can_report: boolean | null
    rule_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityRuleWiseMenuPermissionMaxAggregateOutputType = {
    id: string | null
    menu_id: number | null
    can_view: boolean | null
    can_create: boolean | null
    can_update: boolean | null
    can_delete: boolean | null
    can_report: boolean | null
    rule_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityRuleWiseMenuPermissionCountAggregateOutputType = {
    id: number
    menu_id: number
    can_view: number
    can_create: number
    can_update: number
    can_delete: number
    can_report: number
    rule_id: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type SecurityRuleWiseMenuPermissionAvgAggregateInputType = {
    menu_id?: true
  }

  export type SecurityRuleWiseMenuPermissionSumAggregateInputType = {
    menu_id?: true
  }

  export type SecurityRuleWiseMenuPermissionMinAggregateInputType = {
    id?: true
    menu_id?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityRuleWiseMenuPermissionMaxAggregateInputType = {
    id?: true
    menu_id?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityRuleWiseMenuPermissionCountAggregateInputType = {
    id?: true
    menu_id?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type SecurityRuleWiseMenuPermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityRuleWiseMenuPermission to aggregate.
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRuleWiseMenuPermissions to fetch.
     */
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithRelationInput | SecurityRuleWiseMenuPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SecurityRuleWiseMenuPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRuleWiseMenuPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRuleWiseMenuPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SecurityRuleWiseMenuPermissions
    **/
    _count?: true | SecurityRuleWiseMenuPermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SecurityRuleWiseMenuPermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SecurityRuleWiseMenuPermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SecurityRuleWiseMenuPermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SecurityRuleWiseMenuPermissionMaxAggregateInputType
  }

  export type GetSecurityRuleWiseMenuPermissionAggregateType<T extends SecurityRuleWiseMenuPermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurityRuleWiseMenuPermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurityRuleWiseMenuPermission[P]>
      : GetScalarType<T[P], AggregateSecurityRuleWiseMenuPermission[P]>
  }




  export type SecurityRuleWiseMenuPermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityRuleWiseMenuPermissionWhereInput
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithAggregationInput | SecurityRuleWiseMenuPermissionOrderByWithAggregationInput[]
    by: SecurityRuleWiseMenuPermissionScalarFieldEnum[] | SecurityRuleWiseMenuPermissionScalarFieldEnum
    having?: SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SecurityRuleWiseMenuPermissionCountAggregateInputType | true
    _avg?: SecurityRuleWiseMenuPermissionAvgAggregateInputType
    _sum?: SecurityRuleWiseMenuPermissionSumAggregateInputType
    _min?: SecurityRuleWiseMenuPermissionMinAggregateInputType
    _max?: SecurityRuleWiseMenuPermissionMaxAggregateInputType
  }

  export type SecurityRuleWiseMenuPermissionGroupByOutputType = {
    id: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    rule_id: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: SecurityRuleWiseMenuPermissionCountAggregateOutputType | null
    _avg: SecurityRuleWiseMenuPermissionAvgAggregateOutputType | null
    _sum: SecurityRuleWiseMenuPermissionSumAggregateOutputType | null
    _min: SecurityRuleWiseMenuPermissionMinAggregateOutputType | null
    _max: SecurityRuleWiseMenuPermissionMaxAggregateOutputType | null
  }

  type GetSecurityRuleWiseMenuPermissionGroupByPayload<T extends SecurityRuleWiseMenuPermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SecurityRuleWiseMenuPermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SecurityRuleWiseMenuPermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SecurityRuleWiseMenuPermissionGroupByOutputType[P]>
            : GetScalarType<T[P], SecurityRuleWiseMenuPermissionGroupByOutputType[P]>
        }
      >
    >


  export type SecurityRuleWiseMenuPermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menu_id?: boolean
    can_view?: boolean
    can_create?: boolean
    can_update?: boolean
    can_delete?: boolean
    can_report?: boolean
    rule_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    security_rule?: boolean | SecurityRuleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["securityRuleWiseMenuPermission"]>


  export type SecurityRuleWiseMenuPermissionSelectScalar = {
    id?: boolean
    menu_id?: boolean
    can_view?: boolean
    can_create?: boolean
    can_update?: boolean
    can_delete?: boolean
    can_report?: boolean
    rule_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type SecurityRuleWiseMenuPermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    security_rule?: boolean | SecurityRuleDefaultArgs<ExtArgs>
  }

  export type $SecurityRuleWiseMenuPermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SecurityRuleWiseMenuPermission"
    objects: {
      security_rule: Prisma.$SecurityRulePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      menu_id: number
      can_view: boolean
      can_create: boolean
      can_update: boolean
      can_delete: boolean
      can_report: boolean
      rule_id: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["securityRuleWiseMenuPermission"]>
    composites: {}
  }

  type SecurityRuleWiseMenuPermissionGetPayload<S extends boolean | null | undefined | SecurityRuleWiseMenuPermissionDefaultArgs> = $Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload, S>

  type SecurityRuleWiseMenuPermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SecurityRuleWiseMenuPermissionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SecurityRuleWiseMenuPermissionCountAggregateInputType | true
    }

  export interface SecurityRuleWiseMenuPermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SecurityRuleWiseMenuPermission'], meta: { name: 'SecurityRuleWiseMenuPermission' } }
    /**
     * Find zero or one SecurityRuleWiseMenuPermission that matches the filter.
     * @param {SecurityRuleWiseMenuPermissionFindUniqueArgs} args - Arguments to find a SecurityRuleWiseMenuPermission
     * @example
     * // Get one SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SecurityRuleWiseMenuPermissionFindUniqueArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionFindUniqueArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SecurityRuleWiseMenuPermission that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SecurityRuleWiseMenuPermissionFindUniqueOrThrowArgs} args - Arguments to find a SecurityRuleWiseMenuPermission
     * @example
     * // Get one SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SecurityRuleWiseMenuPermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SecurityRuleWiseMenuPermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionFindFirstArgs} args - Arguments to find a SecurityRuleWiseMenuPermission
     * @example
     * // Get one SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SecurityRuleWiseMenuPermissionFindFirstArgs>(args?: SelectSubset<T, SecurityRuleWiseMenuPermissionFindFirstArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SecurityRuleWiseMenuPermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionFindFirstOrThrowArgs} args - Arguments to find a SecurityRuleWiseMenuPermission
     * @example
     * // Get one SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SecurityRuleWiseMenuPermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, SecurityRuleWiseMenuPermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SecurityRuleWiseMenuPermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SecurityRuleWiseMenuPermissions
     * const securityRuleWiseMenuPermissions = await prisma.securityRuleWiseMenuPermission.findMany()
     * 
     * // Get first 10 SecurityRuleWiseMenuPermissions
     * const securityRuleWiseMenuPermissions = await prisma.securityRuleWiseMenuPermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const securityRuleWiseMenuPermissionWithIdOnly = await prisma.securityRuleWiseMenuPermission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SecurityRuleWiseMenuPermissionFindManyArgs>(args?: SelectSubset<T, SecurityRuleWiseMenuPermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SecurityRuleWiseMenuPermission.
     * @param {SecurityRuleWiseMenuPermissionCreateArgs} args - Arguments to create a SecurityRuleWiseMenuPermission.
     * @example
     * // Create one SecurityRuleWiseMenuPermission
     * const SecurityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.create({
     *   data: {
     *     // ... data to create a SecurityRuleWiseMenuPermission
     *   }
     * })
     * 
     */
    create<T extends SecurityRuleWiseMenuPermissionCreateArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionCreateArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SecurityRuleWiseMenuPermissions.
     * @param {SecurityRuleWiseMenuPermissionCreateManyArgs} args - Arguments to create many SecurityRuleWiseMenuPermissions.
     * @example
     * // Create many SecurityRuleWiseMenuPermissions
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SecurityRuleWiseMenuPermissionCreateManyArgs>(args?: SelectSubset<T, SecurityRuleWiseMenuPermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SecurityRuleWiseMenuPermission.
     * @param {SecurityRuleWiseMenuPermissionDeleteArgs} args - Arguments to delete one SecurityRuleWiseMenuPermission.
     * @example
     * // Delete one SecurityRuleWiseMenuPermission
     * const SecurityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.delete({
     *   where: {
     *     // ... filter to delete one SecurityRuleWiseMenuPermission
     *   }
     * })
     * 
     */
    delete<T extends SecurityRuleWiseMenuPermissionDeleteArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionDeleteArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SecurityRuleWiseMenuPermission.
     * @param {SecurityRuleWiseMenuPermissionUpdateArgs} args - Arguments to update one SecurityRuleWiseMenuPermission.
     * @example
     * // Update one SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SecurityRuleWiseMenuPermissionUpdateArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionUpdateArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SecurityRuleWiseMenuPermissions.
     * @param {SecurityRuleWiseMenuPermissionDeleteManyArgs} args - Arguments to filter SecurityRuleWiseMenuPermissions to delete.
     * @example
     * // Delete a few SecurityRuleWiseMenuPermissions
     * const { count } = await prisma.securityRuleWiseMenuPermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SecurityRuleWiseMenuPermissionDeleteManyArgs>(args?: SelectSubset<T, SecurityRuleWiseMenuPermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SecurityRuleWiseMenuPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SecurityRuleWiseMenuPermissions
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SecurityRuleWiseMenuPermissionUpdateManyArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SecurityRuleWiseMenuPermission.
     * @param {SecurityRuleWiseMenuPermissionUpsertArgs} args - Arguments to update or create a SecurityRuleWiseMenuPermission.
     * @example
     * // Update or create a SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.upsert({
     *   create: {
     *     // ... data to create a SecurityRuleWiseMenuPermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SecurityRuleWiseMenuPermission we want to update
     *   }
     * })
     */
    upsert<T extends SecurityRuleWiseMenuPermissionUpsertArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionUpsertArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SecurityRuleWiseMenuPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionCountArgs} args - Arguments to filter SecurityRuleWiseMenuPermissions to count.
     * @example
     * // Count the number of SecurityRuleWiseMenuPermissions
     * const count = await prisma.securityRuleWiseMenuPermission.count({
     *   where: {
     *     // ... the filter for the SecurityRuleWiseMenuPermissions we want to count
     *   }
     * })
    **/
    count<T extends SecurityRuleWiseMenuPermissionCountArgs>(
      args?: Subset<T, SecurityRuleWiseMenuPermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SecurityRuleWiseMenuPermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SecurityRuleWiseMenuPermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SecurityRuleWiseMenuPermissionAggregateArgs>(args: Subset<T, SecurityRuleWiseMenuPermissionAggregateArgs>): Prisma.PrismaPromise<GetSecurityRuleWiseMenuPermissionAggregateType<T>>

    /**
     * Group by SecurityRuleWiseMenuPermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SecurityRuleWiseMenuPermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SecurityRuleWiseMenuPermissionGroupByArgs['orderBy'] }
        : { orderBy?: SecurityRuleWiseMenuPermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SecurityRuleWiseMenuPermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurityRuleWiseMenuPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SecurityRuleWiseMenuPermission model
   */
  readonly fields: SecurityRuleWiseMenuPermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SecurityRuleWiseMenuPermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SecurityRuleWiseMenuPermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    security_rule<T extends SecurityRuleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SecurityRuleDefaultArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SecurityRuleWiseMenuPermission model
   */ 
  interface SecurityRuleWiseMenuPermissionFieldRefs {
    readonly id: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly menu_id: FieldRef<"SecurityRuleWiseMenuPermission", 'Int'>
    readonly can_view: FieldRef<"SecurityRuleWiseMenuPermission", 'Boolean'>
    readonly can_create: FieldRef<"SecurityRuleWiseMenuPermission", 'Boolean'>
    readonly can_update: FieldRef<"SecurityRuleWiseMenuPermission", 'Boolean'>
    readonly can_delete: FieldRef<"SecurityRuleWiseMenuPermission", 'Boolean'>
    readonly can_report: FieldRef<"SecurityRuleWiseMenuPermission", 'Boolean'>
    readonly rule_id: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly created_at: FieldRef<"SecurityRuleWiseMenuPermission", 'DateTime'>
    readonly created_by: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly created_ip: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly updated_at: FieldRef<"SecurityRuleWiseMenuPermission", 'DateTime'>
    readonly updated_by: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly updated_ip: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly company_id: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SecurityRuleWiseMenuPermission findUnique
   */
  export type SecurityRuleWiseMenuPermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRuleWiseMenuPermission to fetch.
     */
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
  }

  /**
   * SecurityRuleWiseMenuPermission findUniqueOrThrow
   */
  export type SecurityRuleWiseMenuPermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRuleWiseMenuPermission to fetch.
     */
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
  }

  /**
   * SecurityRuleWiseMenuPermission findFirst
   */
  export type SecurityRuleWiseMenuPermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRuleWiseMenuPermission to fetch.
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRuleWiseMenuPermissions to fetch.
     */
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithRelationInput | SecurityRuleWiseMenuPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityRuleWiseMenuPermissions.
     */
    cursor?: SecurityRuleWiseMenuPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRuleWiseMenuPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRuleWiseMenuPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityRuleWiseMenuPermissions.
     */
    distinct?: SecurityRuleWiseMenuPermissionScalarFieldEnum | SecurityRuleWiseMenuPermissionScalarFieldEnum[]
  }

  /**
   * SecurityRuleWiseMenuPermission findFirstOrThrow
   */
  export type SecurityRuleWiseMenuPermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRuleWiseMenuPermission to fetch.
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRuleWiseMenuPermissions to fetch.
     */
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithRelationInput | SecurityRuleWiseMenuPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityRuleWiseMenuPermissions.
     */
    cursor?: SecurityRuleWiseMenuPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRuleWiseMenuPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRuleWiseMenuPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityRuleWiseMenuPermissions.
     */
    distinct?: SecurityRuleWiseMenuPermissionScalarFieldEnum | SecurityRuleWiseMenuPermissionScalarFieldEnum[]
  }

  /**
   * SecurityRuleWiseMenuPermission findMany
   */
  export type SecurityRuleWiseMenuPermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRuleWiseMenuPermissions to fetch.
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRuleWiseMenuPermissions to fetch.
     */
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithRelationInput | SecurityRuleWiseMenuPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SecurityRuleWiseMenuPermissions.
     */
    cursor?: SecurityRuleWiseMenuPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRuleWiseMenuPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRuleWiseMenuPermissions.
     */
    skip?: number
    distinct?: SecurityRuleWiseMenuPermissionScalarFieldEnum | SecurityRuleWiseMenuPermissionScalarFieldEnum[]
  }

  /**
   * SecurityRuleWiseMenuPermission create
   */
  export type SecurityRuleWiseMenuPermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a SecurityRuleWiseMenuPermission.
     */
    data: XOR<SecurityRuleWiseMenuPermissionCreateInput, SecurityRuleWiseMenuPermissionUncheckedCreateInput>
  }

  /**
   * SecurityRuleWiseMenuPermission createMany
   */
  export type SecurityRuleWiseMenuPermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SecurityRuleWiseMenuPermissions.
     */
    data: SecurityRuleWiseMenuPermissionCreateManyInput | SecurityRuleWiseMenuPermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SecurityRuleWiseMenuPermission update
   */
  export type SecurityRuleWiseMenuPermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a SecurityRuleWiseMenuPermission.
     */
    data: XOR<SecurityRuleWiseMenuPermissionUpdateInput, SecurityRuleWiseMenuPermissionUncheckedUpdateInput>
    /**
     * Choose, which SecurityRuleWiseMenuPermission to update.
     */
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
  }

  /**
   * SecurityRuleWiseMenuPermission updateMany
   */
  export type SecurityRuleWiseMenuPermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SecurityRuleWiseMenuPermissions.
     */
    data: XOR<SecurityRuleWiseMenuPermissionUpdateManyMutationInput, SecurityRuleWiseMenuPermissionUncheckedUpdateManyInput>
    /**
     * Filter which SecurityRuleWiseMenuPermissions to update
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
  }

  /**
   * SecurityRuleWiseMenuPermission upsert
   */
  export type SecurityRuleWiseMenuPermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the SecurityRuleWiseMenuPermission to update in case it exists.
     */
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
    /**
     * In case the SecurityRuleWiseMenuPermission found by the `where` argument doesn't exist, create a new SecurityRuleWiseMenuPermission with this data.
     */
    create: XOR<SecurityRuleWiseMenuPermissionCreateInput, SecurityRuleWiseMenuPermissionUncheckedCreateInput>
    /**
     * In case the SecurityRuleWiseMenuPermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SecurityRuleWiseMenuPermissionUpdateInput, SecurityRuleWiseMenuPermissionUncheckedUpdateInput>
  }

  /**
   * SecurityRuleWiseMenuPermission delete
   */
  export type SecurityRuleWiseMenuPermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter which SecurityRuleWiseMenuPermission to delete.
     */
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
  }

  /**
   * SecurityRuleWiseMenuPermission deleteMany
   */
  export type SecurityRuleWiseMenuPermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityRuleWiseMenuPermissions to delete
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
  }

  /**
   * SecurityRuleWiseMenuPermission without action
   */
  export type SecurityRuleWiseMenuPermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
  }


  /**
   * Model SecurityGroup
   */

  export type AggregateSecurityGroup = {
    _count: SecurityGroupCountAggregateOutputType | null
    _min: SecurityGroupMinAggregateOutputType | null
    _max: SecurityGroupMaxAggregateOutputType | null
  }

  export type SecurityGroupMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityGroupMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityGroupCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type SecurityGroupMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityGroupMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityGroupCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type SecurityGroupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityGroup to aggregate.
     */
    where?: SecurityGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroups to fetch.
     */
    orderBy?: SecurityGroupOrderByWithRelationInput | SecurityGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SecurityGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SecurityGroups
    **/
    _count?: true | SecurityGroupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SecurityGroupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SecurityGroupMaxAggregateInputType
  }

  export type GetSecurityGroupAggregateType<T extends SecurityGroupAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurityGroup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurityGroup[P]>
      : GetScalarType<T[P], AggregateSecurityGroup[P]>
  }




  export type SecurityGroupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityGroupWhereInput
    orderBy?: SecurityGroupOrderByWithAggregationInput | SecurityGroupOrderByWithAggregationInput[]
    by: SecurityGroupScalarFieldEnum[] | SecurityGroupScalarFieldEnum
    having?: SecurityGroupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SecurityGroupCountAggregateInputType | true
    _min?: SecurityGroupMinAggregateInputType
    _max?: SecurityGroupMaxAggregateInputType
  }

  export type SecurityGroupGroupByOutputType = {
    id: string
    name: string
    description: string | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: SecurityGroupCountAggregateOutputType | null
    _min: SecurityGroupMinAggregateOutputType | null
    _max: SecurityGroupMaxAggregateOutputType | null
  }

  type GetSecurityGroupGroupByPayload<T extends SecurityGroupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SecurityGroupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SecurityGroupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SecurityGroupGroupByOutputType[P]>
            : GetScalarType<T[P], SecurityGroupGroupByOutputType[P]>
        }
      >
    >


  export type SecurityGroupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    SecurityGroupRules?: boolean | SecurityGroup$SecurityGroupRulesArgs<ExtArgs>
    UserGroups?: boolean | SecurityGroup$UserGroupsArgs<ExtArgs>
    _count?: boolean | SecurityGroupCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["securityGroup"]>


  export type SecurityGroupSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type SecurityGroupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SecurityGroupRules?: boolean | SecurityGroup$SecurityGroupRulesArgs<ExtArgs>
    UserGroups?: boolean | SecurityGroup$UserGroupsArgs<ExtArgs>
    _count?: boolean | SecurityGroupCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SecurityGroupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SecurityGroup"
    objects: {
      SecurityGroupRules: Prisma.$SecurityGroupRulePayload<ExtArgs>[]
      UserGroups: Prisma.$UserGroupPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["securityGroup"]>
    composites: {}
  }

  type SecurityGroupGetPayload<S extends boolean | null | undefined | SecurityGroupDefaultArgs> = $Result.GetResult<Prisma.$SecurityGroupPayload, S>

  type SecurityGroupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SecurityGroupFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SecurityGroupCountAggregateInputType | true
    }

  export interface SecurityGroupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SecurityGroup'], meta: { name: 'SecurityGroup' } }
    /**
     * Find zero or one SecurityGroup that matches the filter.
     * @param {SecurityGroupFindUniqueArgs} args - Arguments to find a SecurityGroup
     * @example
     * // Get one SecurityGroup
     * const securityGroup = await prisma.securityGroup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SecurityGroupFindUniqueArgs>(args: SelectSubset<T, SecurityGroupFindUniqueArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SecurityGroup that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SecurityGroupFindUniqueOrThrowArgs} args - Arguments to find a SecurityGroup
     * @example
     * // Get one SecurityGroup
     * const securityGroup = await prisma.securityGroup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SecurityGroupFindUniqueOrThrowArgs>(args: SelectSubset<T, SecurityGroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SecurityGroup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupFindFirstArgs} args - Arguments to find a SecurityGroup
     * @example
     * // Get one SecurityGroup
     * const securityGroup = await prisma.securityGroup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SecurityGroupFindFirstArgs>(args?: SelectSubset<T, SecurityGroupFindFirstArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SecurityGroup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupFindFirstOrThrowArgs} args - Arguments to find a SecurityGroup
     * @example
     * // Get one SecurityGroup
     * const securityGroup = await prisma.securityGroup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SecurityGroupFindFirstOrThrowArgs>(args?: SelectSubset<T, SecurityGroupFindFirstOrThrowArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SecurityGroups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SecurityGroups
     * const securityGroups = await prisma.securityGroup.findMany()
     * 
     * // Get first 10 SecurityGroups
     * const securityGroups = await prisma.securityGroup.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const securityGroupWithIdOnly = await prisma.securityGroup.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SecurityGroupFindManyArgs>(args?: SelectSubset<T, SecurityGroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SecurityGroup.
     * @param {SecurityGroupCreateArgs} args - Arguments to create a SecurityGroup.
     * @example
     * // Create one SecurityGroup
     * const SecurityGroup = await prisma.securityGroup.create({
     *   data: {
     *     // ... data to create a SecurityGroup
     *   }
     * })
     * 
     */
    create<T extends SecurityGroupCreateArgs>(args: SelectSubset<T, SecurityGroupCreateArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SecurityGroups.
     * @param {SecurityGroupCreateManyArgs} args - Arguments to create many SecurityGroups.
     * @example
     * // Create many SecurityGroups
     * const securityGroup = await prisma.securityGroup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SecurityGroupCreateManyArgs>(args?: SelectSubset<T, SecurityGroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SecurityGroup.
     * @param {SecurityGroupDeleteArgs} args - Arguments to delete one SecurityGroup.
     * @example
     * // Delete one SecurityGroup
     * const SecurityGroup = await prisma.securityGroup.delete({
     *   where: {
     *     // ... filter to delete one SecurityGroup
     *   }
     * })
     * 
     */
    delete<T extends SecurityGroupDeleteArgs>(args: SelectSubset<T, SecurityGroupDeleteArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SecurityGroup.
     * @param {SecurityGroupUpdateArgs} args - Arguments to update one SecurityGroup.
     * @example
     * // Update one SecurityGroup
     * const securityGroup = await prisma.securityGroup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SecurityGroupUpdateArgs>(args: SelectSubset<T, SecurityGroupUpdateArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SecurityGroups.
     * @param {SecurityGroupDeleteManyArgs} args - Arguments to filter SecurityGroups to delete.
     * @example
     * // Delete a few SecurityGroups
     * const { count } = await prisma.securityGroup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SecurityGroupDeleteManyArgs>(args?: SelectSubset<T, SecurityGroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SecurityGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SecurityGroups
     * const securityGroup = await prisma.securityGroup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SecurityGroupUpdateManyArgs>(args: SelectSubset<T, SecurityGroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SecurityGroup.
     * @param {SecurityGroupUpsertArgs} args - Arguments to update or create a SecurityGroup.
     * @example
     * // Update or create a SecurityGroup
     * const securityGroup = await prisma.securityGroup.upsert({
     *   create: {
     *     // ... data to create a SecurityGroup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SecurityGroup we want to update
     *   }
     * })
     */
    upsert<T extends SecurityGroupUpsertArgs>(args: SelectSubset<T, SecurityGroupUpsertArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SecurityGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupCountArgs} args - Arguments to filter SecurityGroups to count.
     * @example
     * // Count the number of SecurityGroups
     * const count = await prisma.securityGroup.count({
     *   where: {
     *     // ... the filter for the SecurityGroups we want to count
     *   }
     * })
    **/
    count<T extends SecurityGroupCountArgs>(
      args?: Subset<T, SecurityGroupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SecurityGroupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SecurityGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SecurityGroupAggregateArgs>(args: Subset<T, SecurityGroupAggregateArgs>): Prisma.PrismaPromise<GetSecurityGroupAggregateType<T>>

    /**
     * Group by SecurityGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SecurityGroupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SecurityGroupGroupByArgs['orderBy'] }
        : { orderBy?: SecurityGroupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SecurityGroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurityGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SecurityGroup model
   */
  readonly fields: SecurityGroupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SecurityGroup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SecurityGroupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    SecurityGroupRules<T extends SecurityGroup$SecurityGroupRulesArgs<ExtArgs> = {}>(args?: Subset<T, SecurityGroup$SecurityGroupRulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findMany"> | Null>
    UserGroups<T extends SecurityGroup$UserGroupsArgs<ExtArgs> = {}>(args?: Subset<T, SecurityGroup$UserGroupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SecurityGroup model
   */ 
  interface SecurityGroupFieldRefs {
    readonly id: FieldRef<"SecurityGroup", 'String'>
    readonly name: FieldRef<"SecurityGroup", 'String'>
    readonly description: FieldRef<"SecurityGroup", 'String'>
    readonly created_at: FieldRef<"SecurityGroup", 'DateTime'>
    readonly created_by: FieldRef<"SecurityGroup", 'String'>
    readonly created_ip: FieldRef<"SecurityGroup", 'String'>
    readonly updated_at: FieldRef<"SecurityGroup", 'DateTime'>
    readonly updated_by: FieldRef<"SecurityGroup", 'String'>
    readonly updated_ip: FieldRef<"SecurityGroup", 'String'>
    readonly company_id: FieldRef<"SecurityGroup", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SecurityGroup findUnique
   */
  export type SecurityGroupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroup to fetch.
     */
    where: SecurityGroupWhereUniqueInput
  }

  /**
   * SecurityGroup findUniqueOrThrow
   */
  export type SecurityGroupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroup to fetch.
     */
    where: SecurityGroupWhereUniqueInput
  }

  /**
   * SecurityGroup findFirst
   */
  export type SecurityGroupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroup to fetch.
     */
    where?: SecurityGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroups to fetch.
     */
    orderBy?: SecurityGroupOrderByWithRelationInput | SecurityGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityGroups.
     */
    cursor?: SecurityGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityGroups.
     */
    distinct?: SecurityGroupScalarFieldEnum | SecurityGroupScalarFieldEnum[]
  }

  /**
   * SecurityGroup findFirstOrThrow
   */
  export type SecurityGroupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroup to fetch.
     */
    where?: SecurityGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroups to fetch.
     */
    orderBy?: SecurityGroupOrderByWithRelationInput | SecurityGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityGroups.
     */
    cursor?: SecurityGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityGroups.
     */
    distinct?: SecurityGroupScalarFieldEnum | SecurityGroupScalarFieldEnum[]
  }

  /**
   * SecurityGroup findMany
   */
  export type SecurityGroupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroups to fetch.
     */
    where?: SecurityGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroups to fetch.
     */
    orderBy?: SecurityGroupOrderByWithRelationInput | SecurityGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SecurityGroups.
     */
    cursor?: SecurityGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroups.
     */
    skip?: number
    distinct?: SecurityGroupScalarFieldEnum | SecurityGroupScalarFieldEnum[]
  }

  /**
   * SecurityGroup create
   */
  export type SecurityGroupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * The data needed to create a SecurityGroup.
     */
    data: XOR<SecurityGroupCreateInput, SecurityGroupUncheckedCreateInput>
  }

  /**
   * SecurityGroup createMany
   */
  export type SecurityGroupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SecurityGroups.
     */
    data: SecurityGroupCreateManyInput | SecurityGroupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SecurityGroup update
   */
  export type SecurityGroupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * The data needed to update a SecurityGroup.
     */
    data: XOR<SecurityGroupUpdateInput, SecurityGroupUncheckedUpdateInput>
    /**
     * Choose, which SecurityGroup to update.
     */
    where: SecurityGroupWhereUniqueInput
  }

  /**
   * SecurityGroup updateMany
   */
  export type SecurityGroupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SecurityGroups.
     */
    data: XOR<SecurityGroupUpdateManyMutationInput, SecurityGroupUncheckedUpdateManyInput>
    /**
     * Filter which SecurityGroups to update
     */
    where?: SecurityGroupWhereInput
  }

  /**
   * SecurityGroup upsert
   */
  export type SecurityGroupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * The filter to search for the SecurityGroup to update in case it exists.
     */
    where: SecurityGroupWhereUniqueInput
    /**
     * In case the SecurityGroup found by the `where` argument doesn't exist, create a new SecurityGroup with this data.
     */
    create: XOR<SecurityGroupCreateInput, SecurityGroupUncheckedCreateInput>
    /**
     * In case the SecurityGroup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SecurityGroupUpdateInput, SecurityGroupUncheckedUpdateInput>
  }

  /**
   * SecurityGroup delete
   */
  export type SecurityGroupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter which SecurityGroup to delete.
     */
    where: SecurityGroupWhereUniqueInput
  }

  /**
   * SecurityGroup deleteMany
   */
  export type SecurityGroupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityGroups to delete
     */
    where?: SecurityGroupWhereInput
  }

  /**
   * SecurityGroup.SecurityGroupRules
   */
  export type SecurityGroup$SecurityGroupRulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    where?: SecurityGroupRuleWhereInput
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    cursor?: SecurityGroupRuleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SecurityGroupRuleScalarFieldEnum | SecurityGroupRuleScalarFieldEnum[]
  }

  /**
   * SecurityGroup.UserGroups
   */
  export type SecurityGroup$UserGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    where?: UserGroupWhereInput
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    cursor?: UserGroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserGroupScalarFieldEnum | UserGroupScalarFieldEnum[]
  }

  /**
   * SecurityGroup without action
   */
  export type SecurityGroupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
  }


  /**
   * Model SecurityGroupRule
   */

  export type AggregateSecurityGroupRule = {
    _count: SecurityGroupRuleCountAggregateOutputType | null
    _min: SecurityGroupRuleMinAggregateOutputType | null
    _max: SecurityGroupRuleMaxAggregateOutputType | null
  }

  export type SecurityGroupRuleMinAggregateOutputType = {
    id: string | null
    group_id: string | null
    rule_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityGroupRuleMaxAggregateOutputType = {
    id: string | null
    group_id: string | null
    rule_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityGroupRuleCountAggregateOutputType = {
    id: number
    group_id: number
    rule_id: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type SecurityGroupRuleMinAggregateInputType = {
    id?: true
    group_id?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityGroupRuleMaxAggregateInputType = {
    id?: true
    group_id?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityGroupRuleCountAggregateInputType = {
    id?: true
    group_id?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type SecurityGroupRuleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityGroupRule to aggregate.
     */
    where?: SecurityGroupRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroupRules to fetch.
     */
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SecurityGroupRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroupRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroupRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SecurityGroupRules
    **/
    _count?: true | SecurityGroupRuleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SecurityGroupRuleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SecurityGroupRuleMaxAggregateInputType
  }

  export type GetSecurityGroupRuleAggregateType<T extends SecurityGroupRuleAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurityGroupRule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurityGroupRule[P]>
      : GetScalarType<T[P], AggregateSecurityGroupRule[P]>
  }




  export type SecurityGroupRuleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityGroupRuleWhereInput
    orderBy?: SecurityGroupRuleOrderByWithAggregationInput | SecurityGroupRuleOrderByWithAggregationInput[]
    by: SecurityGroupRuleScalarFieldEnum[] | SecurityGroupRuleScalarFieldEnum
    having?: SecurityGroupRuleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SecurityGroupRuleCountAggregateInputType | true
    _min?: SecurityGroupRuleMinAggregateInputType
    _max?: SecurityGroupRuleMaxAggregateInputType
  }

  export type SecurityGroupRuleGroupByOutputType = {
    id: string
    group_id: string
    rule_id: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: SecurityGroupRuleCountAggregateOutputType | null
    _min: SecurityGroupRuleMinAggregateOutputType | null
    _max: SecurityGroupRuleMaxAggregateOutputType | null
  }

  type GetSecurityGroupRuleGroupByPayload<T extends SecurityGroupRuleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SecurityGroupRuleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SecurityGroupRuleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SecurityGroupRuleGroupByOutputType[P]>
            : GetScalarType<T[P], SecurityGroupRuleGroupByOutputType[P]>
        }
      >
    >


  export type SecurityGroupRuleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    group_id?: boolean
    rule_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    security_group?: boolean | SecurityGroupDefaultArgs<ExtArgs>
    security_rule?: boolean | SecurityRuleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["securityGroupRule"]>


  export type SecurityGroupRuleSelectScalar = {
    id?: boolean
    group_id?: boolean
    rule_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type SecurityGroupRuleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    security_group?: boolean | SecurityGroupDefaultArgs<ExtArgs>
    security_rule?: boolean | SecurityRuleDefaultArgs<ExtArgs>
  }

  export type $SecurityGroupRulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SecurityGroupRule"
    objects: {
      security_group: Prisma.$SecurityGroupPayload<ExtArgs>
      security_rule: Prisma.$SecurityRulePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      group_id: string
      rule_id: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["securityGroupRule"]>
    composites: {}
  }

  type SecurityGroupRuleGetPayload<S extends boolean | null | undefined | SecurityGroupRuleDefaultArgs> = $Result.GetResult<Prisma.$SecurityGroupRulePayload, S>

  type SecurityGroupRuleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SecurityGroupRuleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SecurityGroupRuleCountAggregateInputType | true
    }

  export interface SecurityGroupRuleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SecurityGroupRule'], meta: { name: 'SecurityGroupRule' } }
    /**
     * Find zero or one SecurityGroupRule that matches the filter.
     * @param {SecurityGroupRuleFindUniqueArgs} args - Arguments to find a SecurityGroupRule
     * @example
     * // Get one SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SecurityGroupRuleFindUniqueArgs>(args: SelectSubset<T, SecurityGroupRuleFindUniqueArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SecurityGroupRule that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SecurityGroupRuleFindUniqueOrThrowArgs} args - Arguments to find a SecurityGroupRule
     * @example
     * // Get one SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SecurityGroupRuleFindUniqueOrThrowArgs>(args: SelectSubset<T, SecurityGroupRuleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SecurityGroupRule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleFindFirstArgs} args - Arguments to find a SecurityGroupRule
     * @example
     * // Get one SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SecurityGroupRuleFindFirstArgs>(args?: SelectSubset<T, SecurityGroupRuleFindFirstArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SecurityGroupRule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleFindFirstOrThrowArgs} args - Arguments to find a SecurityGroupRule
     * @example
     * // Get one SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SecurityGroupRuleFindFirstOrThrowArgs>(args?: SelectSubset<T, SecurityGroupRuleFindFirstOrThrowArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SecurityGroupRules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SecurityGroupRules
     * const securityGroupRules = await prisma.securityGroupRule.findMany()
     * 
     * // Get first 10 SecurityGroupRules
     * const securityGroupRules = await prisma.securityGroupRule.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const securityGroupRuleWithIdOnly = await prisma.securityGroupRule.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SecurityGroupRuleFindManyArgs>(args?: SelectSubset<T, SecurityGroupRuleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SecurityGroupRule.
     * @param {SecurityGroupRuleCreateArgs} args - Arguments to create a SecurityGroupRule.
     * @example
     * // Create one SecurityGroupRule
     * const SecurityGroupRule = await prisma.securityGroupRule.create({
     *   data: {
     *     // ... data to create a SecurityGroupRule
     *   }
     * })
     * 
     */
    create<T extends SecurityGroupRuleCreateArgs>(args: SelectSubset<T, SecurityGroupRuleCreateArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SecurityGroupRules.
     * @param {SecurityGroupRuleCreateManyArgs} args - Arguments to create many SecurityGroupRules.
     * @example
     * // Create many SecurityGroupRules
     * const securityGroupRule = await prisma.securityGroupRule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SecurityGroupRuleCreateManyArgs>(args?: SelectSubset<T, SecurityGroupRuleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SecurityGroupRule.
     * @param {SecurityGroupRuleDeleteArgs} args - Arguments to delete one SecurityGroupRule.
     * @example
     * // Delete one SecurityGroupRule
     * const SecurityGroupRule = await prisma.securityGroupRule.delete({
     *   where: {
     *     // ... filter to delete one SecurityGroupRule
     *   }
     * })
     * 
     */
    delete<T extends SecurityGroupRuleDeleteArgs>(args: SelectSubset<T, SecurityGroupRuleDeleteArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SecurityGroupRule.
     * @param {SecurityGroupRuleUpdateArgs} args - Arguments to update one SecurityGroupRule.
     * @example
     * // Update one SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SecurityGroupRuleUpdateArgs>(args: SelectSubset<T, SecurityGroupRuleUpdateArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SecurityGroupRules.
     * @param {SecurityGroupRuleDeleteManyArgs} args - Arguments to filter SecurityGroupRules to delete.
     * @example
     * // Delete a few SecurityGroupRules
     * const { count } = await prisma.securityGroupRule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SecurityGroupRuleDeleteManyArgs>(args?: SelectSubset<T, SecurityGroupRuleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SecurityGroupRules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SecurityGroupRules
     * const securityGroupRule = await prisma.securityGroupRule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SecurityGroupRuleUpdateManyArgs>(args: SelectSubset<T, SecurityGroupRuleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SecurityGroupRule.
     * @param {SecurityGroupRuleUpsertArgs} args - Arguments to update or create a SecurityGroupRule.
     * @example
     * // Update or create a SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.upsert({
     *   create: {
     *     // ... data to create a SecurityGroupRule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SecurityGroupRule we want to update
     *   }
     * })
     */
    upsert<T extends SecurityGroupRuleUpsertArgs>(args: SelectSubset<T, SecurityGroupRuleUpsertArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SecurityGroupRules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleCountArgs} args - Arguments to filter SecurityGroupRules to count.
     * @example
     * // Count the number of SecurityGroupRules
     * const count = await prisma.securityGroupRule.count({
     *   where: {
     *     // ... the filter for the SecurityGroupRules we want to count
     *   }
     * })
    **/
    count<T extends SecurityGroupRuleCountArgs>(
      args?: Subset<T, SecurityGroupRuleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SecurityGroupRuleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SecurityGroupRule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SecurityGroupRuleAggregateArgs>(args: Subset<T, SecurityGroupRuleAggregateArgs>): Prisma.PrismaPromise<GetSecurityGroupRuleAggregateType<T>>

    /**
     * Group by SecurityGroupRule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SecurityGroupRuleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SecurityGroupRuleGroupByArgs['orderBy'] }
        : { orderBy?: SecurityGroupRuleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SecurityGroupRuleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurityGroupRuleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SecurityGroupRule model
   */
  readonly fields: SecurityGroupRuleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SecurityGroupRule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SecurityGroupRuleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    security_group<T extends SecurityGroupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SecurityGroupDefaultArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    security_rule<T extends SecurityRuleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SecurityRuleDefaultArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SecurityGroupRule model
   */ 
  interface SecurityGroupRuleFieldRefs {
    readonly id: FieldRef<"SecurityGroupRule", 'String'>
    readonly group_id: FieldRef<"SecurityGroupRule", 'String'>
    readonly rule_id: FieldRef<"SecurityGroupRule", 'String'>
    readonly created_at: FieldRef<"SecurityGroupRule", 'DateTime'>
    readonly created_by: FieldRef<"SecurityGroupRule", 'String'>
    readonly created_ip: FieldRef<"SecurityGroupRule", 'String'>
    readonly updated_at: FieldRef<"SecurityGroupRule", 'DateTime'>
    readonly updated_by: FieldRef<"SecurityGroupRule", 'String'>
    readonly updated_ip: FieldRef<"SecurityGroupRule", 'String'>
    readonly company_id: FieldRef<"SecurityGroupRule", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SecurityGroupRule findUnique
   */
  export type SecurityGroupRuleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroupRule to fetch.
     */
    where: SecurityGroupRuleWhereUniqueInput
  }

  /**
   * SecurityGroupRule findUniqueOrThrow
   */
  export type SecurityGroupRuleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroupRule to fetch.
     */
    where: SecurityGroupRuleWhereUniqueInput
  }

  /**
   * SecurityGroupRule findFirst
   */
  export type SecurityGroupRuleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroupRule to fetch.
     */
    where?: SecurityGroupRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroupRules to fetch.
     */
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityGroupRules.
     */
    cursor?: SecurityGroupRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroupRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroupRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityGroupRules.
     */
    distinct?: SecurityGroupRuleScalarFieldEnum | SecurityGroupRuleScalarFieldEnum[]
  }

  /**
   * SecurityGroupRule findFirstOrThrow
   */
  export type SecurityGroupRuleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroupRule to fetch.
     */
    where?: SecurityGroupRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroupRules to fetch.
     */
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityGroupRules.
     */
    cursor?: SecurityGroupRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroupRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroupRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityGroupRules.
     */
    distinct?: SecurityGroupRuleScalarFieldEnum | SecurityGroupRuleScalarFieldEnum[]
  }

  /**
   * SecurityGroupRule findMany
   */
  export type SecurityGroupRuleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroupRules to fetch.
     */
    where?: SecurityGroupRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroupRules to fetch.
     */
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SecurityGroupRules.
     */
    cursor?: SecurityGroupRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroupRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroupRules.
     */
    skip?: number
    distinct?: SecurityGroupRuleScalarFieldEnum | SecurityGroupRuleScalarFieldEnum[]
  }

  /**
   * SecurityGroupRule create
   */
  export type SecurityGroupRuleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * The data needed to create a SecurityGroupRule.
     */
    data: XOR<SecurityGroupRuleCreateInput, SecurityGroupRuleUncheckedCreateInput>
  }

  /**
   * SecurityGroupRule createMany
   */
  export type SecurityGroupRuleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SecurityGroupRules.
     */
    data: SecurityGroupRuleCreateManyInput | SecurityGroupRuleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SecurityGroupRule update
   */
  export type SecurityGroupRuleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * The data needed to update a SecurityGroupRule.
     */
    data: XOR<SecurityGroupRuleUpdateInput, SecurityGroupRuleUncheckedUpdateInput>
    /**
     * Choose, which SecurityGroupRule to update.
     */
    where: SecurityGroupRuleWhereUniqueInput
  }

  /**
   * SecurityGroupRule updateMany
   */
  export type SecurityGroupRuleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SecurityGroupRules.
     */
    data: XOR<SecurityGroupRuleUpdateManyMutationInput, SecurityGroupRuleUncheckedUpdateManyInput>
    /**
     * Filter which SecurityGroupRules to update
     */
    where?: SecurityGroupRuleWhereInput
  }

  /**
   * SecurityGroupRule upsert
   */
  export type SecurityGroupRuleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * The filter to search for the SecurityGroupRule to update in case it exists.
     */
    where: SecurityGroupRuleWhereUniqueInput
    /**
     * In case the SecurityGroupRule found by the `where` argument doesn't exist, create a new SecurityGroupRule with this data.
     */
    create: XOR<SecurityGroupRuleCreateInput, SecurityGroupRuleUncheckedCreateInput>
    /**
     * In case the SecurityGroupRule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SecurityGroupRuleUpdateInput, SecurityGroupRuleUncheckedUpdateInput>
  }

  /**
   * SecurityGroupRule delete
   */
  export type SecurityGroupRuleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter which SecurityGroupRule to delete.
     */
    where: SecurityGroupRuleWhereUniqueInput
  }

  /**
   * SecurityGroupRule deleteMany
   */
  export type SecurityGroupRuleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityGroupRules to delete
     */
    where?: SecurityGroupRuleWhereInput
  }

  /**
   * SecurityGroupRule without action
   */
  export type SecurityGroupRuleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
  }


  /**
   * Model UserGroup
   */

  export type AggregateUserGroup = {
    _count: UserGroupCountAggregateOutputType | null
    _min: UserGroupMinAggregateOutputType | null
    _max: UserGroupMaxAggregateOutputType | null
  }

  export type UserGroupMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    group_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type UserGroupMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    group_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type UserGroupCountAggregateOutputType = {
    id: number
    user_id: number
    group_id: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type UserGroupMinAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type UserGroupMaxAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type UserGroupCountAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type UserGroupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserGroup to aggregate.
     */
    where?: UserGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserGroups to fetch.
     */
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserGroups
    **/
    _count?: true | UserGroupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserGroupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserGroupMaxAggregateInputType
  }

  export type GetUserGroupAggregateType<T extends UserGroupAggregateArgs> = {
        [P in keyof T & keyof AggregateUserGroup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserGroup[P]>
      : GetScalarType<T[P], AggregateUserGroup[P]>
  }




  export type UserGroupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserGroupWhereInput
    orderBy?: UserGroupOrderByWithAggregationInput | UserGroupOrderByWithAggregationInput[]
    by: UserGroupScalarFieldEnum[] | UserGroupScalarFieldEnum
    having?: UserGroupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserGroupCountAggregateInputType | true
    _min?: UserGroupMinAggregateInputType
    _max?: UserGroupMaxAggregateInputType
  }

  export type UserGroupGroupByOutputType = {
    id: string
    user_id: string
    group_id: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: UserGroupCountAggregateOutputType | null
    _min: UserGroupMinAggregateOutputType | null
    _max: UserGroupMaxAggregateOutputType | null
  }

  type GetUserGroupGroupByPayload<T extends UserGroupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupGroupByOutputType[P]>
        }
      >
    >


  export type UserGroupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    security_group?: boolean | SecurityGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userGroup"]>


  export type UserGroupSelectScalar = {
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type UserGroupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    security_group?: boolean | SecurityGroupDefaultArgs<ExtArgs>
  }

  export type $UserGroupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserGroup"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      security_group: Prisma.$SecurityGroupPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      group_id: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["userGroup"]>
    composites: {}
  }

  type UserGroupGetPayload<S extends boolean | null | undefined | UserGroupDefaultArgs> = $Result.GetResult<Prisma.$UserGroupPayload, S>

  type UserGroupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserGroupFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserGroupCountAggregateInputType | true
    }

  export interface UserGroupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserGroup'], meta: { name: 'UserGroup' } }
    /**
     * Find zero or one UserGroup that matches the filter.
     * @param {UserGroupFindUniqueArgs} args - Arguments to find a UserGroup
     * @example
     * // Get one UserGroup
     * const userGroup = await prisma.userGroup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserGroupFindUniqueArgs>(args: SelectSubset<T, UserGroupFindUniqueArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserGroup that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserGroupFindUniqueOrThrowArgs} args - Arguments to find a UserGroup
     * @example
     * // Get one UserGroup
     * const userGroup = await prisma.userGroup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserGroupFindUniqueOrThrowArgs>(args: SelectSubset<T, UserGroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserGroup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupFindFirstArgs} args - Arguments to find a UserGroup
     * @example
     * // Get one UserGroup
     * const userGroup = await prisma.userGroup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserGroupFindFirstArgs>(args?: SelectSubset<T, UserGroupFindFirstArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserGroup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupFindFirstOrThrowArgs} args - Arguments to find a UserGroup
     * @example
     * // Get one UserGroup
     * const userGroup = await prisma.userGroup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserGroupFindFirstOrThrowArgs>(args?: SelectSubset<T, UserGroupFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserGroups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserGroups
     * const userGroups = await prisma.userGroup.findMany()
     * 
     * // Get first 10 UserGroups
     * const userGroups = await prisma.userGroup.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userGroupWithIdOnly = await prisma.userGroup.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserGroupFindManyArgs>(args?: SelectSubset<T, UserGroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserGroup.
     * @param {UserGroupCreateArgs} args - Arguments to create a UserGroup.
     * @example
     * // Create one UserGroup
     * const UserGroup = await prisma.userGroup.create({
     *   data: {
     *     // ... data to create a UserGroup
     *   }
     * })
     * 
     */
    create<T extends UserGroupCreateArgs>(args: SelectSubset<T, UserGroupCreateArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserGroups.
     * @param {UserGroupCreateManyArgs} args - Arguments to create many UserGroups.
     * @example
     * // Create many UserGroups
     * const userGroup = await prisma.userGroup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserGroupCreateManyArgs>(args?: SelectSubset<T, UserGroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UserGroup.
     * @param {UserGroupDeleteArgs} args - Arguments to delete one UserGroup.
     * @example
     * // Delete one UserGroup
     * const UserGroup = await prisma.userGroup.delete({
     *   where: {
     *     // ... filter to delete one UserGroup
     *   }
     * })
     * 
     */
    delete<T extends UserGroupDeleteArgs>(args: SelectSubset<T, UserGroupDeleteArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserGroup.
     * @param {UserGroupUpdateArgs} args - Arguments to update one UserGroup.
     * @example
     * // Update one UserGroup
     * const userGroup = await prisma.userGroup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserGroupUpdateArgs>(args: SelectSubset<T, UserGroupUpdateArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserGroups.
     * @param {UserGroupDeleteManyArgs} args - Arguments to filter UserGroups to delete.
     * @example
     * // Delete a few UserGroups
     * const { count } = await prisma.userGroup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserGroupDeleteManyArgs>(args?: SelectSubset<T, UserGroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserGroups
     * const userGroup = await prisma.userGroup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserGroupUpdateManyArgs>(args: SelectSubset<T, UserGroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserGroup.
     * @param {UserGroupUpsertArgs} args - Arguments to update or create a UserGroup.
     * @example
     * // Update or create a UserGroup
     * const userGroup = await prisma.userGroup.upsert({
     *   create: {
     *     // ... data to create a UserGroup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserGroup we want to update
     *   }
     * })
     */
    upsert<T extends UserGroupUpsertArgs>(args: SelectSubset<T, UserGroupUpsertArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupCountArgs} args - Arguments to filter UserGroups to count.
     * @example
     * // Count the number of UserGroups
     * const count = await prisma.userGroup.count({
     *   where: {
     *     // ... the filter for the UserGroups we want to count
     *   }
     * })
    **/
    count<T extends UserGroupCountArgs>(
      args?: Subset<T, UserGroupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserGroupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserGroupAggregateArgs>(args: Subset<T, UserGroupAggregateArgs>): Prisma.PrismaPromise<GetUserGroupAggregateType<T>>

    /**
     * Group by UserGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserGroup model
   */
  readonly fields: UserGroupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserGroup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserGroupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    security_group<T extends SecurityGroupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SecurityGroupDefaultArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserGroup model
   */ 
  interface UserGroupFieldRefs {
    readonly id: FieldRef<"UserGroup", 'String'>
    readonly user_id: FieldRef<"UserGroup", 'String'>
    readonly group_id: FieldRef<"UserGroup", 'String'>
    readonly created_at: FieldRef<"UserGroup", 'DateTime'>
    readonly created_by: FieldRef<"UserGroup", 'String'>
    readonly created_ip: FieldRef<"UserGroup", 'String'>
    readonly updated_at: FieldRef<"UserGroup", 'DateTime'>
    readonly updated_by: FieldRef<"UserGroup", 'String'>
    readonly updated_ip: FieldRef<"UserGroup", 'String'>
    readonly company_id: FieldRef<"UserGroup", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UserGroup findUnique
   */
  export type UserGroupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter, which UserGroup to fetch.
     */
    where: UserGroupWhereUniqueInput
  }

  /**
   * UserGroup findUniqueOrThrow
   */
  export type UserGroupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter, which UserGroup to fetch.
     */
    where: UserGroupWhereUniqueInput
  }

  /**
   * UserGroup findFirst
   */
  export type UserGroupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter, which UserGroup to fetch.
     */
    where?: UserGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserGroups to fetch.
     */
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserGroups.
     */
    cursor?: UserGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserGroups.
     */
    distinct?: UserGroupScalarFieldEnum | UserGroupScalarFieldEnum[]
  }

  /**
   * UserGroup findFirstOrThrow
   */
  export type UserGroupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter, which UserGroup to fetch.
     */
    where?: UserGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserGroups to fetch.
     */
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserGroups.
     */
    cursor?: UserGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserGroups.
     */
    distinct?: UserGroupScalarFieldEnum | UserGroupScalarFieldEnum[]
  }

  /**
   * UserGroup findMany
   */
  export type UserGroupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter, which UserGroups to fetch.
     */
    where?: UserGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserGroups to fetch.
     */
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserGroups.
     */
    cursor?: UserGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserGroups.
     */
    skip?: number
    distinct?: UserGroupScalarFieldEnum | UserGroupScalarFieldEnum[]
  }

  /**
   * UserGroup create
   */
  export type UserGroupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * The data needed to create a UserGroup.
     */
    data: XOR<UserGroupCreateInput, UserGroupUncheckedCreateInput>
  }

  /**
   * UserGroup createMany
   */
  export type UserGroupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserGroups.
     */
    data: UserGroupCreateManyInput | UserGroupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserGroup update
   */
  export type UserGroupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * The data needed to update a UserGroup.
     */
    data: XOR<UserGroupUpdateInput, UserGroupUncheckedUpdateInput>
    /**
     * Choose, which UserGroup to update.
     */
    where: UserGroupWhereUniqueInput
  }

  /**
   * UserGroup updateMany
   */
  export type UserGroupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserGroups.
     */
    data: XOR<UserGroupUpdateManyMutationInput, UserGroupUncheckedUpdateManyInput>
    /**
     * Filter which UserGroups to update
     */
    where?: UserGroupWhereInput
  }

  /**
   * UserGroup upsert
   */
  export type UserGroupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * The filter to search for the UserGroup to update in case it exists.
     */
    where: UserGroupWhereUniqueInput
    /**
     * In case the UserGroup found by the `where` argument doesn't exist, create a new UserGroup with this data.
     */
    create: XOR<UserGroupCreateInput, UserGroupUncheckedCreateInput>
    /**
     * In case the UserGroup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserGroupUpdateInput, UserGroupUncheckedUpdateInput>
  }

  /**
   * UserGroup delete
   */
  export type UserGroupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter which UserGroup to delete.
     */
    where: UserGroupWhereUniqueInput
  }

  /**
   * UserGroup deleteMany
   */
  export type UserGroupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserGroups to delete
     */
    where?: UserGroupWhereInput
  }

  /**
   * UserGroup without action
   */
  export type UserGroupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
  }


  /**
   * Model Menu
   */

  export type AggregateMenu = {
    _count: MenuCountAggregateOutputType | null
    _avg: MenuAvgAggregateOutputType | null
    _sum: MenuSumAggregateOutputType | null
    _min: MenuMinAggregateOutputType | null
    _max: MenuMaxAggregateOutputType | null
  }

  export type MenuAvgAggregateOutputType = {
    id: number | null
    parent_id: number | null
    sequence_no: Decimal | null
  }

  export type MenuSumAggregateOutputType = {
    id: number | null
    parent_id: number | null
    sequence_no: Decimal | null
  }

  export type MenuMinAggregateOutputType = {
    id: number | null
    title: string | null
    url: string | null
    icon: string | null
    icon_library: string | null
    parent_id: number | null
    sequence_no: Decimal | null
    is_active: boolean | null
    can_view: boolean | null
    can_create: boolean | null
    can_update: boolean | null
    can_delete: boolean | null
    can_report: boolean | null
  }

  export type MenuMaxAggregateOutputType = {
    id: number | null
    title: string | null
    url: string | null
    icon: string | null
    icon_library: string | null
    parent_id: number | null
    sequence_no: Decimal | null
    is_active: boolean | null
    can_view: boolean | null
    can_create: boolean | null
    can_update: boolean | null
    can_delete: boolean | null
    can_report: boolean | null
  }

  export type MenuCountAggregateOutputType = {
    id: number
    title: number
    url: number
    icon: number
    icon_library: number
    parent_id: number
    sequence_no: number
    is_active: number
    can_view: number
    can_create: number
    can_update: number
    can_delete: number
    can_report: number
    _all: number
  }


  export type MenuAvgAggregateInputType = {
    id?: true
    parent_id?: true
    sequence_no?: true
  }

  export type MenuSumAggregateInputType = {
    id?: true
    parent_id?: true
    sequence_no?: true
  }

  export type MenuMinAggregateInputType = {
    id?: true
    title?: true
    url?: true
    icon?: true
    icon_library?: true
    parent_id?: true
    sequence_no?: true
    is_active?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
  }

  export type MenuMaxAggregateInputType = {
    id?: true
    title?: true
    url?: true
    icon?: true
    icon_library?: true
    parent_id?: true
    sequence_no?: true
    is_active?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
  }

  export type MenuCountAggregateInputType = {
    id?: true
    title?: true
    url?: true
    icon?: true
    icon_library?: true
    parent_id?: true
    sequence_no?: true
    is_active?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
    _all?: true
  }

  export type MenuAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Menu to aggregate.
     */
    where?: MenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Menus to fetch.
     */
    orderBy?: MenuOrderByWithRelationInput | MenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Menus
    **/
    _count?: true | MenuCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MenuAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MenuSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MenuMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MenuMaxAggregateInputType
  }

  export type GetMenuAggregateType<T extends MenuAggregateArgs> = {
        [P in keyof T & keyof AggregateMenu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenu[P]>
      : GetScalarType<T[P], AggregateMenu[P]>
  }




  export type MenuGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuWhereInput
    orderBy?: MenuOrderByWithAggregationInput | MenuOrderByWithAggregationInput[]
    by: MenuScalarFieldEnum[] | MenuScalarFieldEnum
    having?: MenuScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MenuCountAggregateInputType | true
    _avg?: MenuAvgAggregateInputType
    _sum?: MenuSumAggregateInputType
    _min?: MenuMinAggregateInputType
    _max?: MenuMaxAggregateInputType
  }

  export type MenuGroupByOutputType = {
    id: number
    title: string
    url: string | null
    icon: string | null
    icon_library: string | null
    parent_id: number
    sequence_no: Decimal
    is_active: boolean
    can_view: boolean | null
    can_create: boolean | null
    can_update: boolean | null
    can_delete: boolean | null
    can_report: boolean | null
    _count: MenuCountAggregateOutputType | null
    _avg: MenuAvgAggregateOutputType | null
    _sum: MenuSumAggregateOutputType | null
    _min: MenuMinAggregateOutputType | null
    _max: MenuMaxAggregateOutputType | null
  }

  type GetMenuGroupByPayload<T extends MenuGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MenuGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MenuGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MenuGroupByOutputType[P]>
            : GetScalarType<T[P], MenuGroupByOutputType[P]>
        }
      >
    >


  export type MenuSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    url?: boolean
    icon?: boolean
    icon_library?: boolean
    parent_id?: boolean
    sequence_no?: boolean
    is_active?: boolean
    can_view?: boolean
    can_create?: boolean
    can_update?: boolean
    can_delete?: boolean
    can_report?: boolean
  }, ExtArgs["result"]["menu"]>


  export type MenuSelectScalar = {
    id?: boolean
    title?: boolean
    url?: boolean
    icon?: boolean
    icon_library?: boolean
    parent_id?: boolean
    sequence_no?: boolean
    is_active?: boolean
    can_view?: boolean
    can_create?: boolean
    can_update?: boolean
    can_delete?: boolean
    can_report?: boolean
  }


  export type $MenuPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Menu"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      url: string | null
      icon: string | null
      icon_library: string | null
      parent_id: number
      sequence_no: Prisma.Decimal
      is_active: boolean
      can_view: boolean | null
      can_create: boolean | null
      can_update: boolean | null
      can_delete: boolean | null
      can_report: boolean | null
    }, ExtArgs["result"]["menu"]>
    composites: {}
  }

  type MenuGetPayload<S extends boolean | null | undefined | MenuDefaultArgs> = $Result.GetResult<Prisma.$MenuPayload, S>

  type MenuCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MenuFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MenuCountAggregateInputType | true
    }

  export interface MenuDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Menu'], meta: { name: 'Menu' } }
    /**
     * Find zero or one Menu that matches the filter.
     * @param {MenuFindUniqueArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MenuFindUniqueArgs>(args: SelectSubset<T, MenuFindUniqueArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Menu that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MenuFindUniqueOrThrowArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MenuFindUniqueOrThrowArgs>(args: SelectSubset<T, MenuFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Menu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuFindFirstArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MenuFindFirstArgs>(args?: SelectSubset<T, MenuFindFirstArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Menu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuFindFirstOrThrowArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MenuFindFirstOrThrowArgs>(args?: SelectSubset<T, MenuFindFirstOrThrowArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Menus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Menus
     * const menus = await prisma.menu.findMany()
     * 
     * // Get first 10 Menus
     * const menus = await prisma.menu.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menuWithIdOnly = await prisma.menu.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MenuFindManyArgs>(args?: SelectSubset<T, MenuFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Menu.
     * @param {MenuCreateArgs} args - Arguments to create a Menu.
     * @example
     * // Create one Menu
     * const Menu = await prisma.menu.create({
     *   data: {
     *     // ... data to create a Menu
     *   }
     * })
     * 
     */
    create<T extends MenuCreateArgs>(args: SelectSubset<T, MenuCreateArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Menus.
     * @param {MenuCreateManyArgs} args - Arguments to create many Menus.
     * @example
     * // Create many Menus
     * const menu = await prisma.menu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MenuCreateManyArgs>(args?: SelectSubset<T, MenuCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Menu.
     * @param {MenuDeleteArgs} args - Arguments to delete one Menu.
     * @example
     * // Delete one Menu
     * const Menu = await prisma.menu.delete({
     *   where: {
     *     // ... filter to delete one Menu
     *   }
     * })
     * 
     */
    delete<T extends MenuDeleteArgs>(args: SelectSubset<T, MenuDeleteArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Menu.
     * @param {MenuUpdateArgs} args - Arguments to update one Menu.
     * @example
     * // Update one Menu
     * const menu = await prisma.menu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MenuUpdateArgs>(args: SelectSubset<T, MenuUpdateArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Menus.
     * @param {MenuDeleteManyArgs} args - Arguments to filter Menus to delete.
     * @example
     * // Delete a few Menus
     * const { count } = await prisma.menu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MenuDeleteManyArgs>(args?: SelectSubset<T, MenuDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Menus
     * const menu = await prisma.menu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MenuUpdateManyArgs>(args: SelectSubset<T, MenuUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Menu.
     * @param {MenuUpsertArgs} args - Arguments to update or create a Menu.
     * @example
     * // Update or create a Menu
     * const menu = await prisma.menu.upsert({
     *   create: {
     *     // ... data to create a Menu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Menu we want to update
     *   }
     * })
     */
    upsert<T extends MenuUpsertArgs>(args: SelectSubset<T, MenuUpsertArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCountArgs} args - Arguments to filter Menus to count.
     * @example
     * // Count the number of Menus
     * const count = await prisma.menu.count({
     *   where: {
     *     // ... the filter for the Menus we want to count
     *   }
     * })
    **/
    count<T extends MenuCountArgs>(
      args?: Subset<T, MenuCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MenuCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Menu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MenuAggregateArgs>(args: Subset<T, MenuAggregateArgs>): Prisma.PrismaPromise<GetMenuAggregateType<T>>

    /**
     * Group by Menu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MenuGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MenuGroupByArgs['orderBy'] }
        : { orderBy?: MenuGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MenuGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenuGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Menu model
   */
  readonly fields: MenuFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Menu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MenuClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Menu model
   */ 
  interface MenuFieldRefs {
    readonly id: FieldRef<"Menu", 'Int'>
    readonly title: FieldRef<"Menu", 'String'>
    readonly url: FieldRef<"Menu", 'String'>
    readonly icon: FieldRef<"Menu", 'String'>
    readonly icon_library: FieldRef<"Menu", 'String'>
    readonly parent_id: FieldRef<"Menu", 'Int'>
    readonly sequence_no: FieldRef<"Menu", 'Decimal'>
    readonly is_active: FieldRef<"Menu", 'Boolean'>
    readonly can_view: FieldRef<"Menu", 'Boolean'>
    readonly can_create: FieldRef<"Menu", 'Boolean'>
    readonly can_update: FieldRef<"Menu", 'Boolean'>
    readonly can_delete: FieldRef<"Menu", 'Boolean'>
    readonly can_report: FieldRef<"Menu", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Menu findUnique
   */
  export type MenuFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter, which Menu to fetch.
     */
    where: MenuWhereUniqueInput
  }

  /**
   * Menu findUniqueOrThrow
   */
  export type MenuFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter, which Menu to fetch.
     */
    where: MenuWhereUniqueInput
  }

  /**
   * Menu findFirst
   */
  export type MenuFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter, which Menu to fetch.
     */
    where?: MenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Menus to fetch.
     */
    orderBy?: MenuOrderByWithRelationInput | MenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Menus.
     */
    cursor?: MenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Menus.
     */
    distinct?: MenuScalarFieldEnum | MenuScalarFieldEnum[]
  }

  /**
   * Menu findFirstOrThrow
   */
  export type MenuFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter, which Menu to fetch.
     */
    where?: MenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Menus to fetch.
     */
    orderBy?: MenuOrderByWithRelationInput | MenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Menus.
     */
    cursor?: MenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Menus.
     */
    distinct?: MenuScalarFieldEnum | MenuScalarFieldEnum[]
  }

  /**
   * Menu findMany
   */
  export type MenuFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter, which Menus to fetch.
     */
    where?: MenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Menus to fetch.
     */
    orderBy?: MenuOrderByWithRelationInput | MenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Menus.
     */
    cursor?: MenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Menus.
     */
    skip?: number
    distinct?: MenuScalarFieldEnum | MenuScalarFieldEnum[]
  }

  /**
   * Menu create
   */
  export type MenuCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * The data needed to create a Menu.
     */
    data: XOR<MenuCreateInput, MenuUncheckedCreateInput>
  }

  /**
   * Menu createMany
   */
  export type MenuCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Menus.
     */
    data: MenuCreateManyInput | MenuCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Menu update
   */
  export type MenuUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * The data needed to update a Menu.
     */
    data: XOR<MenuUpdateInput, MenuUncheckedUpdateInput>
    /**
     * Choose, which Menu to update.
     */
    where: MenuWhereUniqueInput
  }

  /**
   * Menu updateMany
   */
  export type MenuUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Menus.
     */
    data: XOR<MenuUpdateManyMutationInput, MenuUncheckedUpdateManyInput>
    /**
     * Filter which Menus to update
     */
    where?: MenuWhereInput
  }

  /**
   * Menu upsert
   */
  export type MenuUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * The filter to search for the Menu to update in case it exists.
     */
    where: MenuWhereUniqueInput
    /**
     * In case the Menu found by the `where` argument doesn't exist, create a new Menu with this data.
     */
    create: XOR<MenuCreateInput, MenuUncheckedCreateInput>
    /**
     * In case the Menu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MenuUpdateInput, MenuUncheckedUpdateInput>
  }

  /**
   * Menu delete
   */
  export type MenuDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter which Menu to delete.
     */
    where: MenuWhereUniqueInput
  }

  /**
   * Menu deleteMany
   */
  export type MenuDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Menus to delete
     */
    where?: MenuWhereInput
  }

  /**
   * Menu without action
   */
  export type MenuDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
  }


  /**
   * Model Project
   */

  export type AggregateProject = {
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  export type ProjectAvgAggregateOutputType = {
    area: Decimal | null
    budget: Decimal | null
  }

  export type ProjectSumAggregateOutputType = {
    area: Decimal | null
    budget: Decimal | null
  }

  export type ProjectMinAggregateOutputType = {
    id: string | null
    title: string | null
    subtitle: string | null
    description: string | null
    start_date: Date | null
    end_date: Date | null
    thumbnail_url: string | null
    city: string | null
    country: string | null
    address: string | null
    client_name: string | null
    category_id: string | null
    area: Decimal | null
    is_featured: boolean | null
    budget: Decimal | null
    status: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ProjectMaxAggregateOutputType = {
    id: string | null
    title: string | null
    subtitle: string | null
    description: string | null
    start_date: Date | null
    end_date: Date | null
    thumbnail_url: string | null
    city: string | null
    country: string | null
    address: string | null
    client_name: string | null
    category_id: string | null
    area: Decimal | null
    is_featured: boolean | null
    budget: Decimal | null
    status: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ProjectCountAggregateOutputType = {
    id: number
    title: number
    subtitle: number
    description: number
    start_date: number
    end_date: number
    thumbnail_url: number
    city: number
    country: number
    address: number
    client_name: number
    category_id: number
    area: number
    is_featured: number
    tags: number
    budget: number
    status: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type ProjectAvgAggregateInputType = {
    area?: true
    budget?: true
  }

  export type ProjectSumAggregateInputType = {
    area?: true
    budget?: true
  }

  export type ProjectMinAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    start_date?: true
    end_date?: true
    thumbnail_url?: true
    city?: true
    country?: true
    address?: true
    client_name?: true
    category_id?: true
    area?: true
    is_featured?: true
    budget?: true
    status?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ProjectMaxAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    start_date?: true
    end_date?: true
    thumbnail_url?: true
    city?: true
    country?: true
    address?: true
    client_name?: true
    category_id?: true
    area?: true
    is_featured?: true
    budget?: true
    status?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ProjectCountAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    start_date?: true
    end_date?: true
    thumbnail_url?: true
    city?: true
    country?: true
    address?: true
    client_name?: true
    category_id?: true
    area?: true
    is_featured?: true
    tags?: true
    budget?: true
    status?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type ProjectAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Project to aggregate.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Projects
    **/
    _count?: true | ProjectCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProjectAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProjectSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectMaxAggregateInputType
  }

  export type GetProjectAggregateType<T extends ProjectAggregateArgs> = {
        [P in keyof T & keyof AggregateProject]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject[P]>
      : GetScalarType<T[P], AggregateProject[P]>
  }




  export type ProjectGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithAggregationInput | ProjectOrderByWithAggregationInput[]
    by: ProjectScalarFieldEnum[] | ProjectScalarFieldEnum
    having?: ProjectScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectCountAggregateInputType | true
    _avg?: ProjectAvgAggregateInputType
    _sum?: ProjectSumAggregateInputType
    _min?: ProjectMinAggregateInputType
    _max?: ProjectMaxAggregateInputType
  }

  export type ProjectGroupByOutputType = {
    id: string
    title: string
    subtitle: string | null
    description: string | null
    start_date: Date
    end_date: Date | null
    thumbnail_url: string | null
    city: string | null
    country: string | null
    address: string | null
    client_name: string | null
    category_id: string
    area: Decimal | null
    is_featured: boolean
    tags: JsonValue | null
    budget: Decimal | null
    status: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  type GetProjectGroupByPayload<T extends ProjectGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectGroupByOutputType[P]>
        }
      >
    >


  export type ProjectSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    subtitle?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    thumbnail_url?: boolean
    city?: boolean
    country?: boolean
    address?: boolean
    client_name?: boolean
    category_id?: boolean
    area?: boolean
    is_featured?: boolean
    tags?: boolean
    budget?: boolean
    status?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    gallery?: boolean | Project$galleryArgs<ExtArgs>
    key_features?: boolean | Project$key_featuresArgs<ExtArgs>
    services?: boolean | Project$servicesArgs<ExtArgs>
    _count?: boolean | ProjectCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>


  export type ProjectSelectScalar = {
    id?: boolean
    title?: boolean
    subtitle?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    thumbnail_url?: boolean
    city?: boolean
    country?: boolean
    address?: boolean
    client_name?: boolean
    category_id?: boolean
    area?: boolean
    is_featured?: boolean
    tags?: boolean
    budget?: boolean
    status?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type ProjectInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    gallery?: boolean | Project$galleryArgs<ExtArgs>
    key_features?: boolean | Project$key_featuresArgs<ExtArgs>
    services?: boolean | Project$servicesArgs<ExtArgs>
    _count?: boolean | ProjectCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ProjectPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Project"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs>
      gallery: Prisma.$ProjectGalleryPayload<ExtArgs>[]
      key_features: Prisma.$ProjectKeyFeaturePayload<ExtArgs>[]
      services: Prisma.$ProjectServicePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      subtitle: string | null
      description: string | null
      start_date: Date
      end_date: Date | null
      thumbnail_url: string | null
      city: string | null
      country: string | null
      address: string | null
      client_name: string | null
      category_id: string
      area: Prisma.Decimal | null
      is_featured: boolean
      tags: Prisma.JsonValue | null
      budget: Prisma.Decimal | null
      status: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["project"]>
    composites: {}
  }

  type ProjectGetPayload<S extends boolean | null | undefined | ProjectDefaultArgs> = $Result.GetResult<Prisma.$ProjectPayload, S>

  type ProjectCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProjectFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProjectCountAggregateInputType | true
    }

  export interface ProjectDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Project'], meta: { name: 'Project' } }
    /**
     * Find zero or one Project that matches the filter.
     * @param {ProjectFindUniqueArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProjectFindUniqueArgs>(args: SelectSubset<T, ProjectFindUniqueArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Project that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProjectFindUniqueOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProjectFindUniqueOrThrowArgs>(args: SelectSubset<T, ProjectFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Project that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProjectFindFirstArgs>(args?: SelectSubset<T, ProjectFindFirstArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Project that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProjectFindFirstOrThrowArgs>(args?: SelectSubset<T, ProjectFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Projects
     * const projects = await prisma.project.findMany()
     * 
     * // Get first 10 Projects
     * const projects = await prisma.project.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectWithIdOnly = await prisma.project.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProjectFindManyArgs>(args?: SelectSubset<T, ProjectFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Project.
     * @param {ProjectCreateArgs} args - Arguments to create a Project.
     * @example
     * // Create one Project
     * const Project = await prisma.project.create({
     *   data: {
     *     // ... data to create a Project
     *   }
     * })
     * 
     */
    create<T extends ProjectCreateArgs>(args: SelectSubset<T, ProjectCreateArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Projects.
     * @param {ProjectCreateManyArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const project = await prisma.project.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProjectCreateManyArgs>(args?: SelectSubset<T, ProjectCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Project.
     * @param {ProjectDeleteArgs} args - Arguments to delete one Project.
     * @example
     * // Delete one Project
     * const Project = await prisma.project.delete({
     *   where: {
     *     // ... filter to delete one Project
     *   }
     * })
     * 
     */
    delete<T extends ProjectDeleteArgs>(args: SelectSubset<T, ProjectDeleteArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Project.
     * @param {ProjectUpdateArgs} args - Arguments to update one Project.
     * @example
     * // Update one Project
     * const project = await prisma.project.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProjectUpdateArgs>(args: SelectSubset<T, ProjectUpdateArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Projects.
     * @param {ProjectDeleteManyArgs} args - Arguments to filter Projects to delete.
     * @example
     * // Delete a few Projects
     * const { count } = await prisma.project.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProjectDeleteManyArgs>(args?: SelectSubset<T, ProjectDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Projects
     * const project = await prisma.project.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProjectUpdateManyArgs>(args: SelectSubset<T, ProjectUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Project.
     * @param {ProjectUpsertArgs} args - Arguments to update or create a Project.
     * @example
     * // Update or create a Project
     * const project = await prisma.project.upsert({
     *   create: {
     *     // ... data to create a Project
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project we want to update
     *   }
     * })
     */
    upsert<T extends ProjectUpsertArgs>(args: SelectSubset<T, ProjectUpsertArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectCountArgs} args - Arguments to filter Projects to count.
     * @example
     * // Count the number of Projects
     * const count = await prisma.project.count({
     *   where: {
     *     // ... the filter for the Projects we want to count
     *   }
     * })
    **/
    count<T extends ProjectCountArgs>(
      args?: Subset<T, ProjectCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectAggregateArgs>(args: Subset<T, ProjectAggregateArgs>): Prisma.PrismaPromise<GetProjectAggregateType<T>>

    /**
     * Group by Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectGroupByArgs['orderBy'] }
        : { orderBy?: ProjectGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Project model
   */
  readonly fields: ProjectFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Project.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProjectClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    gallery<T extends Project$galleryArgs<ExtArgs> = {}>(args?: Subset<T, Project$galleryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectGalleryPayload<ExtArgs>, T, "findMany"> | Null>
    key_features<T extends Project$key_featuresArgs<ExtArgs> = {}>(args?: Subset<T, Project$key_featuresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectKeyFeaturePayload<ExtArgs>, T, "findMany"> | Null>
    services<T extends Project$servicesArgs<ExtArgs> = {}>(args?: Subset<T, Project$servicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectServicePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Project model
   */ 
  interface ProjectFieldRefs {
    readonly id: FieldRef<"Project", 'String'>
    readonly title: FieldRef<"Project", 'String'>
    readonly subtitle: FieldRef<"Project", 'String'>
    readonly description: FieldRef<"Project", 'String'>
    readonly start_date: FieldRef<"Project", 'DateTime'>
    readonly end_date: FieldRef<"Project", 'DateTime'>
    readonly thumbnail_url: FieldRef<"Project", 'String'>
    readonly city: FieldRef<"Project", 'String'>
    readonly country: FieldRef<"Project", 'String'>
    readonly address: FieldRef<"Project", 'String'>
    readonly client_name: FieldRef<"Project", 'String'>
    readonly category_id: FieldRef<"Project", 'String'>
    readonly area: FieldRef<"Project", 'Decimal'>
    readonly is_featured: FieldRef<"Project", 'Boolean'>
    readonly tags: FieldRef<"Project", 'Json'>
    readonly budget: FieldRef<"Project", 'Decimal'>
    readonly status: FieldRef<"Project", 'String'>
    readonly created_at: FieldRef<"Project", 'DateTime'>
    readonly created_by: FieldRef<"Project", 'String'>
    readonly created_ip: FieldRef<"Project", 'String'>
    readonly updated_at: FieldRef<"Project", 'DateTime'>
    readonly updated_by: FieldRef<"Project", 'String'>
    readonly updated_ip: FieldRef<"Project", 'String'>
    readonly company_id: FieldRef<"Project", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Project findUnique
   */
  export type ProjectFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project findUniqueOrThrow
   */
  export type ProjectFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project findFirst
   */
  export type ProjectFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project findFirstOrThrow
   */
  export type ProjectFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project findMany
   */
  export type ProjectFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Projects to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project create
   */
  export type ProjectCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The data needed to create a Project.
     */
    data: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
  }

  /**
   * Project createMany
   */
  export type ProjectCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Projects.
     */
    data: ProjectCreateManyInput | ProjectCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Project update
   */
  export type ProjectUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The data needed to update a Project.
     */
    data: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
    /**
     * Choose, which Project to update.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project updateMany
   */
  export type ProjectUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Projects.
     */
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyInput>
    /**
     * Filter which Projects to update
     */
    where?: ProjectWhereInput
  }

  /**
   * Project upsert
   */
  export type ProjectUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The filter to search for the Project to update in case it exists.
     */
    where: ProjectWhereUniqueInput
    /**
     * In case the Project found by the `where` argument doesn't exist, create a new Project with this data.
     */
    create: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
    /**
     * In case the Project was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
  }

  /**
   * Project delete
   */
  export type ProjectDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter which Project to delete.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project deleteMany
   */
  export type ProjectDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Projects to delete
     */
    where?: ProjectWhereInput
  }

  /**
   * Project.gallery
   */
  export type Project$galleryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectGallery
     */
    select?: ProjectGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectGalleryInclude<ExtArgs> | null
    where?: ProjectGalleryWhereInput
    orderBy?: ProjectGalleryOrderByWithRelationInput | ProjectGalleryOrderByWithRelationInput[]
    cursor?: ProjectGalleryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectGalleryScalarFieldEnum | ProjectGalleryScalarFieldEnum[]
  }

  /**
   * Project.key_features
   */
  export type Project$key_featuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectKeyFeature
     */
    select?: ProjectKeyFeatureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectKeyFeatureInclude<ExtArgs> | null
    where?: ProjectKeyFeatureWhereInput
    orderBy?: ProjectKeyFeatureOrderByWithRelationInput | ProjectKeyFeatureOrderByWithRelationInput[]
    cursor?: ProjectKeyFeatureWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectKeyFeatureScalarFieldEnum | ProjectKeyFeatureScalarFieldEnum[]
  }

  /**
   * Project.services
   */
  export type Project$servicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectService
     */
    select?: ProjectServiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectServiceInclude<ExtArgs> | null
    where?: ProjectServiceWhereInput
    orderBy?: ProjectServiceOrderByWithRelationInput | ProjectServiceOrderByWithRelationInput[]
    cursor?: ProjectServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectServiceScalarFieldEnum | ProjectServiceScalarFieldEnum[]
  }

  /**
   * Project without action
   */
  export type ProjectDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
  }


  /**
   * Model ProjectGallery
   */

  export type AggregateProjectGallery = {
    _count: ProjectGalleryCountAggregateOutputType | null
    _avg: ProjectGalleryAvgAggregateOutputType | null
    _sum: ProjectGallerySumAggregateOutputType | null
    _min: ProjectGalleryMinAggregateOutputType | null
    _max: ProjectGalleryMaxAggregateOutputType | null
  }

  export type ProjectGalleryAvgAggregateOutputType = {
    sequence_no: number | null
  }

  export type ProjectGallerySumAggregateOutputType = {
    sequence_no: number | null
  }

  export type ProjectGalleryMinAggregateOutputType = {
    id: string | null
    project_id: string | null
    image_url: string | null
    title: string | null
    subtitle: string | null
    sequence_no: number | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ProjectGalleryMaxAggregateOutputType = {
    id: string | null
    project_id: string | null
    image_url: string | null
    title: string | null
    subtitle: string | null
    sequence_no: number | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ProjectGalleryCountAggregateOutputType = {
    id: number
    project_id: number
    image_url: number
    title: number
    subtitle: number
    sequence_no: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type ProjectGalleryAvgAggregateInputType = {
    sequence_no?: true
  }

  export type ProjectGallerySumAggregateInputType = {
    sequence_no?: true
  }

  export type ProjectGalleryMinAggregateInputType = {
    id?: true
    project_id?: true
    image_url?: true
    title?: true
    subtitle?: true
    sequence_no?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ProjectGalleryMaxAggregateInputType = {
    id?: true
    project_id?: true
    image_url?: true
    title?: true
    subtitle?: true
    sequence_no?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ProjectGalleryCountAggregateInputType = {
    id?: true
    project_id?: true
    image_url?: true
    title?: true
    subtitle?: true
    sequence_no?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type ProjectGalleryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProjectGallery to aggregate.
     */
    where?: ProjectGalleryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectGalleries to fetch.
     */
    orderBy?: ProjectGalleryOrderByWithRelationInput | ProjectGalleryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProjectGalleryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectGalleries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectGalleries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProjectGalleries
    **/
    _count?: true | ProjectGalleryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProjectGalleryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProjectGallerySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectGalleryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectGalleryMaxAggregateInputType
  }

  export type GetProjectGalleryAggregateType<T extends ProjectGalleryAggregateArgs> = {
        [P in keyof T & keyof AggregateProjectGallery]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProjectGallery[P]>
      : GetScalarType<T[P], AggregateProjectGallery[P]>
  }




  export type ProjectGalleryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectGalleryWhereInput
    orderBy?: ProjectGalleryOrderByWithAggregationInput | ProjectGalleryOrderByWithAggregationInput[]
    by: ProjectGalleryScalarFieldEnum[] | ProjectGalleryScalarFieldEnum
    having?: ProjectGalleryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectGalleryCountAggregateInputType | true
    _avg?: ProjectGalleryAvgAggregateInputType
    _sum?: ProjectGallerySumAggregateInputType
    _min?: ProjectGalleryMinAggregateInputType
    _max?: ProjectGalleryMaxAggregateInputType
  }

  export type ProjectGalleryGroupByOutputType = {
    id: string
    project_id: string
    image_url: string
    title: string | null
    subtitle: string | null
    sequence_no: number
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: ProjectGalleryCountAggregateOutputType | null
    _avg: ProjectGalleryAvgAggregateOutputType | null
    _sum: ProjectGallerySumAggregateOutputType | null
    _min: ProjectGalleryMinAggregateOutputType | null
    _max: ProjectGalleryMaxAggregateOutputType | null
  }

  type GetProjectGalleryGroupByPayload<T extends ProjectGalleryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectGalleryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectGalleryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectGalleryGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectGalleryGroupByOutputType[P]>
        }
      >
    >


  export type ProjectGallerySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    image_url?: boolean
    title?: boolean
    subtitle?: boolean
    sequence_no?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["projectGallery"]>


  export type ProjectGallerySelectScalar = {
    id?: boolean
    project_id?: boolean
    image_url?: boolean
    title?: boolean
    subtitle?: boolean
    sequence_no?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type ProjectGalleryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }

  export type $ProjectGalleryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProjectGallery"
    objects: {
      project: Prisma.$ProjectPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      project_id: string
      image_url: string
      title: string | null
      subtitle: string | null
      sequence_no: number
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["projectGallery"]>
    composites: {}
  }

  type ProjectGalleryGetPayload<S extends boolean | null | undefined | ProjectGalleryDefaultArgs> = $Result.GetResult<Prisma.$ProjectGalleryPayload, S>

  type ProjectGalleryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProjectGalleryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProjectGalleryCountAggregateInputType | true
    }

  export interface ProjectGalleryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProjectGallery'], meta: { name: 'ProjectGallery' } }
    /**
     * Find zero or one ProjectGallery that matches the filter.
     * @param {ProjectGalleryFindUniqueArgs} args - Arguments to find a ProjectGallery
     * @example
     * // Get one ProjectGallery
     * const projectGallery = await prisma.projectGallery.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProjectGalleryFindUniqueArgs>(args: SelectSubset<T, ProjectGalleryFindUniqueArgs<ExtArgs>>): Prisma__ProjectGalleryClient<$Result.GetResult<Prisma.$ProjectGalleryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProjectGallery that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProjectGalleryFindUniqueOrThrowArgs} args - Arguments to find a ProjectGallery
     * @example
     * // Get one ProjectGallery
     * const projectGallery = await prisma.projectGallery.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProjectGalleryFindUniqueOrThrowArgs>(args: SelectSubset<T, ProjectGalleryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProjectGalleryClient<$Result.GetResult<Prisma.$ProjectGalleryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProjectGallery that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGalleryFindFirstArgs} args - Arguments to find a ProjectGallery
     * @example
     * // Get one ProjectGallery
     * const projectGallery = await prisma.projectGallery.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProjectGalleryFindFirstArgs>(args?: SelectSubset<T, ProjectGalleryFindFirstArgs<ExtArgs>>): Prisma__ProjectGalleryClient<$Result.GetResult<Prisma.$ProjectGalleryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProjectGallery that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGalleryFindFirstOrThrowArgs} args - Arguments to find a ProjectGallery
     * @example
     * // Get one ProjectGallery
     * const projectGallery = await prisma.projectGallery.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProjectGalleryFindFirstOrThrowArgs>(args?: SelectSubset<T, ProjectGalleryFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProjectGalleryClient<$Result.GetResult<Prisma.$ProjectGalleryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProjectGalleries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGalleryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProjectGalleries
     * const projectGalleries = await prisma.projectGallery.findMany()
     * 
     * // Get first 10 ProjectGalleries
     * const projectGalleries = await prisma.projectGallery.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectGalleryWithIdOnly = await prisma.projectGallery.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProjectGalleryFindManyArgs>(args?: SelectSubset<T, ProjectGalleryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectGalleryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProjectGallery.
     * @param {ProjectGalleryCreateArgs} args - Arguments to create a ProjectGallery.
     * @example
     * // Create one ProjectGallery
     * const ProjectGallery = await prisma.projectGallery.create({
     *   data: {
     *     // ... data to create a ProjectGallery
     *   }
     * })
     * 
     */
    create<T extends ProjectGalleryCreateArgs>(args: SelectSubset<T, ProjectGalleryCreateArgs<ExtArgs>>): Prisma__ProjectGalleryClient<$Result.GetResult<Prisma.$ProjectGalleryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProjectGalleries.
     * @param {ProjectGalleryCreateManyArgs} args - Arguments to create many ProjectGalleries.
     * @example
     * // Create many ProjectGalleries
     * const projectGallery = await prisma.projectGallery.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProjectGalleryCreateManyArgs>(args?: SelectSubset<T, ProjectGalleryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ProjectGallery.
     * @param {ProjectGalleryDeleteArgs} args - Arguments to delete one ProjectGallery.
     * @example
     * // Delete one ProjectGallery
     * const ProjectGallery = await prisma.projectGallery.delete({
     *   where: {
     *     // ... filter to delete one ProjectGallery
     *   }
     * })
     * 
     */
    delete<T extends ProjectGalleryDeleteArgs>(args: SelectSubset<T, ProjectGalleryDeleteArgs<ExtArgs>>): Prisma__ProjectGalleryClient<$Result.GetResult<Prisma.$ProjectGalleryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProjectGallery.
     * @param {ProjectGalleryUpdateArgs} args - Arguments to update one ProjectGallery.
     * @example
     * // Update one ProjectGallery
     * const projectGallery = await prisma.projectGallery.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProjectGalleryUpdateArgs>(args: SelectSubset<T, ProjectGalleryUpdateArgs<ExtArgs>>): Prisma__ProjectGalleryClient<$Result.GetResult<Prisma.$ProjectGalleryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProjectGalleries.
     * @param {ProjectGalleryDeleteManyArgs} args - Arguments to filter ProjectGalleries to delete.
     * @example
     * // Delete a few ProjectGalleries
     * const { count } = await prisma.projectGallery.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProjectGalleryDeleteManyArgs>(args?: SelectSubset<T, ProjectGalleryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProjectGalleries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGalleryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProjectGalleries
     * const projectGallery = await prisma.projectGallery.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProjectGalleryUpdateManyArgs>(args: SelectSubset<T, ProjectGalleryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProjectGallery.
     * @param {ProjectGalleryUpsertArgs} args - Arguments to update or create a ProjectGallery.
     * @example
     * // Update or create a ProjectGallery
     * const projectGallery = await prisma.projectGallery.upsert({
     *   create: {
     *     // ... data to create a ProjectGallery
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProjectGallery we want to update
     *   }
     * })
     */
    upsert<T extends ProjectGalleryUpsertArgs>(args: SelectSubset<T, ProjectGalleryUpsertArgs<ExtArgs>>): Prisma__ProjectGalleryClient<$Result.GetResult<Prisma.$ProjectGalleryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProjectGalleries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGalleryCountArgs} args - Arguments to filter ProjectGalleries to count.
     * @example
     * // Count the number of ProjectGalleries
     * const count = await prisma.projectGallery.count({
     *   where: {
     *     // ... the filter for the ProjectGalleries we want to count
     *   }
     * })
    **/
    count<T extends ProjectGalleryCountArgs>(
      args?: Subset<T, ProjectGalleryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectGalleryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProjectGallery.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGalleryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectGalleryAggregateArgs>(args: Subset<T, ProjectGalleryAggregateArgs>): Prisma.PrismaPromise<GetProjectGalleryAggregateType<T>>

    /**
     * Group by ProjectGallery.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGalleryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectGalleryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectGalleryGroupByArgs['orderBy'] }
        : { orderBy?: ProjectGalleryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectGalleryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectGalleryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProjectGallery model
   */
  readonly fields: ProjectGalleryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProjectGallery.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProjectGalleryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    project<T extends ProjectDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProjectDefaultArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProjectGallery model
   */ 
  interface ProjectGalleryFieldRefs {
    readonly id: FieldRef<"ProjectGallery", 'String'>
    readonly project_id: FieldRef<"ProjectGallery", 'String'>
    readonly image_url: FieldRef<"ProjectGallery", 'String'>
    readonly title: FieldRef<"ProjectGallery", 'String'>
    readonly subtitle: FieldRef<"ProjectGallery", 'String'>
    readonly sequence_no: FieldRef<"ProjectGallery", 'Int'>
    readonly created_at: FieldRef<"ProjectGallery", 'DateTime'>
    readonly created_by: FieldRef<"ProjectGallery", 'String'>
    readonly created_ip: FieldRef<"ProjectGallery", 'String'>
    readonly updated_at: FieldRef<"ProjectGallery", 'DateTime'>
    readonly updated_by: FieldRef<"ProjectGallery", 'String'>
    readonly updated_ip: FieldRef<"ProjectGallery", 'String'>
    readonly company_id: FieldRef<"ProjectGallery", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProjectGallery findUnique
   */
  export type ProjectGalleryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectGallery
     */
    select?: ProjectGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectGalleryInclude<ExtArgs> | null
    /**
     * Filter, which ProjectGallery to fetch.
     */
    where: ProjectGalleryWhereUniqueInput
  }

  /**
   * ProjectGallery findUniqueOrThrow
   */
  export type ProjectGalleryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectGallery
     */
    select?: ProjectGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectGalleryInclude<ExtArgs> | null
    /**
     * Filter, which ProjectGallery to fetch.
     */
    where: ProjectGalleryWhereUniqueInput
  }

  /**
   * ProjectGallery findFirst
   */
  export type ProjectGalleryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectGallery
     */
    select?: ProjectGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectGalleryInclude<ExtArgs> | null
    /**
     * Filter, which ProjectGallery to fetch.
     */
    where?: ProjectGalleryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectGalleries to fetch.
     */
    orderBy?: ProjectGalleryOrderByWithRelationInput | ProjectGalleryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectGalleries.
     */
    cursor?: ProjectGalleryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectGalleries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectGalleries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectGalleries.
     */
    distinct?: ProjectGalleryScalarFieldEnum | ProjectGalleryScalarFieldEnum[]
  }

  /**
   * ProjectGallery findFirstOrThrow
   */
  export type ProjectGalleryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectGallery
     */
    select?: ProjectGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectGalleryInclude<ExtArgs> | null
    /**
     * Filter, which ProjectGallery to fetch.
     */
    where?: ProjectGalleryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectGalleries to fetch.
     */
    orderBy?: ProjectGalleryOrderByWithRelationInput | ProjectGalleryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectGalleries.
     */
    cursor?: ProjectGalleryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectGalleries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectGalleries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectGalleries.
     */
    distinct?: ProjectGalleryScalarFieldEnum | ProjectGalleryScalarFieldEnum[]
  }

  /**
   * ProjectGallery findMany
   */
  export type ProjectGalleryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectGallery
     */
    select?: ProjectGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectGalleryInclude<ExtArgs> | null
    /**
     * Filter, which ProjectGalleries to fetch.
     */
    where?: ProjectGalleryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectGalleries to fetch.
     */
    orderBy?: ProjectGalleryOrderByWithRelationInput | ProjectGalleryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProjectGalleries.
     */
    cursor?: ProjectGalleryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectGalleries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectGalleries.
     */
    skip?: number
    distinct?: ProjectGalleryScalarFieldEnum | ProjectGalleryScalarFieldEnum[]
  }

  /**
   * ProjectGallery create
   */
  export type ProjectGalleryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectGallery
     */
    select?: ProjectGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectGalleryInclude<ExtArgs> | null
    /**
     * The data needed to create a ProjectGallery.
     */
    data: XOR<ProjectGalleryCreateInput, ProjectGalleryUncheckedCreateInput>
  }

  /**
   * ProjectGallery createMany
   */
  export type ProjectGalleryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProjectGalleries.
     */
    data: ProjectGalleryCreateManyInput | ProjectGalleryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProjectGallery update
   */
  export type ProjectGalleryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectGallery
     */
    select?: ProjectGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectGalleryInclude<ExtArgs> | null
    /**
     * The data needed to update a ProjectGallery.
     */
    data: XOR<ProjectGalleryUpdateInput, ProjectGalleryUncheckedUpdateInput>
    /**
     * Choose, which ProjectGallery to update.
     */
    where: ProjectGalleryWhereUniqueInput
  }

  /**
   * ProjectGallery updateMany
   */
  export type ProjectGalleryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProjectGalleries.
     */
    data: XOR<ProjectGalleryUpdateManyMutationInput, ProjectGalleryUncheckedUpdateManyInput>
    /**
     * Filter which ProjectGalleries to update
     */
    where?: ProjectGalleryWhereInput
  }

  /**
   * ProjectGallery upsert
   */
  export type ProjectGalleryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectGallery
     */
    select?: ProjectGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectGalleryInclude<ExtArgs> | null
    /**
     * The filter to search for the ProjectGallery to update in case it exists.
     */
    where: ProjectGalleryWhereUniqueInput
    /**
     * In case the ProjectGallery found by the `where` argument doesn't exist, create a new ProjectGallery with this data.
     */
    create: XOR<ProjectGalleryCreateInput, ProjectGalleryUncheckedCreateInput>
    /**
     * In case the ProjectGallery was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProjectGalleryUpdateInput, ProjectGalleryUncheckedUpdateInput>
  }

  /**
   * ProjectGallery delete
   */
  export type ProjectGalleryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectGallery
     */
    select?: ProjectGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectGalleryInclude<ExtArgs> | null
    /**
     * Filter which ProjectGallery to delete.
     */
    where: ProjectGalleryWhereUniqueInput
  }

  /**
   * ProjectGallery deleteMany
   */
  export type ProjectGalleryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProjectGalleries to delete
     */
    where?: ProjectGalleryWhereInput
  }

  /**
   * ProjectGallery without action
   */
  export type ProjectGalleryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectGallery
     */
    select?: ProjectGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectGalleryInclude<ExtArgs> | null
  }


  /**
   * Model ProjectKeyFeature
   */

  export type AggregateProjectKeyFeature = {
    _count: ProjectKeyFeatureCountAggregateOutputType | null
    _min: ProjectKeyFeatureMinAggregateOutputType | null
    _max: ProjectKeyFeatureMaxAggregateOutputType | null
  }

  export type ProjectKeyFeatureMinAggregateOutputType = {
    id: string | null
    project_id: string | null
    feature: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ProjectKeyFeatureMaxAggregateOutputType = {
    id: string | null
    project_id: string | null
    feature: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ProjectKeyFeatureCountAggregateOutputType = {
    id: number
    project_id: number
    feature: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type ProjectKeyFeatureMinAggregateInputType = {
    id?: true
    project_id?: true
    feature?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ProjectKeyFeatureMaxAggregateInputType = {
    id?: true
    project_id?: true
    feature?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ProjectKeyFeatureCountAggregateInputType = {
    id?: true
    project_id?: true
    feature?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type ProjectKeyFeatureAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProjectKeyFeature to aggregate.
     */
    where?: ProjectKeyFeatureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectKeyFeatures to fetch.
     */
    orderBy?: ProjectKeyFeatureOrderByWithRelationInput | ProjectKeyFeatureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProjectKeyFeatureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectKeyFeatures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectKeyFeatures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProjectKeyFeatures
    **/
    _count?: true | ProjectKeyFeatureCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectKeyFeatureMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectKeyFeatureMaxAggregateInputType
  }

  export type GetProjectKeyFeatureAggregateType<T extends ProjectKeyFeatureAggregateArgs> = {
        [P in keyof T & keyof AggregateProjectKeyFeature]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProjectKeyFeature[P]>
      : GetScalarType<T[P], AggregateProjectKeyFeature[P]>
  }




  export type ProjectKeyFeatureGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectKeyFeatureWhereInput
    orderBy?: ProjectKeyFeatureOrderByWithAggregationInput | ProjectKeyFeatureOrderByWithAggregationInput[]
    by: ProjectKeyFeatureScalarFieldEnum[] | ProjectKeyFeatureScalarFieldEnum
    having?: ProjectKeyFeatureScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectKeyFeatureCountAggregateInputType | true
    _min?: ProjectKeyFeatureMinAggregateInputType
    _max?: ProjectKeyFeatureMaxAggregateInputType
  }

  export type ProjectKeyFeatureGroupByOutputType = {
    id: string
    project_id: string
    feature: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: ProjectKeyFeatureCountAggregateOutputType | null
    _min: ProjectKeyFeatureMinAggregateOutputType | null
    _max: ProjectKeyFeatureMaxAggregateOutputType | null
  }

  type GetProjectKeyFeatureGroupByPayload<T extends ProjectKeyFeatureGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectKeyFeatureGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectKeyFeatureGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectKeyFeatureGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectKeyFeatureGroupByOutputType[P]>
        }
      >
    >


  export type ProjectKeyFeatureSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    feature?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["projectKeyFeature"]>


  export type ProjectKeyFeatureSelectScalar = {
    id?: boolean
    project_id?: boolean
    feature?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type ProjectKeyFeatureInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }

  export type $ProjectKeyFeaturePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProjectKeyFeature"
    objects: {
      project: Prisma.$ProjectPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      project_id: string
      feature: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["projectKeyFeature"]>
    composites: {}
  }

  type ProjectKeyFeatureGetPayload<S extends boolean | null | undefined | ProjectKeyFeatureDefaultArgs> = $Result.GetResult<Prisma.$ProjectKeyFeaturePayload, S>

  type ProjectKeyFeatureCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProjectKeyFeatureFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProjectKeyFeatureCountAggregateInputType | true
    }

  export interface ProjectKeyFeatureDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProjectKeyFeature'], meta: { name: 'ProjectKeyFeature' } }
    /**
     * Find zero or one ProjectKeyFeature that matches the filter.
     * @param {ProjectKeyFeatureFindUniqueArgs} args - Arguments to find a ProjectKeyFeature
     * @example
     * // Get one ProjectKeyFeature
     * const projectKeyFeature = await prisma.projectKeyFeature.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProjectKeyFeatureFindUniqueArgs>(args: SelectSubset<T, ProjectKeyFeatureFindUniqueArgs<ExtArgs>>): Prisma__ProjectKeyFeatureClient<$Result.GetResult<Prisma.$ProjectKeyFeaturePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProjectKeyFeature that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProjectKeyFeatureFindUniqueOrThrowArgs} args - Arguments to find a ProjectKeyFeature
     * @example
     * // Get one ProjectKeyFeature
     * const projectKeyFeature = await prisma.projectKeyFeature.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProjectKeyFeatureFindUniqueOrThrowArgs>(args: SelectSubset<T, ProjectKeyFeatureFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProjectKeyFeatureClient<$Result.GetResult<Prisma.$ProjectKeyFeaturePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProjectKeyFeature that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectKeyFeatureFindFirstArgs} args - Arguments to find a ProjectKeyFeature
     * @example
     * // Get one ProjectKeyFeature
     * const projectKeyFeature = await prisma.projectKeyFeature.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProjectKeyFeatureFindFirstArgs>(args?: SelectSubset<T, ProjectKeyFeatureFindFirstArgs<ExtArgs>>): Prisma__ProjectKeyFeatureClient<$Result.GetResult<Prisma.$ProjectKeyFeaturePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProjectKeyFeature that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectKeyFeatureFindFirstOrThrowArgs} args - Arguments to find a ProjectKeyFeature
     * @example
     * // Get one ProjectKeyFeature
     * const projectKeyFeature = await prisma.projectKeyFeature.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProjectKeyFeatureFindFirstOrThrowArgs>(args?: SelectSubset<T, ProjectKeyFeatureFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProjectKeyFeatureClient<$Result.GetResult<Prisma.$ProjectKeyFeaturePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProjectKeyFeatures that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectKeyFeatureFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProjectKeyFeatures
     * const projectKeyFeatures = await prisma.projectKeyFeature.findMany()
     * 
     * // Get first 10 ProjectKeyFeatures
     * const projectKeyFeatures = await prisma.projectKeyFeature.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectKeyFeatureWithIdOnly = await prisma.projectKeyFeature.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProjectKeyFeatureFindManyArgs>(args?: SelectSubset<T, ProjectKeyFeatureFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectKeyFeaturePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProjectKeyFeature.
     * @param {ProjectKeyFeatureCreateArgs} args - Arguments to create a ProjectKeyFeature.
     * @example
     * // Create one ProjectKeyFeature
     * const ProjectKeyFeature = await prisma.projectKeyFeature.create({
     *   data: {
     *     // ... data to create a ProjectKeyFeature
     *   }
     * })
     * 
     */
    create<T extends ProjectKeyFeatureCreateArgs>(args: SelectSubset<T, ProjectKeyFeatureCreateArgs<ExtArgs>>): Prisma__ProjectKeyFeatureClient<$Result.GetResult<Prisma.$ProjectKeyFeaturePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProjectKeyFeatures.
     * @param {ProjectKeyFeatureCreateManyArgs} args - Arguments to create many ProjectKeyFeatures.
     * @example
     * // Create many ProjectKeyFeatures
     * const projectKeyFeature = await prisma.projectKeyFeature.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProjectKeyFeatureCreateManyArgs>(args?: SelectSubset<T, ProjectKeyFeatureCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ProjectKeyFeature.
     * @param {ProjectKeyFeatureDeleteArgs} args - Arguments to delete one ProjectKeyFeature.
     * @example
     * // Delete one ProjectKeyFeature
     * const ProjectKeyFeature = await prisma.projectKeyFeature.delete({
     *   where: {
     *     // ... filter to delete one ProjectKeyFeature
     *   }
     * })
     * 
     */
    delete<T extends ProjectKeyFeatureDeleteArgs>(args: SelectSubset<T, ProjectKeyFeatureDeleteArgs<ExtArgs>>): Prisma__ProjectKeyFeatureClient<$Result.GetResult<Prisma.$ProjectKeyFeaturePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProjectKeyFeature.
     * @param {ProjectKeyFeatureUpdateArgs} args - Arguments to update one ProjectKeyFeature.
     * @example
     * // Update one ProjectKeyFeature
     * const projectKeyFeature = await prisma.projectKeyFeature.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProjectKeyFeatureUpdateArgs>(args: SelectSubset<T, ProjectKeyFeatureUpdateArgs<ExtArgs>>): Prisma__ProjectKeyFeatureClient<$Result.GetResult<Prisma.$ProjectKeyFeaturePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProjectKeyFeatures.
     * @param {ProjectKeyFeatureDeleteManyArgs} args - Arguments to filter ProjectKeyFeatures to delete.
     * @example
     * // Delete a few ProjectKeyFeatures
     * const { count } = await prisma.projectKeyFeature.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProjectKeyFeatureDeleteManyArgs>(args?: SelectSubset<T, ProjectKeyFeatureDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProjectKeyFeatures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectKeyFeatureUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProjectKeyFeatures
     * const projectKeyFeature = await prisma.projectKeyFeature.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProjectKeyFeatureUpdateManyArgs>(args: SelectSubset<T, ProjectKeyFeatureUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProjectKeyFeature.
     * @param {ProjectKeyFeatureUpsertArgs} args - Arguments to update or create a ProjectKeyFeature.
     * @example
     * // Update or create a ProjectKeyFeature
     * const projectKeyFeature = await prisma.projectKeyFeature.upsert({
     *   create: {
     *     // ... data to create a ProjectKeyFeature
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProjectKeyFeature we want to update
     *   }
     * })
     */
    upsert<T extends ProjectKeyFeatureUpsertArgs>(args: SelectSubset<T, ProjectKeyFeatureUpsertArgs<ExtArgs>>): Prisma__ProjectKeyFeatureClient<$Result.GetResult<Prisma.$ProjectKeyFeaturePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProjectKeyFeatures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectKeyFeatureCountArgs} args - Arguments to filter ProjectKeyFeatures to count.
     * @example
     * // Count the number of ProjectKeyFeatures
     * const count = await prisma.projectKeyFeature.count({
     *   where: {
     *     // ... the filter for the ProjectKeyFeatures we want to count
     *   }
     * })
    **/
    count<T extends ProjectKeyFeatureCountArgs>(
      args?: Subset<T, ProjectKeyFeatureCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectKeyFeatureCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProjectKeyFeature.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectKeyFeatureAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectKeyFeatureAggregateArgs>(args: Subset<T, ProjectKeyFeatureAggregateArgs>): Prisma.PrismaPromise<GetProjectKeyFeatureAggregateType<T>>

    /**
     * Group by ProjectKeyFeature.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectKeyFeatureGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectKeyFeatureGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectKeyFeatureGroupByArgs['orderBy'] }
        : { orderBy?: ProjectKeyFeatureGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectKeyFeatureGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectKeyFeatureGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProjectKeyFeature model
   */
  readonly fields: ProjectKeyFeatureFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProjectKeyFeature.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProjectKeyFeatureClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    project<T extends ProjectDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProjectDefaultArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProjectKeyFeature model
   */ 
  interface ProjectKeyFeatureFieldRefs {
    readonly id: FieldRef<"ProjectKeyFeature", 'String'>
    readonly project_id: FieldRef<"ProjectKeyFeature", 'String'>
    readonly feature: FieldRef<"ProjectKeyFeature", 'String'>
    readonly created_at: FieldRef<"ProjectKeyFeature", 'DateTime'>
    readonly created_by: FieldRef<"ProjectKeyFeature", 'String'>
    readonly created_ip: FieldRef<"ProjectKeyFeature", 'String'>
    readonly updated_at: FieldRef<"ProjectKeyFeature", 'DateTime'>
    readonly updated_by: FieldRef<"ProjectKeyFeature", 'String'>
    readonly updated_ip: FieldRef<"ProjectKeyFeature", 'String'>
    readonly company_id: FieldRef<"ProjectKeyFeature", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProjectKeyFeature findUnique
   */
  export type ProjectKeyFeatureFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectKeyFeature
     */
    select?: ProjectKeyFeatureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectKeyFeatureInclude<ExtArgs> | null
    /**
     * Filter, which ProjectKeyFeature to fetch.
     */
    where: ProjectKeyFeatureWhereUniqueInput
  }

  /**
   * ProjectKeyFeature findUniqueOrThrow
   */
  export type ProjectKeyFeatureFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectKeyFeature
     */
    select?: ProjectKeyFeatureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectKeyFeatureInclude<ExtArgs> | null
    /**
     * Filter, which ProjectKeyFeature to fetch.
     */
    where: ProjectKeyFeatureWhereUniqueInput
  }

  /**
   * ProjectKeyFeature findFirst
   */
  export type ProjectKeyFeatureFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectKeyFeature
     */
    select?: ProjectKeyFeatureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectKeyFeatureInclude<ExtArgs> | null
    /**
     * Filter, which ProjectKeyFeature to fetch.
     */
    where?: ProjectKeyFeatureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectKeyFeatures to fetch.
     */
    orderBy?: ProjectKeyFeatureOrderByWithRelationInput | ProjectKeyFeatureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectKeyFeatures.
     */
    cursor?: ProjectKeyFeatureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectKeyFeatures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectKeyFeatures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectKeyFeatures.
     */
    distinct?: ProjectKeyFeatureScalarFieldEnum | ProjectKeyFeatureScalarFieldEnum[]
  }

  /**
   * ProjectKeyFeature findFirstOrThrow
   */
  export type ProjectKeyFeatureFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectKeyFeature
     */
    select?: ProjectKeyFeatureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectKeyFeatureInclude<ExtArgs> | null
    /**
     * Filter, which ProjectKeyFeature to fetch.
     */
    where?: ProjectKeyFeatureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectKeyFeatures to fetch.
     */
    orderBy?: ProjectKeyFeatureOrderByWithRelationInput | ProjectKeyFeatureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectKeyFeatures.
     */
    cursor?: ProjectKeyFeatureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectKeyFeatures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectKeyFeatures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectKeyFeatures.
     */
    distinct?: ProjectKeyFeatureScalarFieldEnum | ProjectKeyFeatureScalarFieldEnum[]
  }

  /**
   * ProjectKeyFeature findMany
   */
  export type ProjectKeyFeatureFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectKeyFeature
     */
    select?: ProjectKeyFeatureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectKeyFeatureInclude<ExtArgs> | null
    /**
     * Filter, which ProjectKeyFeatures to fetch.
     */
    where?: ProjectKeyFeatureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectKeyFeatures to fetch.
     */
    orderBy?: ProjectKeyFeatureOrderByWithRelationInput | ProjectKeyFeatureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProjectKeyFeatures.
     */
    cursor?: ProjectKeyFeatureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectKeyFeatures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectKeyFeatures.
     */
    skip?: number
    distinct?: ProjectKeyFeatureScalarFieldEnum | ProjectKeyFeatureScalarFieldEnum[]
  }

  /**
   * ProjectKeyFeature create
   */
  export type ProjectKeyFeatureCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectKeyFeature
     */
    select?: ProjectKeyFeatureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectKeyFeatureInclude<ExtArgs> | null
    /**
     * The data needed to create a ProjectKeyFeature.
     */
    data: XOR<ProjectKeyFeatureCreateInput, ProjectKeyFeatureUncheckedCreateInput>
  }

  /**
   * ProjectKeyFeature createMany
   */
  export type ProjectKeyFeatureCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProjectKeyFeatures.
     */
    data: ProjectKeyFeatureCreateManyInput | ProjectKeyFeatureCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProjectKeyFeature update
   */
  export type ProjectKeyFeatureUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectKeyFeature
     */
    select?: ProjectKeyFeatureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectKeyFeatureInclude<ExtArgs> | null
    /**
     * The data needed to update a ProjectKeyFeature.
     */
    data: XOR<ProjectKeyFeatureUpdateInput, ProjectKeyFeatureUncheckedUpdateInput>
    /**
     * Choose, which ProjectKeyFeature to update.
     */
    where: ProjectKeyFeatureWhereUniqueInput
  }

  /**
   * ProjectKeyFeature updateMany
   */
  export type ProjectKeyFeatureUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProjectKeyFeatures.
     */
    data: XOR<ProjectKeyFeatureUpdateManyMutationInput, ProjectKeyFeatureUncheckedUpdateManyInput>
    /**
     * Filter which ProjectKeyFeatures to update
     */
    where?: ProjectKeyFeatureWhereInput
  }

  /**
   * ProjectKeyFeature upsert
   */
  export type ProjectKeyFeatureUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectKeyFeature
     */
    select?: ProjectKeyFeatureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectKeyFeatureInclude<ExtArgs> | null
    /**
     * The filter to search for the ProjectKeyFeature to update in case it exists.
     */
    where: ProjectKeyFeatureWhereUniqueInput
    /**
     * In case the ProjectKeyFeature found by the `where` argument doesn't exist, create a new ProjectKeyFeature with this data.
     */
    create: XOR<ProjectKeyFeatureCreateInput, ProjectKeyFeatureUncheckedCreateInput>
    /**
     * In case the ProjectKeyFeature was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProjectKeyFeatureUpdateInput, ProjectKeyFeatureUncheckedUpdateInput>
  }

  /**
   * ProjectKeyFeature delete
   */
  export type ProjectKeyFeatureDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectKeyFeature
     */
    select?: ProjectKeyFeatureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectKeyFeatureInclude<ExtArgs> | null
    /**
     * Filter which ProjectKeyFeature to delete.
     */
    where: ProjectKeyFeatureWhereUniqueInput
  }

  /**
   * ProjectKeyFeature deleteMany
   */
  export type ProjectKeyFeatureDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProjectKeyFeatures to delete
     */
    where?: ProjectKeyFeatureWhereInput
  }

  /**
   * ProjectKeyFeature without action
   */
  export type ProjectKeyFeatureDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectKeyFeature
     */
    select?: ProjectKeyFeatureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectKeyFeatureInclude<ExtArgs> | null
  }


  /**
   * Model ProjectService
   */

  export type AggregateProjectService = {
    _count: ProjectServiceCountAggregateOutputType | null
    _min: ProjectServiceMinAggregateOutputType | null
    _max: ProjectServiceMaxAggregateOutputType | null
  }

  export type ProjectServiceMinAggregateOutputType = {
    id: string | null
    project_id: string | null
    service: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ProjectServiceMaxAggregateOutputType = {
    id: string | null
    project_id: string | null
    service: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ProjectServiceCountAggregateOutputType = {
    id: number
    project_id: number
    service: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type ProjectServiceMinAggregateInputType = {
    id?: true
    project_id?: true
    service?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ProjectServiceMaxAggregateInputType = {
    id?: true
    project_id?: true
    service?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ProjectServiceCountAggregateInputType = {
    id?: true
    project_id?: true
    service?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type ProjectServiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProjectService to aggregate.
     */
    where?: ProjectServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectServices to fetch.
     */
    orderBy?: ProjectServiceOrderByWithRelationInput | ProjectServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProjectServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProjectServices
    **/
    _count?: true | ProjectServiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectServiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectServiceMaxAggregateInputType
  }

  export type GetProjectServiceAggregateType<T extends ProjectServiceAggregateArgs> = {
        [P in keyof T & keyof AggregateProjectService]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProjectService[P]>
      : GetScalarType<T[P], AggregateProjectService[P]>
  }




  export type ProjectServiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectServiceWhereInput
    orderBy?: ProjectServiceOrderByWithAggregationInput | ProjectServiceOrderByWithAggregationInput[]
    by: ProjectServiceScalarFieldEnum[] | ProjectServiceScalarFieldEnum
    having?: ProjectServiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectServiceCountAggregateInputType | true
    _min?: ProjectServiceMinAggregateInputType
    _max?: ProjectServiceMaxAggregateInputType
  }

  export type ProjectServiceGroupByOutputType = {
    id: string
    project_id: string
    service: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: ProjectServiceCountAggregateOutputType | null
    _min: ProjectServiceMinAggregateOutputType | null
    _max: ProjectServiceMaxAggregateOutputType | null
  }

  type GetProjectServiceGroupByPayload<T extends ProjectServiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectServiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectServiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectServiceGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectServiceGroupByOutputType[P]>
        }
      >
    >


  export type ProjectServiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    service?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["projectService"]>


  export type ProjectServiceSelectScalar = {
    id?: boolean
    project_id?: boolean
    service?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type ProjectServiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }

  export type $ProjectServicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProjectService"
    objects: {
      project: Prisma.$ProjectPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      project_id: string
      service: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["projectService"]>
    composites: {}
  }

  type ProjectServiceGetPayload<S extends boolean | null | undefined | ProjectServiceDefaultArgs> = $Result.GetResult<Prisma.$ProjectServicePayload, S>

  type ProjectServiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProjectServiceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProjectServiceCountAggregateInputType | true
    }

  export interface ProjectServiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProjectService'], meta: { name: 'ProjectService' } }
    /**
     * Find zero or one ProjectService that matches the filter.
     * @param {ProjectServiceFindUniqueArgs} args - Arguments to find a ProjectService
     * @example
     * // Get one ProjectService
     * const projectService = await prisma.projectService.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProjectServiceFindUniqueArgs>(args: SelectSubset<T, ProjectServiceFindUniqueArgs<ExtArgs>>): Prisma__ProjectServiceClient<$Result.GetResult<Prisma.$ProjectServicePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProjectService that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProjectServiceFindUniqueOrThrowArgs} args - Arguments to find a ProjectService
     * @example
     * // Get one ProjectService
     * const projectService = await prisma.projectService.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProjectServiceFindUniqueOrThrowArgs>(args: SelectSubset<T, ProjectServiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProjectServiceClient<$Result.GetResult<Prisma.$ProjectServicePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProjectService that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectServiceFindFirstArgs} args - Arguments to find a ProjectService
     * @example
     * // Get one ProjectService
     * const projectService = await prisma.projectService.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProjectServiceFindFirstArgs>(args?: SelectSubset<T, ProjectServiceFindFirstArgs<ExtArgs>>): Prisma__ProjectServiceClient<$Result.GetResult<Prisma.$ProjectServicePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProjectService that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectServiceFindFirstOrThrowArgs} args - Arguments to find a ProjectService
     * @example
     * // Get one ProjectService
     * const projectService = await prisma.projectService.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProjectServiceFindFirstOrThrowArgs>(args?: SelectSubset<T, ProjectServiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProjectServiceClient<$Result.GetResult<Prisma.$ProjectServicePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProjectServices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectServiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProjectServices
     * const projectServices = await prisma.projectService.findMany()
     * 
     * // Get first 10 ProjectServices
     * const projectServices = await prisma.projectService.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectServiceWithIdOnly = await prisma.projectService.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProjectServiceFindManyArgs>(args?: SelectSubset<T, ProjectServiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectServicePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProjectService.
     * @param {ProjectServiceCreateArgs} args - Arguments to create a ProjectService.
     * @example
     * // Create one ProjectService
     * const ProjectService = await prisma.projectService.create({
     *   data: {
     *     // ... data to create a ProjectService
     *   }
     * })
     * 
     */
    create<T extends ProjectServiceCreateArgs>(args: SelectSubset<T, ProjectServiceCreateArgs<ExtArgs>>): Prisma__ProjectServiceClient<$Result.GetResult<Prisma.$ProjectServicePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProjectServices.
     * @param {ProjectServiceCreateManyArgs} args - Arguments to create many ProjectServices.
     * @example
     * // Create many ProjectServices
     * const projectService = await prisma.projectService.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProjectServiceCreateManyArgs>(args?: SelectSubset<T, ProjectServiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ProjectService.
     * @param {ProjectServiceDeleteArgs} args - Arguments to delete one ProjectService.
     * @example
     * // Delete one ProjectService
     * const ProjectService = await prisma.projectService.delete({
     *   where: {
     *     // ... filter to delete one ProjectService
     *   }
     * })
     * 
     */
    delete<T extends ProjectServiceDeleteArgs>(args: SelectSubset<T, ProjectServiceDeleteArgs<ExtArgs>>): Prisma__ProjectServiceClient<$Result.GetResult<Prisma.$ProjectServicePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProjectService.
     * @param {ProjectServiceUpdateArgs} args - Arguments to update one ProjectService.
     * @example
     * // Update one ProjectService
     * const projectService = await prisma.projectService.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProjectServiceUpdateArgs>(args: SelectSubset<T, ProjectServiceUpdateArgs<ExtArgs>>): Prisma__ProjectServiceClient<$Result.GetResult<Prisma.$ProjectServicePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProjectServices.
     * @param {ProjectServiceDeleteManyArgs} args - Arguments to filter ProjectServices to delete.
     * @example
     * // Delete a few ProjectServices
     * const { count } = await prisma.projectService.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProjectServiceDeleteManyArgs>(args?: SelectSubset<T, ProjectServiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProjectServices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectServiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProjectServices
     * const projectService = await prisma.projectService.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProjectServiceUpdateManyArgs>(args: SelectSubset<T, ProjectServiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProjectService.
     * @param {ProjectServiceUpsertArgs} args - Arguments to update or create a ProjectService.
     * @example
     * // Update or create a ProjectService
     * const projectService = await prisma.projectService.upsert({
     *   create: {
     *     // ... data to create a ProjectService
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProjectService we want to update
     *   }
     * })
     */
    upsert<T extends ProjectServiceUpsertArgs>(args: SelectSubset<T, ProjectServiceUpsertArgs<ExtArgs>>): Prisma__ProjectServiceClient<$Result.GetResult<Prisma.$ProjectServicePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProjectServices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectServiceCountArgs} args - Arguments to filter ProjectServices to count.
     * @example
     * // Count the number of ProjectServices
     * const count = await prisma.projectService.count({
     *   where: {
     *     // ... the filter for the ProjectServices we want to count
     *   }
     * })
    **/
    count<T extends ProjectServiceCountArgs>(
      args?: Subset<T, ProjectServiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectServiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProjectService.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectServiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectServiceAggregateArgs>(args: Subset<T, ProjectServiceAggregateArgs>): Prisma.PrismaPromise<GetProjectServiceAggregateType<T>>

    /**
     * Group by ProjectService.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectServiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectServiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectServiceGroupByArgs['orderBy'] }
        : { orderBy?: ProjectServiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectServiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectServiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProjectService model
   */
  readonly fields: ProjectServiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProjectService.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProjectServiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    project<T extends ProjectDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProjectDefaultArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProjectService model
   */ 
  interface ProjectServiceFieldRefs {
    readonly id: FieldRef<"ProjectService", 'String'>
    readonly project_id: FieldRef<"ProjectService", 'String'>
    readonly service: FieldRef<"ProjectService", 'String'>
    readonly created_at: FieldRef<"ProjectService", 'DateTime'>
    readonly created_by: FieldRef<"ProjectService", 'String'>
    readonly created_ip: FieldRef<"ProjectService", 'String'>
    readonly updated_at: FieldRef<"ProjectService", 'DateTime'>
    readonly updated_by: FieldRef<"ProjectService", 'String'>
    readonly updated_ip: FieldRef<"ProjectService", 'String'>
    readonly company_id: FieldRef<"ProjectService", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProjectService findUnique
   */
  export type ProjectServiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectService
     */
    select?: ProjectServiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectServiceInclude<ExtArgs> | null
    /**
     * Filter, which ProjectService to fetch.
     */
    where: ProjectServiceWhereUniqueInput
  }

  /**
   * ProjectService findUniqueOrThrow
   */
  export type ProjectServiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectService
     */
    select?: ProjectServiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectServiceInclude<ExtArgs> | null
    /**
     * Filter, which ProjectService to fetch.
     */
    where: ProjectServiceWhereUniqueInput
  }

  /**
   * ProjectService findFirst
   */
  export type ProjectServiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectService
     */
    select?: ProjectServiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectServiceInclude<ExtArgs> | null
    /**
     * Filter, which ProjectService to fetch.
     */
    where?: ProjectServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectServices to fetch.
     */
    orderBy?: ProjectServiceOrderByWithRelationInput | ProjectServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectServices.
     */
    cursor?: ProjectServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectServices.
     */
    distinct?: ProjectServiceScalarFieldEnum | ProjectServiceScalarFieldEnum[]
  }

  /**
   * ProjectService findFirstOrThrow
   */
  export type ProjectServiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectService
     */
    select?: ProjectServiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectServiceInclude<ExtArgs> | null
    /**
     * Filter, which ProjectService to fetch.
     */
    where?: ProjectServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectServices to fetch.
     */
    orderBy?: ProjectServiceOrderByWithRelationInput | ProjectServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectServices.
     */
    cursor?: ProjectServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectServices.
     */
    distinct?: ProjectServiceScalarFieldEnum | ProjectServiceScalarFieldEnum[]
  }

  /**
   * ProjectService findMany
   */
  export type ProjectServiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectService
     */
    select?: ProjectServiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectServiceInclude<ExtArgs> | null
    /**
     * Filter, which ProjectServices to fetch.
     */
    where?: ProjectServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectServices to fetch.
     */
    orderBy?: ProjectServiceOrderByWithRelationInput | ProjectServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProjectServices.
     */
    cursor?: ProjectServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectServices.
     */
    skip?: number
    distinct?: ProjectServiceScalarFieldEnum | ProjectServiceScalarFieldEnum[]
  }

  /**
   * ProjectService create
   */
  export type ProjectServiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectService
     */
    select?: ProjectServiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectServiceInclude<ExtArgs> | null
    /**
     * The data needed to create a ProjectService.
     */
    data: XOR<ProjectServiceCreateInput, ProjectServiceUncheckedCreateInput>
  }

  /**
   * ProjectService createMany
   */
  export type ProjectServiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProjectServices.
     */
    data: ProjectServiceCreateManyInput | ProjectServiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProjectService update
   */
  export type ProjectServiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectService
     */
    select?: ProjectServiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectServiceInclude<ExtArgs> | null
    /**
     * The data needed to update a ProjectService.
     */
    data: XOR<ProjectServiceUpdateInput, ProjectServiceUncheckedUpdateInput>
    /**
     * Choose, which ProjectService to update.
     */
    where: ProjectServiceWhereUniqueInput
  }

  /**
   * ProjectService updateMany
   */
  export type ProjectServiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProjectServices.
     */
    data: XOR<ProjectServiceUpdateManyMutationInput, ProjectServiceUncheckedUpdateManyInput>
    /**
     * Filter which ProjectServices to update
     */
    where?: ProjectServiceWhereInput
  }

  /**
   * ProjectService upsert
   */
  export type ProjectServiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectService
     */
    select?: ProjectServiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectServiceInclude<ExtArgs> | null
    /**
     * The filter to search for the ProjectService to update in case it exists.
     */
    where: ProjectServiceWhereUniqueInput
    /**
     * In case the ProjectService found by the `where` argument doesn't exist, create a new ProjectService with this data.
     */
    create: XOR<ProjectServiceCreateInput, ProjectServiceUncheckedCreateInput>
    /**
     * In case the ProjectService was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProjectServiceUpdateInput, ProjectServiceUncheckedUpdateInput>
  }

  /**
   * ProjectService delete
   */
  export type ProjectServiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectService
     */
    select?: ProjectServiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectServiceInclude<ExtArgs> | null
    /**
     * Filter which ProjectService to delete.
     */
    where: ProjectServiceWhereUniqueInput
  }

  /**
   * ProjectService deleteMany
   */
  export type ProjectServiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProjectServices to delete
     */
    where?: ProjectServiceWhereInput
  }

  /**
   * ProjectService without action
   */
  export type ProjectServiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectService
     */
    select?: ProjectServiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectServiceInclude<ExtArgs> | null
  }


  /**
   * Model Contact
   */

  export type AggregateContact = {
    _count: ContactCountAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  export type ContactMinAggregateOutputType = {
    id: string | null
    first_name: string | null
    last_name: string | null
    email: string | null
    phone: string | null
    message: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ContactMaxAggregateOutputType = {
    id: string | null
    first_name: string | null
    last_name: string | null
    email: string | null
    phone: string | null
    message: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ContactCountAggregateOutputType = {
    id: number
    first_name: number
    last_name: number
    email: number
    phone: number
    message: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type ContactMinAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    phone?: true
    message?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ContactMaxAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    phone?: true
    message?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ContactCountAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    phone?: true
    message?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type ContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contact to aggregate.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Contacts
    **/
    _count?: true | ContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContactMaxAggregateInputType
  }

  export type GetContactAggregateType<T extends ContactAggregateArgs> = {
        [P in keyof T & keyof AggregateContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContact[P]>
      : GetScalarType<T[P], AggregateContact[P]>
  }




  export type ContactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithAggregationInput | ContactOrderByWithAggregationInput[]
    by: ContactScalarFieldEnum[] | ContactScalarFieldEnum
    having?: ContactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContactCountAggregateInputType | true
    _min?: ContactMinAggregateInputType
    _max?: ContactMaxAggregateInputType
  }

  export type ContactGroupByOutputType = {
    id: string
    first_name: string
    last_name: string
    email: string
    phone: string
    message: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: ContactCountAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  type GetContactGroupByPayload<T extends ContactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContactGroupByOutputType[P]>
            : GetScalarType<T[P], ContactGroupByOutputType[P]>
        }
      >
    >


  export type ContactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone?: boolean
    message?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }, ExtArgs["result"]["contact"]>


  export type ContactSelectScalar = {
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone?: boolean
    message?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }


  export type $ContactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Contact"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      first_name: string
      last_name: string
      email: string
      phone: string
      message: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["contact"]>
    composites: {}
  }

  type ContactGetPayload<S extends boolean | null | undefined | ContactDefaultArgs> = $Result.GetResult<Prisma.$ContactPayload, S>

  type ContactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ContactFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ContactCountAggregateInputType | true
    }

  export interface ContactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Contact'], meta: { name: 'Contact' } }
    /**
     * Find zero or one Contact that matches the filter.
     * @param {ContactFindUniqueArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContactFindUniqueArgs>(args: SelectSubset<T, ContactFindUniqueArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Contact that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ContactFindUniqueOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContactFindUniqueOrThrowArgs>(args: SelectSubset<T, ContactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Contact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContactFindFirstArgs>(args?: SelectSubset<T, ContactFindFirstArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Contact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContactFindFirstOrThrowArgs>(args?: SelectSubset<T, ContactFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Contacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contacts
     * const contacts = await prisma.contact.findMany()
     * 
     * // Get first 10 Contacts
     * const contacts = await prisma.contact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contactWithIdOnly = await prisma.contact.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ContactFindManyArgs>(args?: SelectSubset<T, ContactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Contact.
     * @param {ContactCreateArgs} args - Arguments to create a Contact.
     * @example
     * // Create one Contact
     * const Contact = await prisma.contact.create({
     *   data: {
     *     // ... data to create a Contact
     *   }
     * })
     * 
     */
    create<T extends ContactCreateArgs>(args: SelectSubset<T, ContactCreateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Contacts.
     * @param {ContactCreateManyArgs} args - Arguments to create many Contacts.
     * @example
     * // Create many Contacts
     * const contact = await prisma.contact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContactCreateManyArgs>(args?: SelectSubset<T, ContactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Contact.
     * @param {ContactDeleteArgs} args - Arguments to delete one Contact.
     * @example
     * // Delete one Contact
     * const Contact = await prisma.contact.delete({
     *   where: {
     *     // ... filter to delete one Contact
     *   }
     * })
     * 
     */
    delete<T extends ContactDeleteArgs>(args: SelectSubset<T, ContactDeleteArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Contact.
     * @param {ContactUpdateArgs} args - Arguments to update one Contact.
     * @example
     * // Update one Contact
     * const contact = await prisma.contact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContactUpdateArgs>(args: SelectSubset<T, ContactUpdateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Contacts.
     * @param {ContactDeleteManyArgs} args - Arguments to filter Contacts to delete.
     * @example
     * // Delete a few Contacts
     * const { count } = await prisma.contact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContactDeleteManyArgs>(args?: SelectSubset<T, ContactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contacts
     * const contact = await prisma.contact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContactUpdateManyArgs>(args: SelectSubset<T, ContactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contact.
     * @param {ContactUpsertArgs} args - Arguments to update or create a Contact.
     * @example
     * // Update or create a Contact
     * const contact = await prisma.contact.upsert({
     *   create: {
     *     // ... data to create a Contact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contact we want to update
     *   }
     * })
     */
    upsert<T extends ContactUpsertArgs>(args: SelectSubset<T, ContactUpsertArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactCountArgs} args - Arguments to filter Contacts to count.
     * @example
     * // Count the number of Contacts
     * const count = await prisma.contact.count({
     *   where: {
     *     // ... the filter for the Contacts we want to count
     *   }
     * })
    **/
    count<T extends ContactCountArgs>(
      args?: Subset<T, ContactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContactAggregateArgs>(args: Subset<T, ContactAggregateArgs>): Prisma.PrismaPromise<GetContactAggregateType<T>>

    /**
     * Group by Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContactGroupByArgs['orderBy'] }
        : { orderBy?: ContactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Contact model
   */
  readonly fields: ContactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Contact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Contact model
   */ 
  interface ContactFieldRefs {
    readonly id: FieldRef<"Contact", 'String'>
    readonly first_name: FieldRef<"Contact", 'String'>
    readonly last_name: FieldRef<"Contact", 'String'>
    readonly email: FieldRef<"Contact", 'String'>
    readonly phone: FieldRef<"Contact", 'String'>
    readonly message: FieldRef<"Contact", 'String'>
    readonly created_at: FieldRef<"Contact", 'DateTime'>
    readonly created_by: FieldRef<"Contact", 'String'>
    readonly created_ip: FieldRef<"Contact", 'String'>
    readonly updated_at: FieldRef<"Contact", 'DateTime'>
    readonly updated_by: FieldRef<"Contact", 'String'>
    readonly updated_ip: FieldRef<"Contact", 'String'>
    readonly company_id: FieldRef<"Contact", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Contact findUnique
   */
  export type ContactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findUniqueOrThrow
   */
  export type ContactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findFirst
   */
  export type ContactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findFirstOrThrow
   */
  export type ContactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findMany
   */
  export type ContactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Filter, which Contacts to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact create
   */
  export type ContactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * The data needed to create a Contact.
     */
    data: XOR<ContactCreateInput, ContactUncheckedCreateInput>
  }

  /**
   * Contact createMany
   */
  export type ContactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Contacts.
     */
    data: ContactCreateManyInput | ContactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Contact update
   */
  export type ContactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * The data needed to update a Contact.
     */
    data: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
    /**
     * Choose, which Contact to update.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact updateMany
   */
  export type ContactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Contacts.
     */
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyInput>
    /**
     * Filter which Contacts to update
     */
    where?: ContactWhereInput
  }

  /**
   * Contact upsert
   */
  export type ContactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * The filter to search for the Contact to update in case it exists.
     */
    where: ContactWhereUniqueInput
    /**
     * In case the Contact found by the `where` argument doesn't exist, create a new Contact with this data.
     */
    create: XOR<ContactCreateInput, ContactUncheckedCreateInput>
    /**
     * In case the Contact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
  }

  /**
   * Contact delete
   */
  export type ContactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Filter which Contact to delete.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact deleteMany
   */
  export type ContactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contacts to delete
     */
    where?: ContactWhereInput
  }

  /**
   * Contact without action
   */
  export type ContactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type CategoryMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: string
    name: string
    description: string | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    Projects?: boolean | Category$ProjectsArgs<ExtArgs>
    News?: boolean | Category$NewsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>


  export type CategorySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Projects?: boolean | Category$ProjectsArgs<ExtArgs>
    News?: boolean | Category$NewsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      Projects: Prisma.$ProjectPayload<ExtArgs>[]
      News: Prisma.$NewsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Projects<T extends Category$ProjectsArgs<ExtArgs> = {}>(args?: Subset<T, Category$ProjectsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany"> | Null>
    News<T extends Category$NewsArgs<ExtArgs> = {}>(args?: Subset<T, Category$NewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */ 
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'String'>
    readonly name: FieldRef<"Category", 'String'>
    readonly description: FieldRef<"Category", 'String'>
    readonly created_at: FieldRef<"Category", 'DateTime'>
    readonly created_by: FieldRef<"Category", 'String'>
    readonly created_ip: FieldRef<"Category", 'String'>
    readonly updated_at: FieldRef<"Category", 'DateTime'>
    readonly updated_by: FieldRef<"Category", 'String'>
    readonly updated_ip: FieldRef<"Category", 'String'>
    readonly company_id: FieldRef<"Category", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
  }

  /**
   * Category.Projects
   */
  export type Category$ProjectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    cursor?: ProjectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Category.News
   */
  export type Category$NewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    where?: NewsWhereInput
    orderBy?: NewsOrderByWithRelationInput | NewsOrderByWithRelationInput[]
    cursor?: NewsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NewsScalarFieldEnum | NewsScalarFieldEnum[]
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Career
   */

  export type AggregateCareer = {
    _count: CareerCountAggregateOutputType | null
    _min: CareerMinAggregateOutputType | null
    _max: CareerMaxAggregateOutputType | null
  }

  export type CareerMinAggregateOutputType = {
    id: string | null
    first_name: string | null
    last_name: string | null
    email: string | null
    document_url: string | null
    applied_position: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type CareerMaxAggregateOutputType = {
    id: string | null
    first_name: string | null
    last_name: string | null
    email: string | null
    document_url: string | null
    applied_position: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type CareerCountAggregateOutputType = {
    id: number
    first_name: number
    last_name: number
    email: number
    document_url: number
    applied_position: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type CareerMinAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    document_url?: true
    applied_position?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type CareerMaxAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    document_url?: true
    applied_position?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type CareerCountAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    document_url?: true
    applied_position?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type CareerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Career to aggregate.
     */
    where?: CareerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Careers to fetch.
     */
    orderBy?: CareerOrderByWithRelationInput | CareerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CareerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Careers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Careers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Careers
    **/
    _count?: true | CareerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CareerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CareerMaxAggregateInputType
  }

  export type GetCareerAggregateType<T extends CareerAggregateArgs> = {
        [P in keyof T & keyof AggregateCareer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCareer[P]>
      : GetScalarType<T[P], AggregateCareer[P]>
  }




  export type CareerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CareerWhereInput
    orderBy?: CareerOrderByWithAggregationInput | CareerOrderByWithAggregationInput[]
    by: CareerScalarFieldEnum[] | CareerScalarFieldEnum
    having?: CareerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CareerCountAggregateInputType | true
    _min?: CareerMinAggregateInputType
    _max?: CareerMaxAggregateInputType
  }

  export type CareerGroupByOutputType = {
    id: string
    first_name: string
    last_name: string
    email: string
    document_url: string
    applied_position: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: CareerCountAggregateOutputType | null
    _min: CareerMinAggregateOutputType | null
    _max: CareerMaxAggregateOutputType | null
  }

  type GetCareerGroupByPayload<T extends CareerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CareerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CareerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CareerGroupByOutputType[P]>
            : GetScalarType<T[P], CareerGroupByOutputType[P]>
        }
      >
    >


  export type CareerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    document_url?: boolean
    applied_position?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }, ExtArgs["result"]["career"]>


  export type CareerSelectScalar = {
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    document_url?: boolean
    applied_position?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }


  export type $CareerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Career"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      first_name: string
      last_name: string
      email: string
      document_url: string
      applied_position: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["career"]>
    composites: {}
  }

  type CareerGetPayload<S extends boolean | null | undefined | CareerDefaultArgs> = $Result.GetResult<Prisma.$CareerPayload, S>

  type CareerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CareerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CareerCountAggregateInputType | true
    }

  export interface CareerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Career'], meta: { name: 'Career' } }
    /**
     * Find zero or one Career that matches the filter.
     * @param {CareerFindUniqueArgs} args - Arguments to find a Career
     * @example
     * // Get one Career
     * const career = await prisma.career.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CareerFindUniqueArgs>(args: SelectSubset<T, CareerFindUniqueArgs<ExtArgs>>): Prisma__CareerClient<$Result.GetResult<Prisma.$CareerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Career that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CareerFindUniqueOrThrowArgs} args - Arguments to find a Career
     * @example
     * // Get one Career
     * const career = await prisma.career.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CareerFindUniqueOrThrowArgs>(args: SelectSubset<T, CareerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CareerClient<$Result.GetResult<Prisma.$CareerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Career that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareerFindFirstArgs} args - Arguments to find a Career
     * @example
     * // Get one Career
     * const career = await prisma.career.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CareerFindFirstArgs>(args?: SelectSubset<T, CareerFindFirstArgs<ExtArgs>>): Prisma__CareerClient<$Result.GetResult<Prisma.$CareerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Career that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareerFindFirstOrThrowArgs} args - Arguments to find a Career
     * @example
     * // Get one Career
     * const career = await prisma.career.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CareerFindFirstOrThrowArgs>(args?: SelectSubset<T, CareerFindFirstOrThrowArgs<ExtArgs>>): Prisma__CareerClient<$Result.GetResult<Prisma.$CareerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Careers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Careers
     * const careers = await prisma.career.findMany()
     * 
     * // Get first 10 Careers
     * const careers = await prisma.career.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const careerWithIdOnly = await prisma.career.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CareerFindManyArgs>(args?: SelectSubset<T, CareerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CareerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Career.
     * @param {CareerCreateArgs} args - Arguments to create a Career.
     * @example
     * // Create one Career
     * const Career = await prisma.career.create({
     *   data: {
     *     // ... data to create a Career
     *   }
     * })
     * 
     */
    create<T extends CareerCreateArgs>(args: SelectSubset<T, CareerCreateArgs<ExtArgs>>): Prisma__CareerClient<$Result.GetResult<Prisma.$CareerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Careers.
     * @param {CareerCreateManyArgs} args - Arguments to create many Careers.
     * @example
     * // Create many Careers
     * const career = await prisma.career.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CareerCreateManyArgs>(args?: SelectSubset<T, CareerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Career.
     * @param {CareerDeleteArgs} args - Arguments to delete one Career.
     * @example
     * // Delete one Career
     * const Career = await prisma.career.delete({
     *   where: {
     *     // ... filter to delete one Career
     *   }
     * })
     * 
     */
    delete<T extends CareerDeleteArgs>(args: SelectSubset<T, CareerDeleteArgs<ExtArgs>>): Prisma__CareerClient<$Result.GetResult<Prisma.$CareerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Career.
     * @param {CareerUpdateArgs} args - Arguments to update one Career.
     * @example
     * // Update one Career
     * const career = await prisma.career.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CareerUpdateArgs>(args: SelectSubset<T, CareerUpdateArgs<ExtArgs>>): Prisma__CareerClient<$Result.GetResult<Prisma.$CareerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Careers.
     * @param {CareerDeleteManyArgs} args - Arguments to filter Careers to delete.
     * @example
     * // Delete a few Careers
     * const { count } = await prisma.career.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CareerDeleteManyArgs>(args?: SelectSubset<T, CareerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Careers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Careers
     * const career = await prisma.career.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CareerUpdateManyArgs>(args: SelectSubset<T, CareerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Career.
     * @param {CareerUpsertArgs} args - Arguments to update or create a Career.
     * @example
     * // Update or create a Career
     * const career = await prisma.career.upsert({
     *   create: {
     *     // ... data to create a Career
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Career we want to update
     *   }
     * })
     */
    upsert<T extends CareerUpsertArgs>(args: SelectSubset<T, CareerUpsertArgs<ExtArgs>>): Prisma__CareerClient<$Result.GetResult<Prisma.$CareerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Careers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareerCountArgs} args - Arguments to filter Careers to count.
     * @example
     * // Count the number of Careers
     * const count = await prisma.career.count({
     *   where: {
     *     // ... the filter for the Careers we want to count
     *   }
     * })
    **/
    count<T extends CareerCountArgs>(
      args?: Subset<T, CareerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CareerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Career.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CareerAggregateArgs>(args: Subset<T, CareerAggregateArgs>): Prisma.PrismaPromise<GetCareerAggregateType<T>>

    /**
     * Group by Career.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CareerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CareerGroupByArgs['orderBy'] }
        : { orderBy?: CareerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CareerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCareerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Career model
   */
  readonly fields: CareerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Career.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CareerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Career model
   */ 
  interface CareerFieldRefs {
    readonly id: FieldRef<"Career", 'String'>
    readonly first_name: FieldRef<"Career", 'String'>
    readonly last_name: FieldRef<"Career", 'String'>
    readonly email: FieldRef<"Career", 'String'>
    readonly document_url: FieldRef<"Career", 'String'>
    readonly applied_position: FieldRef<"Career", 'String'>
    readonly created_at: FieldRef<"Career", 'DateTime'>
    readonly created_by: FieldRef<"Career", 'String'>
    readonly created_ip: FieldRef<"Career", 'String'>
    readonly updated_at: FieldRef<"Career", 'DateTime'>
    readonly updated_by: FieldRef<"Career", 'String'>
    readonly updated_ip: FieldRef<"Career", 'String'>
    readonly company_id: FieldRef<"Career", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Career findUnique
   */
  export type CareerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Career
     */
    select?: CareerSelect<ExtArgs> | null
    /**
     * Filter, which Career to fetch.
     */
    where: CareerWhereUniqueInput
  }

  /**
   * Career findUniqueOrThrow
   */
  export type CareerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Career
     */
    select?: CareerSelect<ExtArgs> | null
    /**
     * Filter, which Career to fetch.
     */
    where: CareerWhereUniqueInput
  }

  /**
   * Career findFirst
   */
  export type CareerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Career
     */
    select?: CareerSelect<ExtArgs> | null
    /**
     * Filter, which Career to fetch.
     */
    where?: CareerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Careers to fetch.
     */
    orderBy?: CareerOrderByWithRelationInput | CareerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Careers.
     */
    cursor?: CareerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Careers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Careers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Careers.
     */
    distinct?: CareerScalarFieldEnum | CareerScalarFieldEnum[]
  }

  /**
   * Career findFirstOrThrow
   */
  export type CareerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Career
     */
    select?: CareerSelect<ExtArgs> | null
    /**
     * Filter, which Career to fetch.
     */
    where?: CareerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Careers to fetch.
     */
    orderBy?: CareerOrderByWithRelationInput | CareerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Careers.
     */
    cursor?: CareerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Careers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Careers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Careers.
     */
    distinct?: CareerScalarFieldEnum | CareerScalarFieldEnum[]
  }

  /**
   * Career findMany
   */
  export type CareerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Career
     */
    select?: CareerSelect<ExtArgs> | null
    /**
     * Filter, which Careers to fetch.
     */
    where?: CareerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Careers to fetch.
     */
    orderBy?: CareerOrderByWithRelationInput | CareerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Careers.
     */
    cursor?: CareerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Careers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Careers.
     */
    skip?: number
    distinct?: CareerScalarFieldEnum | CareerScalarFieldEnum[]
  }

  /**
   * Career create
   */
  export type CareerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Career
     */
    select?: CareerSelect<ExtArgs> | null
    /**
     * The data needed to create a Career.
     */
    data: XOR<CareerCreateInput, CareerUncheckedCreateInput>
  }

  /**
   * Career createMany
   */
  export type CareerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Careers.
     */
    data: CareerCreateManyInput | CareerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Career update
   */
  export type CareerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Career
     */
    select?: CareerSelect<ExtArgs> | null
    /**
     * The data needed to update a Career.
     */
    data: XOR<CareerUpdateInput, CareerUncheckedUpdateInput>
    /**
     * Choose, which Career to update.
     */
    where: CareerWhereUniqueInput
  }

  /**
   * Career updateMany
   */
  export type CareerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Careers.
     */
    data: XOR<CareerUpdateManyMutationInput, CareerUncheckedUpdateManyInput>
    /**
     * Filter which Careers to update
     */
    where?: CareerWhereInput
  }

  /**
   * Career upsert
   */
  export type CareerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Career
     */
    select?: CareerSelect<ExtArgs> | null
    /**
     * The filter to search for the Career to update in case it exists.
     */
    where: CareerWhereUniqueInput
    /**
     * In case the Career found by the `where` argument doesn't exist, create a new Career with this data.
     */
    create: XOR<CareerCreateInput, CareerUncheckedCreateInput>
    /**
     * In case the Career was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CareerUpdateInput, CareerUncheckedUpdateInput>
  }

  /**
   * Career delete
   */
  export type CareerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Career
     */
    select?: CareerSelect<ExtArgs> | null
    /**
     * Filter which Career to delete.
     */
    where: CareerWhereUniqueInput
  }

  /**
   * Career deleteMany
   */
  export type CareerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Careers to delete
     */
    where?: CareerWhereInput
  }

  /**
   * Career without action
   */
  export type CareerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Career
     */
    select?: CareerSelect<ExtArgs> | null
  }


  /**
   * Model News
   */

  export type AggregateNews = {
    _count: NewsCountAggregateOutputType | null
    _min: NewsMinAggregateOutputType | null
    _max: NewsMaxAggregateOutputType | null
  }

  export type NewsMinAggregateOutputType = {
    id: string | null
    title: string | null
    subtitle: string | null
    description: string | null
    category_id: string | null
    publish_date: Date | null
    thumbnail_url: string | null
    type: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type NewsMaxAggregateOutputType = {
    id: string | null
    title: string | null
    subtitle: string | null
    description: string | null
    category_id: string | null
    publish_date: Date | null
    thumbnail_url: string | null
    type: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type NewsCountAggregateOutputType = {
    id: number
    title: number
    subtitle: number
    description: number
    category_id: number
    publish_date: number
    tags: number
    thumbnail_url: number
    type: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type NewsMinAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    category_id?: true
    publish_date?: true
    thumbnail_url?: true
    type?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type NewsMaxAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    category_id?: true
    publish_date?: true
    thumbnail_url?: true
    type?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type NewsCountAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    category_id?: true
    publish_date?: true
    tags?: true
    thumbnail_url?: true
    type?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type NewsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which News to aggregate.
     */
    where?: NewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of News to fetch.
     */
    orderBy?: NewsOrderByWithRelationInput | NewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` News from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` News.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned News
    **/
    _count?: true | NewsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NewsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NewsMaxAggregateInputType
  }

  export type GetNewsAggregateType<T extends NewsAggregateArgs> = {
        [P in keyof T & keyof AggregateNews]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNews[P]>
      : GetScalarType<T[P], AggregateNews[P]>
  }




  export type NewsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsWhereInput
    orderBy?: NewsOrderByWithAggregationInput | NewsOrderByWithAggregationInput[]
    by: NewsScalarFieldEnum[] | NewsScalarFieldEnum
    having?: NewsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NewsCountAggregateInputType | true
    _min?: NewsMinAggregateInputType
    _max?: NewsMaxAggregateInputType
  }

  export type NewsGroupByOutputType = {
    id: string
    title: string
    subtitle: string | null
    description: string
    category_id: string
    publish_date: Date
    tags: JsonValue | null
    thumbnail_url: string | null
    type: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: NewsCountAggregateOutputType | null
    _min: NewsMinAggregateOutputType | null
    _max: NewsMaxAggregateOutputType | null
  }

  type GetNewsGroupByPayload<T extends NewsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NewsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NewsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NewsGroupByOutputType[P]>
            : GetScalarType<T[P], NewsGroupByOutputType[P]>
        }
      >
    >


  export type NewsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    subtitle?: boolean
    description?: boolean
    category_id?: boolean
    publish_date?: boolean
    tags?: boolean
    thumbnail_url?: boolean
    type?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    gallery?: boolean | News$galleryArgs<ExtArgs>
    _count?: boolean | NewsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["news"]>


  export type NewsSelectScalar = {
    id?: boolean
    title?: boolean
    subtitle?: boolean
    description?: boolean
    category_id?: boolean
    publish_date?: boolean
    tags?: boolean
    thumbnail_url?: boolean
    type?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type NewsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    gallery?: boolean | News$galleryArgs<ExtArgs>
    _count?: boolean | NewsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $NewsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "News"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs>
      gallery: Prisma.$NewsGalleryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      subtitle: string | null
      description: string
      category_id: string
      publish_date: Date
      tags: Prisma.JsonValue | null
      thumbnail_url: string | null
      type: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["news"]>
    composites: {}
  }

  type NewsGetPayload<S extends boolean | null | undefined | NewsDefaultArgs> = $Result.GetResult<Prisma.$NewsPayload, S>

  type NewsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NewsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NewsCountAggregateInputType | true
    }

  export interface NewsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['News'], meta: { name: 'News' } }
    /**
     * Find zero or one News that matches the filter.
     * @param {NewsFindUniqueArgs} args - Arguments to find a News
     * @example
     * // Get one News
     * const news = await prisma.news.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NewsFindUniqueArgs>(args: SelectSubset<T, NewsFindUniqueArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one News that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NewsFindUniqueOrThrowArgs} args - Arguments to find a News
     * @example
     * // Get one News
     * const news = await prisma.news.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NewsFindUniqueOrThrowArgs>(args: SelectSubset<T, NewsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first News that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsFindFirstArgs} args - Arguments to find a News
     * @example
     * // Get one News
     * const news = await prisma.news.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NewsFindFirstArgs>(args?: SelectSubset<T, NewsFindFirstArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first News that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsFindFirstOrThrowArgs} args - Arguments to find a News
     * @example
     * // Get one News
     * const news = await prisma.news.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NewsFindFirstOrThrowArgs>(args?: SelectSubset<T, NewsFindFirstOrThrowArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more News that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all News
     * const news = await prisma.news.findMany()
     * 
     * // Get first 10 News
     * const news = await prisma.news.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const newsWithIdOnly = await prisma.news.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NewsFindManyArgs>(args?: SelectSubset<T, NewsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a News.
     * @param {NewsCreateArgs} args - Arguments to create a News.
     * @example
     * // Create one News
     * const News = await prisma.news.create({
     *   data: {
     *     // ... data to create a News
     *   }
     * })
     * 
     */
    create<T extends NewsCreateArgs>(args: SelectSubset<T, NewsCreateArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many News.
     * @param {NewsCreateManyArgs} args - Arguments to create many News.
     * @example
     * // Create many News
     * const news = await prisma.news.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NewsCreateManyArgs>(args?: SelectSubset<T, NewsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a News.
     * @param {NewsDeleteArgs} args - Arguments to delete one News.
     * @example
     * // Delete one News
     * const News = await prisma.news.delete({
     *   where: {
     *     // ... filter to delete one News
     *   }
     * })
     * 
     */
    delete<T extends NewsDeleteArgs>(args: SelectSubset<T, NewsDeleteArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one News.
     * @param {NewsUpdateArgs} args - Arguments to update one News.
     * @example
     * // Update one News
     * const news = await prisma.news.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NewsUpdateArgs>(args: SelectSubset<T, NewsUpdateArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more News.
     * @param {NewsDeleteManyArgs} args - Arguments to filter News to delete.
     * @example
     * // Delete a few News
     * const { count } = await prisma.news.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NewsDeleteManyArgs>(args?: SelectSubset<T, NewsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more News.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many News
     * const news = await prisma.news.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NewsUpdateManyArgs>(args: SelectSubset<T, NewsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one News.
     * @param {NewsUpsertArgs} args - Arguments to update or create a News.
     * @example
     * // Update or create a News
     * const news = await prisma.news.upsert({
     *   create: {
     *     // ... data to create a News
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the News we want to update
     *   }
     * })
     */
    upsert<T extends NewsUpsertArgs>(args: SelectSubset<T, NewsUpsertArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of News.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsCountArgs} args - Arguments to filter News to count.
     * @example
     * // Count the number of News
     * const count = await prisma.news.count({
     *   where: {
     *     // ... the filter for the News we want to count
     *   }
     * })
    **/
    count<T extends NewsCountArgs>(
      args?: Subset<T, NewsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NewsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a News.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NewsAggregateArgs>(args: Subset<T, NewsAggregateArgs>): Prisma.PrismaPromise<GetNewsAggregateType<T>>

    /**
     * Group by News.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NewsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NewsGroupByArgs['orderBy'] }
        : { orderBy?: NewsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NewsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNewsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the News model
   */
  readonly fields: NewsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for News.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NewsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    gallery<T extends News$galleryArgs<ExtArgs> = {}>(args?: Subset<T, News$galleryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsGalleryPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the News model
   */ 
  interface NewsFieldRefs {
    readonly id: FieldRef<"News", 'String'>
    readonly title: FieldRef<"News", 'String'>
    readonly subtitle: FieldRef<"News", 'String'>
    readonly description: FieldRef<"News", 'String'>
    readonly category_id: FieldRef<"News", 'String'>
    readonly publish_date: FieldRef<"News", 'DateTime'>
    readonly tags: FieldRef<"News", 'Json'>
    readonly thumbnail_url: FieldRef<"News", 'String'>
    readonly type: FieldRef<"News", 'String'>
    readonly created_at: FieldRef<"News", 'DateTime'>
    readonly created_by: FieldRef<"News", 'String'>
    readonly created_ip: FieldRef<"News", 'String'>
    readonly updated_at: FieldRef<"News", 'DateTime'>
    readonly updated_by: FieldRef<"News", 'String'>
    readonly updated_ip: FieldRef<"News", 'String'>
    readonly company_id: FieldRef<"News", 'String'>
  }
    

  // Custom InputTypes
  /**
   * News findUnique
   */
  export type NewsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter, which News to fetch.
     */
    where: NewsWhereUniqueInput
  }

  /**
   * News findUniqueOrThrow
   */
  export type NewsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter, which News to fetch.
     */
    where: NewsWhereUniqueInput
  }

  /**
   * News findFirst
   */
  export type NewsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter, which News to fetch.
     */
    where?: NewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of News to fetch.
     */
    orderBy?: NewsOrderByWithRelationInput | NewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for News.
     */
    cursor?: NewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` News from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` News.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of News.
     */
    distinct?: NewsScalarFieldEnum | NewsScalarFieldEnum[]
  }

  /**
   * News findFirstOrThrow
   */
  export type NewsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter, which News to fetch.
     */
    where?: NewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of News to fetch.
     */
    orderBy?: NewsOrderByWithRelationInput | NewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for News.
     */
    cursor?: NewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` News from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` News.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of News.
     */
    distinct?: NewsScalarFieldEnum | NewsScalarFieldEnum[]
  }

  /**
   * News findMany
   */
  export type NewsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter, which News to fetch.
     */
    where?: NewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of News to fetch.
     */
    orderBy?: NewsOrderByWithRelationInput | NewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing News.
     */
    cursor?: NewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` News from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` News.
     */
    skip?: number
    distinct?: NewsScalarFieldEnum | NewsScalarFieldEnum[]
  }

  /**
   * News create
   */
  export type NewsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * The data needed to create a News.
     */
    data: XOR<NewsCreateInput, NewsUncheckedCreateInput>
  }

  /**
   * News createMany
   */
  export type NewsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many News.
     */
    data: NewsCreateManyInput | NewsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * News update
   */
  export type NewsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * The data needed to update a News.
     */
    data: XOR<NewsUpdateInput, NewsUncheckedUpdateInput>
    /**
     * Choose, which News to update.
     */
    where: NewsWhereUniqueInput
  }

  /**
   * News updateMany
   */
  export type NewsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update News.
     */
    data: XOR<NewsUpdateManyMutationInput, NewsUncheckedUpdateManyInput>
    /**
     * Filter which News to update
     */
    where?: NewsWhereInput
  }

  /**
   * News upsert
   */
  export type NewsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * The filter to search for the News to update in case it exists.
     */
    where: NewsWhereUniqueInput
    /**
     * In case the News found by the `where` argument doesn't exist, create a new News with this data.
     */
    create: XOR<NewsCreateInput, NewsUncheckedCreateInput>
    /**
     * In case the News was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NewsUpdateInput, NewsUncheckedUpdateInput>
  }

  /**
   * News delete
   */
  export type NewsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter which News to delete.
     */
    where: NewsWhereUniqueInput
  }

  /**
   * News deleteMany
   */
  export type NewsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which News to delete
     */
    where?: NewsWhereInput
  }

  /**
   * News.gallery
   */
  export type News$galleryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsGallery
     */
    select?: NewsGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsGalleryInclude<ExtArgs> | null
    where?: NewsGalleryWhereInput
    orderBy?: NewsGalleryOrderByWithRelationInput | NewsGalleryOrderByWithRelationInput[]
    cursor?: NewsGalleryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NewsGalleryScalarFieldEnum | NewsGalleryScalarFieldEnum[]
  }

  /**
   * News without action
   */
  export type NewsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
  }


  /**
   * Model NewsGallery
   */

  export type AggregateNewsGallery = {
    _count: NewsGalleryCountAggregateOutputType | null
    _avg: NewsGalleryAvgAggregateOutputType | null
    _sum: NewsGallerySumAggregateOutputType | null
    _min: NewsGalleryMinAggregateOutputType | null
    _max: NewsGalleryMaxAggregateOutputType | null
  }

  export type NewsGalleryAvgAggregateOutputType = {
    sequence_no: Decimal | null
  }

  export type NewsGallerySumAggregateOutputType = {
    sequence_no: Decimal | null
  }

  export type NewsGalleryMinAggregateOutputType = {
    id: string | null
    news_id: string | null
    image_url: string | null
    title: string | null
    subtitle: string | null
    sequence_no: Decimal | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type NewsGalleryMaxAggregateOutputType = {
    id: string | null
    news_id: string | null
    image_url: string | null
    title: string | null
    subtitle: string | null
    sequence_no: Decimal | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type NewsGalleryCountAggregateOutputType = {
    id: number
    news_id: number
    image_url: number
    title: number
    subtitle: number
    sequence_no: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type NewsGalleryAvgAggregateInputType = {
    sequence_no?: true
  }

  export type NewsGallerySumAggregateInputType = {
    sequence_no?: true
  }

  export type NewsGalleryMinAggregateInputType = {
    id?: true
    news_id?: true
    image_url?: true
    title?: true
    subtitle?: true
    sequence_no?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type NewsGalleryMaxAggregateInputType = {
    id?: true
    news_id?: true
    image_url?: true
    title?: true
    subtitle?: true
    sequence_no?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type NewsGalleryCountAggregateInputType = {
    id?: true
    news_id?: true
    image_url?: true
    title?: true
    subtitle?: true
    sequence_no?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type NewsGalleryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NewsGallery to aggregate.
     */
    where?: NewsGalleryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsGalleries to fetch.
     */
    orderBy?: NewsGalleryOrderByWithRelationInput | NewsGalleryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NewsGalleryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsGalleries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsGalleries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned NewsGalleries
    **/
    _count?: true | NewsGalleryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NewsGalleryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NewsGallerySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NewsGalleryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NewsGalleryMaxAggregateInputType
  }

  export type GetNewsGalleryAggregateType<T extends NewsGalleryAggregateArgs> = {
        [P in keyof T & keyof AggregateNewsGallery]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNewsGallery[P]>
      : GetScalarType<T[P], AggregateNewsGallery[P]>
  }




  export type NewsGalleryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsGalleryWhereInput
    orderBy?: NewsGalleryOrderByWithAggregationInput | NewsGalleryOrderByWithAggregationInput[]
    by: NewsGalleryScalarFieldEnum[] | NewsGalleryScalarFieldEnum
    having?: NewsGalleryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NewsGalleryCountAggregateInputType | true
    _avg?: NewsGalleryAvgAggregateInputType
    _sum?: NewsGallerySumAggregateInputType
    _min?: NewsGalleryMinAggregateInputType
    _max?: NewsGalleryMaxAggregateInputType
  }

  export type NewsGalleryGroupByOutputType = {
    id: string
    news_id: string
    image_url: string
    title: string | null
    subtitle: string | null
    sequence_no: Decimal
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: NewsGalleryCountAggregateOutputType | null
    _avg: NewsGalleryAvgAggregateOutputType | null
    _sum: NewsGallerySumAggregateOutputType | null
    _min: NewsGalleryMinAggregateOutputType | null
    _max: NewsGalleryMaxAggregateOutputType | null
  }

  type GetNewsGalleryGroupByPayload<T extends NewsGalleryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NewsGalleryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NewsGalleryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NewsGalleryGroupByOutputType[P]>
            : GetScalarType<T[P], NewsGalleryGroupByOutputType[P]>
        }
      >
    >


  export type NewsGallerySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    news_id?: boolean
    image_url?: boolean
    title?: boolean
    subtitle?: boolean
    sequence_no?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    news?: boolean | NewsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["newsGallery"]>


  export type NewsGallerySelectScalar = {
    id?: boolean
    news_id?: boolean
    image_url?: boolean
    title?: boolean
    subtitle?: boolean
    sequence_no?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type NewsGalleryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    news?: boolean | NewsDefaultArgs<ExtArgs>
  }

  export type $NewsGalleryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "NewsGallery"
    objects: {
      news: Prisma.$NewsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      news_id: string
      image_url: string
      title: string | null
      subtitle: string | null
      sequence_no: Prisma.Decimal
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["newsGallery"]>
    composites: {}
  }

  type NewsGalleryGetPayload<S extends boolean | null | undefined | NewsGalleryDefaultArgs> = $Result.GetResult<Prisma.$NewsGalleryPayload, S>

  type NewsGalleryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NewsGalleryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NewsGalleryCountAggregateInputType | true
    }

  export interface NewsGalleryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['NewsGallery'], meta: { name: 'NewsGallery' } }
    /**
     * Find zero or one NewsGallery that matches the filter.
     * @param {NewsGalleryFindUniqueArgs} args - Arguments to find a NewsGallery
     * @example
     * // Get one NewsGallery
     * const newsGallery = await prisma.newsGallery.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NewsGalleryFindUniqueArgs>(args: SelectSubset<T, NewsGalleryFindUniqueArgs<ExtArgs>>): Prisma__NewsGalleryClient<$Result.GetResult<Prisma.$NewsGalleryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one NewsGallery that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NewsGalleryFindUniqueOrThrowArgs} args - Arguments to find a NewsGallery
     * @example
     * // Get one NewsGallery
     * const newsGallery = await prisma.newsGallery.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NewsGalleryFindUniqueOrThrowArgs>(args: SelectSubset<T, NewsGalleryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NewsGalleryClient<$Result.GetResult<Prisma.$NewsGalleryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first NewsGallery that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsGalleryFindFirstArgs} args - Arguments to find a NewsGallery
     * @example
     * // Get one NewsGallery
     * const newsGallery = await prisma.newsGallery.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NewsGalleryFindFirstArgs>(args?: SelectSubset<T, NewsGalleryFindFirstArgs<ExtArgs>>): Prisma__NewsGalleryClient<$Result.GetResult<Prisma.$NewsGalleryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first NewsGallery that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsGalleryFindFirstOrThrowArgs} args - Arguments to find a NewsGallery
     * @example
     * // Get one NewsGallery
     * const newsGallery = await prisma.newsGallery.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NewsGalleryFindFirstOrThrowArgs>(args?: SelectSubset<T, NewsGalleryFindFirstOrThrowArgs<ExtArgs>>): Prisma__NewsGalleryClient<$Result.GetResult<Prisma.$NewsGalleryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more NewsGalleries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsGalleryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all NewsGalleries
     * const newsGalleries = await prisma.newsGallery.findMany()
     * 
     * // Get first 10 NewsGalleries
     * const newsGalleries = await prisma.newsGallery.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const newsGalleryWithIdOnly = await prisma.newsGallery.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NewsGalleryFindManyArgs>(args?: SelectSubset<T, NewsGalleryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsGalleryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a NewsGallery.
     * @param {NewsGalleryCreateArgs} args - Arguments to create a NewsGallery.
     * @example
     * // Create one NewsGallery
     * const NewsGallery = await prisma.newsGallery.create({
     *   data: {
     *     // ... data to create a NewsGallery
     *   }
     * })
     * 
     */
    create<T extends NewsGalleryCreateArgs>(args: SelectSubset<T, NewsGalleryCreateArgs<ExtArgs>>): Prisma__NewsGalleryClient<$Result.GetResult<Prisma.$NewsGalleryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many NewsGalleries.
     * @param {NewsGalleryCreateManyArgs} args - Arguments to create many NewsGalleries.
     * @example
     * // Create many NewsGalleries
     * const newsGallery = await prisma.newsGallery.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NewsGalleryCreateManyArgs>(args?: SelectSubset<T, NewsGalleryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a NewsGallery.
     * @param {NewsGalleryDeleteArgs} args - Arguments to delete one NewsGallery.
     * @example
     * // Delete one NewsGallery
     * const NewsGallery = await prisma.newsGallery.delete({
     *   where: {
     *     // ... filter to delete one NewsGallery
     *   }
     * })
     * 
     */
    delete<T extends NewsGalleryDeleteArgs>(args: SelectSubset<T, NewsGalleryDeleteArgs<ExtArgs>>): Prisma__NewsGalleryClient<$Result.GetResult<Prisma.$NewsGalleryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one NewsGallery.
     * @param {NewsGalleryUpdateArgs} args - Arguments to update one NewsGallery.
     * @example
     * // Update one NewsGallery
     * const newsGallery = await prisma.newsGallery.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NewsGalleryUpdateArgs>(args: SelectSubset<T, NewsGalleryUpdateArgs<ExtArgs>>): Prisma__NewsGalleryClient<$Result.GetResult<Prisma.$NewsGalleryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more NewsGalleries.
     * @param {NewsGalleryDeleteManyArgs} args - Arguments to filter NewsGalleries to delete.
     * @example
     * // Delete a few NewsGalleries
     * const { count } = await prisma.newsGallery.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NewsGalleryDeleteManyArgs>(args?: SelectSubset<T, NewsGalleryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NewsGalleries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsGalleryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many NewsGalleries
     * const newsGallery = await prisma.newsGallery.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NewsGalleryUpdateManyArgs>(args: SelectSubset<T, NewsGalleryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one NewsGallery.
     * @param {NewsGalleryUpsertArgs} args - Arguments to update or create a NewsGallery.
     * @example
     * // Update or create a NewsGallery
     * const newsGallery = await prisma.newsGallery.upsert({
     *   create: {
     *     // ... data to create a NewsGallery
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the NewsGallery we want to update
     *   }
     * })
     */
    upsert<T extends NewsGalleryUpsertArgs>(args: SelectSubset<T, NewsGalleryUpsertArgs<ExtArgs>>): Prisma__NewsGalleryClient<$Result.GetResult<Prisma.$NewsGalleryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of NewsGalleries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsGalleryCountArgs} args - Arguments to filter NewsGalleries to count.
     * @example
     * // Count the number of NewsGalleries
     * const count = await prisma.newsGallery.count({
     *   where: {
     *     // ... the filter for the NewsGalleries we want to count
     *   }
     * })
    **/
    count<T extends NewsGalleryCountArgs>(
      args?: Subset<T, NewsGalleryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NewsGalleryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a NewsGallery.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsGalleryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NewsGalleryAggregateArgs>(args: Subset<T, NewsGalleryAggregateArgs>): Prisma.PrismaPromise<GetNewsGalleryAggregateType<T>>

    /**
     * Group by NewsGallery.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsGalleryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NewsGalleryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NewsGalleryGroupByArgs['orderBy'] }
        : { orderBy?: NewsGalleryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NewsGalleryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNewsGalleryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the NewsGallery model
   */
  readonly fields: NewsGalleryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for NewsGallery.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NewsGalleryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    news<T extends NewsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, NewsDefaultArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the NewsGallery model
   */ 
  interface NewsGalleryFieldRefs {
    readonly id: FieldRef<"NewsGallery", 'String'>
    readonly news_id: FieldRef<"NewsGallery", 'String'>
    readonly image_url: FieldRef<"NewsGallery", 'String'>
    readonly title: FieldRef<"NewsGallery", 'String'>
    readonly subtitle: FieldRef<"NewsGallery", 'String'>
    readonly sequence_no: FieldRef<"NewsGallery", 'Decimal'>
    readonly created_at: FieldRef<"NewsGallery", 'DateTime'>
    readonly created_by: FieldRef<"NewsGallery", 'String'>
    readonly created_ip: FieldRef<"NewsGallery", 'String'>
    readonly updated_at: FieldRef<"NewsGallery", 'DateTime'>
    readonly updated_by: FieldRef<"NewsGallery", 'String'>
    readonly updated_ip: FieldRef<"NewsGallery", 'String'>
    readonly company_id: FieldRef<"NewsGallery", 'String'>
  }
    

  // Custom InputTypes
  /**
   * NewsGallery findUnique
   */
  export type NewsGalleryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsGallery
     */
    select?: NewsGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsGalleryInclude<ExtArgs> | null
    /**
     * Filter, which NewsGallery to fetch.
     */
    where: NewsGalleryWhereUniqueInput
  }

  /**
   * NewsGallery findUniqueOrThrow
   */
  export type NewsGalleryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsGallery
     */
    select?: NewsGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsGalleryInclude<ExtArgs> | null
    /**
     * Filter, which NewsGallery to fetch.
     */
    where: NewsGalleryWhereUniqueInput
  }

  /**
   * NewsGallery findFirst
   */
  export type NewsGalleryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsGallery
     */
    select?: NewsGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsGalleryInclude<ExtArgs> | null
    /**
     * Filter, which NewsGallery to fetch.
     */
    where?: NewsGalleryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsGalleries to fetch.
     */
    orderBy?: NewsGalleryOrderByWithRelationInput | NewsGalleryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NewsGalleries.
     */
    cursor?: NewsGalleryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsGalleries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsGalleries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NewsGalleries.
     */
    distinct?: NewsGalleryScalarFieldEnum | NewsGalleryScalarFieldEnum[]
  }

  /**
   * NewsGallery findFirstOrThrow
   */
  export type NewsGalleryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsGallery
     */
    select?: NewsGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsGalleryInclude<ExtArgs> | null
    /**
     * Filter, which NewsGallery to fetch.
     */
    where?: NewsGalleryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsGalleries to fetch.
     */
    orderBy?: NewsGalleryOrderByWithRelationInput | NewsGalleryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NewsGalleries.
     */
    cursor?: NewsGalleryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsGalleries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsGalleries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NewsGalleries.
     */
    distinct?: NewsGalleryScalarFieldEnum | NewsGalleryScalarFieldEnum[]
  }

  /**
   * NewsGallery findMany
   */
  export type NewsGalleryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsGallery
     */
    select?: NewsGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsGalleryInclude<ExtArgs> | null
    /**
     * Filter, which NewsGalleries to fetch.
     */
    where?: NewsGalleryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsGalleries to fetch.
     */
    orderBy?: NewsGalleryOrderByWithRelationInput | NewsGalleryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing NewsGalleries.
     */
    cursor?: NewsGalleryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsGalleries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsGalleries.
     */
    skip?: number
    distinct?: NewsGalleryScalarFieldEnum | NewsGalleryScalarFieldEnum[]
  }

  /**
   * NewsGallery create
   */
  export type NewsGalleryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsGallery
     */
    select?: NewsGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsGalleryInclude<ExtArgs> | null
    /**
     * The data needed to create a NewsGallery.
     */
    data: XOR<NewsGalleryCreateInput, NewsGalleryUncheckedCreateInput>
  }

  /**
   * NewsGallery createMany
   */
  export type NewsGalleryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many NewsGalleries.
     */
    data: NewsGalleryCreateManyInput | NewsGalleryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * NewsGallery update
   */
  export type NewsGalleryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsGallery
     */
    select?: NewsGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsGalleryInclude<ExtArgs> | null
    /**
     * The data needed to update a NewsGallery.
     */
    data: XOR<NewsGalleryUpdateInput, NewsGalleryUncheckedUpdateInput>
    /**
     * Choose, which NewsGallery to update.
     */
    where: NewsGalleryWhereUniqueInput
  }

  /**
   * NewsGallery updateMany
   */
  export type NewsGalleryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update NewsGalleries.
     */
    data: XOR<NewsGalleryUpdateManyMutationInput, NewsGalleryUncheckedUpdateManyInput>
    /**
     * Filter which NewsGalleries to update
     */
    where?: NewsGalleryWhereInput
  }

  /**
   * NewsGallery upsert
   */
  export type NewsGalleryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsGallery
     */
    select?: NewsGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsGalleryInclude<ExtArgs> | null
    /**
     * The filter to search for the NewsGallery to update in case it exists.
     */
    where: NewsGalleryWhereUniqueInput
    /**
     * In case the NewsGallery found by the `where` argument doesn't exist, create a new NewsGallery with this data.
     */
    create: XOR<NewsGalleryCreateInput, NewsGalleryUncheckedCreateInput>
    /**
     * In case the NewsGallery was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NewsGalleryUpdateInput, NewsGalleryUncheckedUpdateInput>
  }

  /**
   * NewsGallery delete
   */
  export type NewsGalleryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsGallery
     */
    select?: NewsGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsGalleryInclude<ExtArgs> | null
    /**
     * Filter which NewsGallery to delete.
     */
    where: NewsGalleryWhereUniqueInput
  }

  /**
   * NewsGallery deleteMany
   */
  export type NewsGalleryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NewsGalleries to delete
     */
    where?: NewsGalleryWhereInput
  }

  /**
   * NewsGallery without action
   */
  export type NewsGalleryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsGallery
     */
    select?: NewsGallerySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsGalleryInclude<ExtArgs> | null
  }


  /**
   * Model CompanyAdditionalInfo
   */

  export type AggregateCompanyAdditionalInfo = {
    _count: CompanyAdditionalInfoCountAggregateOutputType | null
    _min: CompanyAdditionalInfoMinAggregateOutputType | null
    _max: CompanyAdditionalInfoMaxAggregateOutputType | null
  }

  export type CompanyAdditionalInfoMinAggregateOutputType = {
    id: string | null
    company_id: string | null
    short_description: string | null
    facebook_link: string | null
    twitter_link: string | null
    instagram_link: string | null
    linkedin_link: string | null
    youtube_link: string | null
    whatsapp_number: string | null
    google_map_link: string | null
    vision: string | null
    mission: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type CompanyAdditionalInfoMaxAggregateOutputType = {
    id: string | null
    company_id: string | null
    short_description: string | null
    facebook_link: string | null
    twitter_link: string | null
    instagram_link: string | null
    linkedin_link: string | null
    youtube_link: string | null
    whatsapp_number: string | null
    google_map_link: string | null
    vision: string | null
    mission: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type CompanyAdditionalInfoCountAggregateOutputType = {
    id: number
    company_id: number
    short_description: number
    facebook_link: number
    twitter_link: number
    instagram_link: number
    linkedin_link: number
    youtube_link: number
    whatsapp_number: number
    google_map_link: number
    vision: number
    mission: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    _all: number
  }


  export type CompanyAdditionalInfoMinAggregateInputType = {
    id?: true
    company_id?: true
    short_description?: true
    facebook_link?: true
    twitter_link?: true
    instagram_link?: true
    linkedin_link?: true
    youtube_link?: true
    whatsapp_number?: true
    google_map_link?: true
    vision?: true
    mission?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type CompanyAdditionalInfoMaxAggregateInputType = {
    id?: true
    company_id?: true
    short_description?: true
    facebook_link?: true
    twitter_link?: true
    instagram_link?: true
    linkedin_link?: true
    youtube_link?: true
    whatsapp_number?: true
    google_map_link?: true
    vision?: true
    mission?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type CompanyAdditionalInfoCountAggregateInputType = {
    id?: true
    company_id?: true
    short_description?: true
    facebook_link?: true
    twitter_link?: true
    instagram_link?: true
    linkedin_link?: true
    youtube_link?: true
    whatsapp_number?: true
    google_map_link?: true
    vision?: true
    mission?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    _all?: true
  }

  export type CompanyAdditionalInfoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompanyAdditionalInfo to aggregate.
     */
    where?: CompanyAdditionalInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyAdditionalInfos to fetch.
     */
    orderBy?: CompanyAdditionalInfoOrderByWithRelationInput | CompanyAdditionalInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyAdditionalInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyAdditionalInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyAdditionalInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CompanyAdditionalInfos
    **/
    _count?: true | CompanyAdditionalInfoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyAdditionalInfoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyAdditionalInfoMaxAggregateInputType
  }

  export type GetCompanyAdditionalInfoAggregateType<T extends CompanyAdditionalInfoAggregateArgs> = {
        [P in keyof T & keyof AggregateCompanyAdditionalInfo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompanyAdditionalInfo[P]>
      : GetScalarType<T[P], AggregateCompanyAdditionalInfo[P]>
  }




  export type CompanyAdditionalInfoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyAdditionalInfoWhereInput
    orderBy?: CompanyAdditionalInfoOrderByWithAggregationInput | CompanyAdditionalInfoOrderByWithAggregationInput[]
    by: CompanyAdditionalInfoScalarFieldEnum[] | CompanyAdditionalInfoScalarFieldEnum
    having?: CompanyAdditionalInfoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyAdditionalInfoCountAggregateInputType | true
    _min?: CompanyAdditionalInfoMinAggregateInputType
    _max?: CompanyAdditionalInfoMaxAggregateInputType
  }

  export type CompanyAdditionalInfoGroupByOutputType = {
    id: string
    company_id: string
    short_description: string | null
    facebook_link: string | null
    twitter_link: string | null
    instagram_link: string | null
    linkedin_link: string | null
    youtube_link: string | null
    whatsapp_number: string | null
    google_map_link: string | null
    vision: string | null
    mission: string | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    _count: CompanyAdditionalInfoCountAggregateOutputType | null
    _min: CompanyAdditionalInfoMinAggregateOutputType | null
    _max: CompanyAdditionalInfoMaxAggregateOutputType | null
  }

  type GetCompanyAdditionalInfoGroupByPayload<T extends CompanyAdditionalInfoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyAdditionalInfoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyAdditionalInfoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyAdditionalInfoGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyAdditionalInfoGroupByOutputType[P]>
        }
      >
    >


  export type CompanyAdditionalInfoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    company_id?: boolean
    short_description?: boolean
    facebook_link?: boolean
    twitter_link?: boolean
    instagram_link?: boolean
    linkedin_link?: boolean
    youtube_link?: boolean
    whatsapp_number?: boolean
    google_map_link?: boolean
    vision?: boolean
    mission?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["companyAdditionalInfo"]>


  export type CompanyAdditionalInfoSelectScalar = {
    id?: boolean
    company_id?: boolean
    short_description?: boolean
    facebook_link?: boolean
    twitter_link?: boolean
    instagram_link?: boolean
    linkedin_link?: boolean
    youtube_link?: boolean
    whatsapp_number?: boolean
    google_map_link?: boolean
    vision?: boolean
    mission?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
  }

  export type CompanyAdditionalInfoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $CompanyAdditionalInfoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CompanyAdditionalInfo"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      company_id: string
      short_description: string | null
      facebook_link: string | null
      twitter_link: string | null
      instagram_link: string | null
      linkedin_link: string | null
      youtube_link: string | null
      whatsapp_number: string | null
      google_map_link: string | null
      vision: string | null
      mission: string | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
    }, ExtArgs["result"]["companyAdditionalInfo"]>
    composites: {}
  }

  type CompanyAdditionalInfoGetPayload<S extends boolean | null | undefined | CompanyAdditionalInfoDefaultArgs> = $Result.GetResult<Prisma.$CompanyAdditionalInfoPayload, S>

  type CompanyAdditionalInfoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CompanyAdditionalInfoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CompanyAdditionalInfoCountAggregateInputType | true
    }

  export interface CompanyAdditionalInfoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CompanyAdditionalInfo'], meta: { name: 'CompanyAdditionalInfo' } }
    /**
     * Find zero or one CompanyAdditionalInfo that matches the filter.
     * @param {CompanyAdditionalInfoFindUniqueArgs} args - Arguments to find a CompanyAdditionalInfo
     * @example
     * // Get one CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyAdditionalInfoFindUniqueArgs>(args: SelectSubset<T, CompanyAdditionalInfoFindUniqueArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CompanyAdditionalInfo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CompanyAdditionalInfoFindUniqueOrThrowArgs} args - Arguments to find a CompanyAdditionalInfo
     * @example
     * // Get one CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyAdditionalInfoFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyAdditionalInfoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CompanyAdditionalInfo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoFindFirstArgs} args - Arguments to find a CompanyAdditionalInfo
     * @example
     * // Get one CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyAdditionalInfoFindFirstArgs>(args?: SelectSubset<T, CompanyAdditionalInfoFindFirstArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CompanyAdditionalInfo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoFindFirstOrThrowArgs} args - Arguments to find a CompanyAdditionalInfo
     * @example
     * // Get one CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyAdditionalInfoFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyAdditionalInfoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CompanyAdditionalInfos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CompanyAdditionalInfos
     * const companyAdditionalInfos = await prisma.companyAdditionalInfo.findMany()
     * 
     * // Get first 10 CompanyAdditionalInfos
     * const companyAdditionalInfos = await prisma.companyAdditionalInfo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyAdditionalInfoWithIdOnly = await prisma.companyAdditionalInfo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompanyAdditionalInfoFindManyArgs>(args?: SelectSubset<T, CompanyAdditionalInfoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CompanyAdditionalInfo.
     * @param {CompanyAdditionalInfoCreateArgs} args - Arguments to create a CompanyAdditionalInfo.
     * @example
     * // Create one CompanyAdditionalInfo
     * const CompanyAdditionalInfo = await prisma.companyAdditionalInfo.create({
     *   data: {
     *     // ... data to create a CompanyAdditionalInfo
     *   }
     * })
     * 
     */
    create<T extends CompanyAdditionalInfoCreateArgs>(args: SelectSubset<T, CompanyAdditionalInfoCreateArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CompanyAdditionalInfos.
     * @param {CompanyAdditionalInfoCreateManyArgs} args - Arguments to create many CompanyAdditionalInfos.
     * @example
     * // Create many CompanyAdditionalInfos
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyAdditionalInfoCreateManyArgs>(args?: SelectSubset<T, CompanyAdditionalInfoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CompanyAdditionalInfo.
     * @param {CompanyAdditionalInfoDeleteArgs} args - Arguments to delete one CompanyAdditionalInfo.
     * @example
     * // Delete one CompanyAdditionalInfo
     * const CompanyAdditionalInfo = await prisma.companyAdditionalInfo.delete({
     *   where: {
     *     // ... filter to delete one CompanyAdditionalInfo
     *   }
     * })
     * 
     */
    delete<T extends CompanyAdditionalInfoDeleteArgs>(args: SelectSubset<T, CompanyAdditionalInfoDeleteArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CompanyAdditionalInfo.
     * @param {CompanyAdditionalInfoUpdateArgs} args - Arguments to update one CompanyAdditionalInfo.
     * @example
     * // Update one CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyAdditionalInfoUpdateArgs>(args: SelectSubset<T, CompanyAdditionalInfoUpdateArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CompanyAdditionalInfos.
     * @param {CompanyAdditionalInfoDeleteManyArgs} args - Arguments to filter CompanyAdditionalInfos to delete.
     * @example
     * // Delete a few CompanyAdditionalInfos
     * const { count } = await prisma.companyAdditionalInfo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyAdditionalInfoDeleteManyArgs>(args?: SelectSubset<T, CompanyAdditionalInfoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CompanyAdditionalInfos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CompanyAdditionalInfos
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyAdditionalInfoUpdateManyArgs>(args: SelectSubset<T, CompanyAdditionalInfoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CompanyAdditionalInfo.
     * @param {CompanyAdditionalInfoUpsertArgs} args - Arguments to update or create a CompanyAdditionalInfo.
     * @example
     * // Update or create a CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.upsert({
     *   create: {
     *     // ... data to create a CompanyAdditionalInfo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CompanyAdditionalInfo we want to update
     *   }
     * })
     */
    upsert<T extends CompanyAdditionalInfoUpsertArgs>(args: SelectSubset<T, CompanyAdditionalInfoUpsertArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CompanyAdditionalInfos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoCountArgs} args - Arguments to filter CompanyAdditionalInfos to count.
     * @example
     * // Count the number of CompanyAdditionalInfos
     * const count = await prisma.companyAdditionalInfo.count({
     *   where: {
     *     // ... the filter for the CompanyAdditionalInfos we want to count
     *   }
     * })
    **/
    count<T extends CompanyAdditionalInfoCountArgs>(
      args?: Subset<T, CompanyAdditionalInfoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyAdditionalInfoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CompanyAdditionalInfo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAdditionalInfoAggregateArgs>(args: Subset<T, CompanyAdditionalInfoAggregateArgs>): Prisma.PrismaPromise<GetCompanyAdditionalInfoAggregateType<T>>

    /**
     * Group by CompanyAdditionalInfo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyAdditionalInfoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyAdditionalInfoGroupByArgs['orderBy'] }
        : { orderBy?: CompanyAdditionalInfoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyAdditionalInfoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyAdditionalInfoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CompanyAdditionalInfo model
   */
  readonly fields: CompanyAdditionalInfoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CompanyAdditionalInfo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyAdditionalInfoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CompanyAdditionalInfo model
   */ 
  interface CompanyAdditionalInfoFieldRefs {
    readonly id: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly company_id: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly short_description: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly facebook_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly twitter_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly instagram_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly linkedin_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly youtube_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly whatsapp_number: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly google_map_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly vision: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly mission: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly created_at: FieldRef<"CompanyAdditionalInfo", 'DateTime'>
    readonly created_by: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly created_ip: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly updated_at: FieldRef<"CompanyAdditionalInfo", 'DateTime'>
    readonly updated_by: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly updated_ip: FieldRef<"CompanyAdditionalInfo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CompanyAdditionalInfo findUnique
   */
  export type CompanyAdditionalInfoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter, which CompanyAdditionalInfo to fetch.
     */
    where: CompanyAdditionalInfoWhereUniqueInput
  }

  /**
   * CompanyAdditionalInfo findUniqueOrThrow
   */
  export type CompanyAdditionalInfoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter, which CompanyAdditionalInfo to fetch.
     */
    where: CompanyAdditionalInfoWhereUniqueInput
  }

  /**
   * CompanyAdditionalInfo findFirst
   */
  export type CompanyAdditionalInfoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter, which CompanyAdditionalInfo to fetch.
     */
    where?: CompanyAdditionalInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyAdditionalInfos to fetch.
     */
    orderBy?: CompanyAdditionalInfoOrderByWithRelationInput | CompanyAdditionalInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompanyAdditionalInfos.
     */
    cursor?: CompanyAdditionalInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyAdditionalInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyAdditionalInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompanyAdditionalInfos.
     */
    distinct?: CompanyAdditionalInfoScalarFieldEnum | CompanyAdditionalInfoScalarFieldEnum[]
  }

  /**
   * CompanyAdditionalInfo findFirstOrThrow
   */
  export type CompanyAdditionalInfoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter, which CompanyAdditionalInfo to fetch.
     */
    where?: CompanyAdditionalInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyAdditionalInfos to fetch.
     */
    orderBy?: CompanyAdditionalInfoOrderByWithRelationInput | CompanyAdditionalInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompanyAdditionalInfos.
     */
    cursor?: CompanyAdditionalInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyAdditionalInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyAdditionalInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompanyAdditionalInfos.
     */
    distinct?: CompanyAdditionalInfoScalarFieldEnum | CompanyAdditionalInfoScalarFieldEnum[]
  }

  /**
   * CompanyAdditionalInfo findMany
   */
  export type CompanyAdditionalInfoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter, which CompanyAdditionalInfos to fetch.
     */
    where?: CompanyAdditionalInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyAdditionalInfos to fetch.
     */
    orderBy?: CompanyAdditionalInfoOrderByWithRelationInput | CompanyAdditionalInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CompanyAdditionalInfos.
     */
    cursor?: CompanyAdditionalInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyAdditionalInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyAdditionalInfos.
     */
    skip?: number
    distinct?: CompanyAdditionalInfoScalarFieldEnum | CompanyAdditionalInfoScalarFieldEnum[]
  }

  /**
   * CompanyAdditionalInfo create
   */
  export type CompanyAdditionalInfoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * The data needed to create a CompanyAdditionalInfo.
     */
    data: XOR<CompanyAdditionalInfoCreateInput, CompanyAdditionalInfoUncheckedCreateInput>
  }

  /**
   * CompanyAdditionalInfo createMany
   */
  export type CompanyAdditionalInfoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CompanyAdditionalInfos.
     */
    data: CompanyAdditionalInfoCreateManyInput | CompanyAdditionalInfoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CompanyAdditionalInfo update
   */
  export type CompanyAdditionalInfoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * The data needed to update a CompanyAdditionalInfo.
     */
    data: XOR<CompanyAdditionalInfoUpdateInput, CompanyAdditionalInfoUncheckedUpdateInput>
    /**
     * Choose, which CompanyAdditionalInfo to update.
     */
    where: CompanyAdditionalInfoWhereUniqueInput
  }

  /**
   * CompanyAdditionalInfo updateMany
   */
  export type CompanyAdditionalInfoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CompanyAdditionalInfos.
     */
    data: XOR<CompanyAdditionalInfoUpdateManyMutationInput, CompanyAdditionalInfoUncheckedUpdateManyInput>
    /**
     * Filter which CompanyAdditionalInfos to update
     */
    where?: CompanyAdditionalInfoWhereInput
  }

  /**
   * CompanyAdditionalInfo upsert
   */
  export type CompanyAdditionalInfoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * The filter to search for the CompanyAdditionalInfo to update in case it exists.
     */
    where: CompanyAdditionalInfoWhereUniqueInput
    /**
     * In case the CompanyAdditionalInfo found by the `where` argument doesn't exist, create a new CompanyAdditionalInfo with this data.
     */
    create: XOR<CompanyAdditionalInfoCreateInput, CompanyAdditionalInfoUncheckedCreateInput>
    /**
     * In case the CompanyAdditionalInfo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyAdditionalInfoUpdateInput, CompanyAdditionalInfoUncheckedUpdateInput>
  }

  /**
   * CompanyAdditionalInfo delete
   */
  export type CompanyAdditionalInfoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter which CompanyAdditionalInfo to delete.
     */
    where: CompanyAdditionalInfoWhereUniqueInput
  }

  /**
   * CompanyAdditionalInfo deleteMany
   */
  export type CompanyAdditionalInfoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompanyAdditionalInfos to delete
     */
    where?: CompanyAdditionalInfoWhereInput
  }

  /**
   * CompanyAdditionalInfo without action
   */
  export type CompanyAdditionalInfoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ApplicationLogScalarFieldEnum: {
    id: 'id',
    level: 'level',
    message: 'message',
    meta: 'meta',
    timestamp: 'timestamp'
  };

  export type ApplicationLogScalarFieldEnum = (typeof ApplicationLogScalarFieldEnum)[keyof typeof ApplicationLogScalarFieldEnum]


  export const AuditLogScalarFieldEnum: {
    id: 'id',
    table_name: 'table_name',
    record_id: 'record_id',
    action: 'action',
    previous_data: 'previous_data',
    new_data: 'new_data',
    changed_by: 'changed_by',
    timestamp: 'timestamp'
  };

  export type AuditLogScalarFieldEnum = (typeof AuditLogScalarFieldEnum)[keyof typeof AuditLogScalarFieldEnum]


  export const CompanyScalarFieldEnum: {
    id: 'id',
    company_name: 'company_name',
    company_short_name: 'company_short_name',
    company_code: 'company_code',
    registration_number: 'registration_number',
    tax_id: 'tax_id',
    address: 'address',
    city: 'city',
    state: 'state',
    country: 'country',
    postal_code: 'postal_code',
    phone: 'phone',
    email: 'email',
    website: 'website',
    industry: 'industry',
    number_of_employees: 'number_of_employees',
    annual_revenue: 'annual_revenue',
    description: 'description',
    is_active: 'is_active'
  };

  export type CompanyScalarFieldEnum = (typeof CompanyScalarFieldEnum)[keyof typeof CompanyScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    fullname: 'fullname',
    username: 'username',
    email: 'email',
    password: 'password',
    address: 'address',
    phone: 'phone',
    is_active: 'is_active',
    is_admin: 'is_admin',
    is_password_reset: 'is_password_reset',
    user_type: 'user_type',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RefreshTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    userId: 'userId',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    isRevoked: 'isRevoked'
  };

  export type RefreshTokenScalarFieldEnum = (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum]


  export const SecurityRuleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type SecurityRuleScalarFieldEnum = (typeof SecurityRuleScalarFieldEnum)[keyof typeof SecurityRuleScalarFieldEnum]


  export const SecurityRuleWiseMenuPermissionScalarFieldEnum: {
    id: 'id',
    menu_id: 'menu_id',
    can_view: 'can_view',
    can_create: 'can_create',
    can_update: 'can_update',
    can_delete: 'can_delete',
    can_report: 'can_report',
    rule_id: 'rule_id',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type SecurityRuleWiseMenuPermissionScalarFieldEnum = (typeof SecurityRuleWiseMenuPermissionScalarFieldEnum)[keyof typeof SecurityRuleWiseMenuPermissionScalarFieldEnum]


  export const SecurityGroupScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type SecurityGroupScalarFieldEnum = (typeof SecurityGroupScalarFieldEnum)[keyof typeof SecurityGroupScalarFieldEnum]


  export const SecurityGroupRuleScalarFieldEnum: {
    id: 'id',
    group_id: 'group_id',
    rule_id: 'rule_id',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type SecurityGroupRuleScalarFieldEnum = (typeof SecurityGroupRuleScalarFieldEnum)[keyof typeof SecurityGroupRuleScalarFieldEnum]


  export const UserGroupScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    group_id: 'group_id',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type UserGroupScalarFieldEnum = (typeof UserGroupScalarFieldEnum)[keyof typeof UserGroupScalarFieldEnum]


  export const MenuScalarFieldEnum: {
    id: 'id',
    title: 'title',
    url: 'url',
    icon: 'icon',
    icon_library: 'icon_library',
    parent_id: 'parent_id',
    sequence_no: 'sequence_no',
    is_active: 'is_active',
    can_view: 'can_view',
    can_create: 'can_create',
    can_update: 'can_update',
    can_delete: 'can_delete',
    can_report: 'can_report'
  };

  export type MenuScalarFieldEnum = (typeof MenuScalarFieldEnum)[keyof typeof MenuScalarFieldEnum]


  export const ProjectScalarFieldEnum: {
    id: 'id',
    title: 'title',
    subtitle: 'subtitle',
    description: 'description',
    start_date: 'start_date',
    end_date: 'end_date',
    thumbnail_url: 'thumbnail_url',
    city: 'city',
    country: 'country',
    address: 'address',
    client_name: 'client_name',
    category_id: 'category_id',
    area: 'area',
    is_featured: 'is_featured',
    tags: 'tags',
    budget: 'budget',
    status: 'status',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type ProjectScalarFieldEnum = (typeof ProjectScalarFieldEnum)[keyof typeof ProjectScalarFieldEnum]


  export const ProjectGalleryScalarFieldEnum: {
    id: 'id',
    project_id: 'project_id',
    image_url: 'image_url',
    title: 'title',
    subtitle: 'subtitle',
    sequence_no: 'sequence_no',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type ProjectGalleryScalarFieldEnum = (typeof ProjectGalleryScalarFieldEnum)[keyof typeof ProjectGalleryScalarFieldEnum]


  export const ProjectKeyFeatureScalarFieldEnum: {
    id: 'id',
    project_id: 'project_id',
    feature: 'feature',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type ProjectKeyFeatureScalarFieldEnum = (typeof ProjectKeyFeatureScalarFieldEnum)[keyof typeof ProjectKeyFeatureScalarFieldEnum]


  export const ProjectServiceScalarFieldEnum: {
    id: 'id',
    project_id: 'project_id',
    service: 'service',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type ProjectServiceScalarFieldEnum = (typeof ProjectServiceScalarFieldEnum)[keyof typeof ProjectServiceScalarFieldEnum]


  export const ContactScalarFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    last_name: 'last_name',
    email: 'email',
    phone: 'phone',
    message: 'message',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type ContactScalarFieldEnum = (typeof ContactScalarFieldEnum)[keyof typeof ContactScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const CareerScalarFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    last_name: 'last_name',
    email: 'email',
    document_url: 'document_url',
    applied_position: 'applied_position',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type CareerScalarFieldEnum = (typeof CareerScalarFieldEnum)[keyof typeof CareerScalarFieldEnum]


  export const NewsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    subtitle: 'subtitle',
    description: 'description',
    category_id: 'category_id',
    publish_date: 'publish_date',
    tags: 'tags',
    thumbnail_url: 'thumbnail_url',
    type: 'type',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type NewsScalarFieldEnum = (typeof NewsScalarFieldEnum)[keyof typeof NewsScalarFieldEnum]


  export const NewsGalleryScalarFieldEnum: {
    id: 'id',
    news_id: 'news_id',
    image_url: 'image_url',
    title: 'title',
    subtitle: 'subtitle',
    sequence_no: 'sequence_no',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type NewsGalleryScalarFieldEnum = (typeof NewsGalleryScalarFieldEnum)[keyof typeof NewsGalleryScalarFieldEnum]


  export const CompanyAdditionalInfoScalarFieldEnum: {
    id: 'id',
    company_id: 'company_id',
    short_description: 'short_description',
    facebook_link: 'facebook_link',
    twitter_link: 'twitter_link',
    instagram_link: 'instagram_link',
    linkedin_link: 'linkedin_link',
    youtube_link: 'youtube_link',
    whatsapp_number: 'whatsapp_number',
    google_map_link: 'google_map_link',
    vision: 'vision',
    mission: 'mission',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip'
  };

  export type CompanyAdditionalInfoScalarFieldEnum = (typeof CompanyAdditionalInfoScalarFieldEnum)[keyof typeof CompanyAdditionalInfoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type ApplicationLogWhereInput = {
    AND?: ApplicationLogWhereInput | ApplicationLogWhereInput[]
    OR?: ApplicationLogWhereInput[]
    NOT?: ApplicationLogWhereInput | ApplicationLogWhereInput[]
    id?: StringFilter<"ApplicationLog"> | string
    level?: StringFilter<"ApplicationLog"> | string
    message?: StringFilter<"ApplicationLog"> | string
    meta?: JsonFilter<"ApplicationLog">
    timestamp?: DateTimeFilter<"ApplicationLog"> | Date | string
  }

  export type ApplicationLogOrderByWithRelationInput = {
    id?: SortOrder
    level?: SortOrder
    message?: SortOrder
    meta?: SortOrder
    timestamp?: SortOrder
  }

  export type ApplicationLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ApplicationLogWhereInput | ApplicationLogWhereInput[]
    OR?: ApplicationLogWhereInput[]
    NOT?: ApplicationLogWhereInput | ApplicationLogWhereInput[]
    level?: StringFilter<"ApplicationLog"> | string
    message?: StringFilter<"ApplicationLog"> | string
    meta?: JsonFilter<"ApplicationLog">
    timestamp?: DateTimeFilter<"ApplicationLog"> | Date | string
  }, "id">

  export type ApplicationLogOrderByWithAggregationInput = {
    id?: SortOrder
    level?: SortOrder
    message?: SortOrder
    meta?: SortOrder
    timestamp?: SortOrder
    _count?: ApplicationLogCountOrderByAggregateInput
    _max?: ApplicationLogMaxOrderByAggregateInput
    _min?: ApplicationLogMinOrderByAggregateInput
  }

  export type ApplicationLogScalarWhereWithAggregatesInput = {
    AND?: ApplicationLogScalarWhereWithAggregatesInput | ApplicationLogScalarWhereWithAggregatesInput[]
    OR?: ApplicationLogScalarWhereWithAggregatesInput[]
    NOT?: ApplicationLogScalarWhereWithAggregatesInput | ApplicationLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ApplicationLog"> | string
    level?: StringWithAggregatesFilter<"ApplicationLog"> | string
    message?: StringWithAggregatesFilter<"ApplicationLog"> | string
    meta?: JsonWithAggregatesFilter<"ApplicationLog">
    timestamp?: DateTimeWithAggregatesFilter<"ApplicationLog"> | Date | string
  }

  export type AuditLogWhereInput = {
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    id?: StringFilter<"AuditLog"> | string
    table_name?: StringFilter<"AuditLog"> | string
    record_id?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    previous_data?: JsonFilter<"AuditLog">
    new_data?: JsonFilter<"AuditLog">
    changed_by?: StringFilter<"AuditLog"> | string
    timestamp?: DateTimeFilter<"AuditLog"> | Date | string
  }

  export type AuditLogOrderByWithRelationInput = {
    id?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    action?: SortOrder
    previous_data?: SortOrder
    new_data?: SortOrder
    changed_by?: SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    table_name?: StringFilter<"AuditLog"> | string
    record_id?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    previous_data?: JsonFilter<"AuditLog">
    new_data?: JsonFilter<"AuditLog">
    changed_by?: StringFilter<"AuditLog"> | string
    timestamp?: DateTimeFilter<"AuditLog"> | Date | string
  }, "id">

  export type AuditLogOrderByWithAggregationInput = {
    id?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    action?: SortOrder
    previous_data?: SortOrder
    new_data?: SortOrder
    changed_by?: SortOrder
    timestamp?: SortOrder
    _count?: AuditLogCountOrderByAggregateInput
    _max?: AuditLogMaxOrderByAggregateInput
    _min?: AuditLogMinOrderByAggregateInput
  }

  export type AuditLogScalarWhereWithAggregatesInput = {
    AND?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    OR?: AuditLogScalarWhereWithAggregatesInput[]
    NOT?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuditLog"> | string
    table_name?: StringWithAggregatesFilter<"AuditLog"> | string
    record_id?: StringWithAggregatesFilter<"AuditLog"> | string
    action?: StringWithAggregatesFilter<"AuditLog"> | string
    previous_data?: JsonWithAggregatesFilter<"AuditLog">
    new_data?: JsonWithAggregatesFilter<"AuditLog">
    changed_by?: StringWithAggregatesFilter<"AuditLog"> | string
    timestamp?: DateTimeWithAggregatesFilter<"AuditLog"> | Date | string
  }

  export type CompanyWhereInput = {
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    id?: StringFilter<"Company"> | string
    company_name?: StringFilter<"Company"> | string
    company_short_name?: StringNullableFilter<"Company"> | string | null
    company_code?: StringNullableFilter<"Company"> | string | null
    registration_number?: StringFilter<"Company"> | string
    tax_id?: StringFilter<"Company"> | string
    address?: StringNullableFilter<"Company"> | string | null
    city?: StringNullableFilter<"Company"> | string | null
    state?: StringNullableFilter<"Company"> | string | null
    country?: StringNullableFilter<"Company"> | string | null
    postal_code?: StringNullableFilter<"Company"> | string | null
    phone?: StringFilter<"Company"> | string
    email?: StringFilter<"Company"> | string
    website?: StringNullableFilter<"Company"> | string | null
    industry?: StringNullableFilter<"Company"> | string | null
    number_of_employees?: IntNullableFilter<"Company"> | number | null
    annual_revenue?: DecimalNullableFilter<"Company"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableFilter<"Company"> | string | null
    is_active?: BoolFilter<"Company"> | boolean
    CompanyAdditionalInfo?: CompanyAdditionalInfoListRelationFilter
  }

  export type CompanyOrderByWithRelationInput = {
    id?: SortOrder
    company_name?: SortOrder
    company_short_name?: SortOrderInput | SortOrder
    company_code?: SortOrderInput | SortOrder
    registration_number?: SortOrder
    tax_id?: SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    postal_code?: SortOrderInput | SortOrder
    phone?: SortOrder
    email?: SortOrder
    website?: SortOrderInput | SortOrder
    industry?: SortOrderInput | SortOrder
    number_of_employees?: SortOrderInput | SortOrder
    annual_revenue?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    is_active?: SortOrder
    CompanyAdditionalInfo?: CompanyAdditionalInfoOrderByRelationAggregateInput
  }

  export type CompanyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    company_name?: StringFilter<"Company"> | string
    company_short_name?: StringNullableFilter<"Company"> | string | null
    company_code?: StringNullableFilter<"Company"> | string | null
    registration_number?: StringFilter<"Company"> | string
    tax_id?: StringFilter<"Company"> | string
    address?: StringNullableFilter<"Company"> | string | null
    city?: StringNullableFilter<"Company"> | string | null
    state?: StringNullableFilter<"Company"> | string | null
    country?: StringNullableFilter<"Company"> | string | null
    postal_code?: StringNullableFilter<"Company"> | string | null
    phone?: StringFilter<"Company"> | string
    email?: StringFilter<"Company"> | string
    website?: StringNullableFilter<"Company"> | string | null
    industry?: StringNullableFilter<"Company"> | string | null
    number_of_employees?: IntNullableFilter<"Company"> | number | null
    annual_revenue?: DecimalNullableFilter<"Company"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableFilter<"Company"> | string | null
    is_active?: BoolFilter<"Company"> | boolean
    CompanyAdditionalInfo?: CompanyAdditionalInfoListRelationFilter
  }, "id">

  export type CompanyOrderByWithAggregationInput = {
    id?: SortOrder
    company_name?: SortOrder
    company_short_name?: SortOrderInput | SortOrder
    company_code?: SortOrderInput | SortOrder
    registration_number?: SortOrder
    tax_id?: SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    postal_code?: SortOrderInput | SortOrder
    phone?: SortOrder
    email?: SortOrder
    website?: SortOrderInput | SortOrder
    industry?: SortOrderInput | SortOrder
    number_of_employees?: SortOrderInput | SortOrder
    annual_revenue?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    is_active?: SortOrder
    _count?: CompanyCountOrderByAggregateInput
    _avg?: CompanyAvgOrderByAggregateInput
    _max?: CompanyMaxOrderByAggregateInput
    _min?: CompanyMinOrderByAggregateInput
    _sum?: CompanySumOrderByAggregateInput
  }

  export type CompanyScalarWhereWithAggregatesInput = {
    AND?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    OR?: CompanyScalarWhereWithAggregatesInput[]
    NOT?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Company"> | string
    company_name?: StringWithAggregatesFilter<"Company"> | string
    company_short_name?: StringNullableWithAggregatesFilter<"Company"> | string | null
    company_code?: StringNullableWithAggregatesFilter<"Company"> | string | null
    registration_number?: StringWithAggregatesFilter<"Company"> | string
    tax_id?: StringWithAggregatesFilter<"Company"> | string
    address?: StringNullableWithAggregatesFilter<"Company"> | string | null
    city?: StringNullableWithAggregatesFilter<"Company"> | string | null
    state?: StringNullableWithAggregatesFilter<"Company"> | string | null
    country?: StringNullableWithAggregatesFilter<"Company"> | string | null
    postal_code?: StringNullableWithAggregatesFilter<"Company"> | string | null
    phone?: StringWithAggregatesFilter<"Company"> | string
    email?: StringWithAggregatesFilter<"Company"> | string
    website?: StringNullableWithAggregatesFilter<"Company"> | string | null
    industry?: StringNullableWithAggregatesFilter<"Company"> | string | null
    number_of_employees?: IntNullableWithAggregatesFilter<"Company"> | number | null
    annual_revenue?: DecimalNullableWithAggregatesFilter<"Company"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableWithAggregatesFilter<"Company"> | string | null
    is_active?: BoolWithAggregatesFilter<"Company"> | boolean
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    fullname?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    address?: StringNullableFilter<"User"> | string | null
    phone?: StringFilter<"User"> | string
    is_active?: BoolNullableFilter<"User"> | boolean | null
    is_admin?: BoolNullableFilter<"User"> | boolean | null
    is_password_reset?: BoolNullableFilter<"User"> | boolean | null
    user_type?: StringFilter<"User"> | string
    created_at?: DateTimeFilter<"User"> | Date | string
    created_by?: StringFilter<"User"> | string
    created_ip?: StringNullableFilter<"User"> | string | null
    updated_at?: DateTimeFilter<"User"> | Date | string
    updated_by?: StringNullableFilter<"User"> | string | null
    updated_ip?: StringNullableFilter<"User"> | string | null
    company_id?: StringFilter<"User"> | string
    UserGroups?: UserGroupListRelationFilter
    RefreshToken?: RefreshTokenListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrder
    is_active?: SortOrderInput | SortOrder
    is_admin?: SortOrderInput | SortOrder
    is_password_reset?: SortOrderInput | SortOrder
    user_type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    UserGroups?: UserGroupOrderByRelationAggregateInput
    RefreshToken?: RefreshTokenOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    fullname?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    address?: StringNullableFilter<"User"> | string | null
    phone?: StringFilter<"User"> | string
    is_active?: BoolNullableFilter<"User"> | boolean | null
    is_admin?: BoolNullableFilter<"User"> | boolean | null
    is_password_reset?: BoolNullableFilter<"User"> | boolean | null
    user_type?: StringFilter<"User"> | string
    created_at?: DateTimeFilter<"User"> | Date | string
    created_by?: StringFilter<"User"> | string
    created_ip?: StringNullableFilter<"User"> | string | null
    updated_at?: DateTimeFilter<"User"> | Date | string
    updated_by?: StringNullableFilter<"User"> | string | null
    updated_ip?: StringNullableFilter<"User"> | string | null
    company_id?: StringFilter<"User"> | string
    UserGroups?: UserGroupListRelationFilter
    RefreshToken?: RefreshTokenListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrder
    is_active?: SortOrderInput | SortOrder
    is_admin?: SortOrderInput | SortOrder
    is_password_reset?: SortOrderInput | SortOrder
    user_type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    fullname?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    address?: StringNullableWithAggregatesFilter<"User"> | string | null
    phone?: StringWithAggregatesFilter<"User"> | string
    is_active?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
    is_admin?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
    is_password_reset?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
    user_type?: StringWithAggregatesFilter<"User"> | string
    created_at?: DateTimeWithAggregatesFilter<"User"> | Date | string
    created_by?: StringWithAggregatesFilter<"User"> | string
    created_ip?: StringNullableWithAggregatesFilter<"User"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"User"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"User"> | string | null
    company_id?: StringWithAggregatesFilter<"User"> | string
  }

  export type RefreshTokenWhereInput = {
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    isRevoked?: BoolFilter<"RefreshToken"> | boolean
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type RefreshTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type RefreshTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    isRevoked?: BoolFilter<"RefreshToken"> | boolean
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "token">

  export type RefreshTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
    _count?: RefreshTokenCountOrderByAggregateInput
    _max?: RefreshTokenMaxOrderByAggregateInput
    _min?: RefreshTokenMinOrderByAggregateInput
  }

  export type RefreshTokenScalarWhereWithAggregatesInput = {
    AND?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    OR?: RefreshTokenScalarWhereWithAggregatesInput[]
    NOT?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RefreshToken"> | string
    token?: StringWithAggregatesFilter<"RefreshToken"> | string
    userId?: StringWithAggregatesFilter<"RefreshToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    isRevoked?: BoolWithAggregatesFilter<"RefreshToken"> | boolean
  }

  export type SecurityRuleWhereInput = {
    AND?: SecurityRuleWhereInput | SecurityRuleWhereInput[]
    OR?: SecurityRuleWhereInput[]
    NOT?: SecurityRuleWhereInput | SecurityRuleWhereInput[]
    id?: StringFilter<"SecurityRule"> | string
    name?: StringFilter<"SecurityRule"> | string
    description?: StringNullableFilter<"SecurityRule"> | string | null
    created_at?: DateTimeFilter<"SecurityRule"> | Date | string
    created_by?: StringFilter<"SecurityRule"> | string
    created_ip?: StringNullableFilter<"SecurityRule"> | string | null
    updated_at?: DateTimeFilter<"SecurityRule"> | Date | string
    updated_by?: StringNullableFilter<"SecurityRule"> | string | null
    updated_ip?: StringNullableFilter<"SecurityRule"> | string | null
    company_id?: StringFilter<"SecurityRule"> | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionListRelationFilter
    SecurityGroupRules?: SecurityGroupRuleListRelationFilter
  }

  export type SecurityRuleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionOrderByRelationAggregateInput
    SecurityGroupRules?: SecurityGroupRuleOrderByRelationAggregateInput
  }

  export type SecurityRuleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SecurityRuleWhereInput | SecurityRuleWhereInput[]
    OR?: SecurityRuleWhereInput[]
    NOT?: SecurityRuleWhereInput | SecurityRuleWhereInput[]
    name?: StringFilter<"SecurityRule"> | string
    description?: StringNullableFilter<"SecurityRule"> | string | null
    created_at?: DateTimeFilter<"SecurityRule"> | Date | string
    created_by?: StringFilter<"SecurityRule"> | string
    created_ip?: StringNullableFilter<"SecurityRule"> | string | null
    updated_at?: DateTimeFilter<"SecurityRule"> | Date | string
    updated_by?: StringNullableFilter<"SecurityRule"> | string | null
    updated_ip?: StringNullableFilter<"SecurityRule"> | string | null
    company_id?: StringFilter<"SecurityRule"> | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionListRelationFilter
    SecurityGroupRules?: SecurityGroupRuleListRelationFilter
  }, "id">

  export type SecurityRuleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: SecurityRuleCountOrderByAggregateInput
    _max?: SecurityRuleMaxOrderByAggregateInput
    _min?: SecurityRuleMinOrderByAggregateInput
  }

  export type SecurityRuleScalarWhereWithAggregatesInput = {
    AND?: SecurityRuleScalarWhereWithAggregatesInput | SecurityRuleScalarWhereWithAggregatesInput[]
    OR?: SecurityRuleScalarWhereWithAggregatesInput[]
    NOT?: SecurityRuleScalarWhereWithAggregatesInput | SecurityRuleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SecurityRule"> | string
    name?: StringWithAggregatesFilter<"SecurityRule"> | string
    description?: StringNullableWithAggregatesFilter<"SecurityRule"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"SecurityRule"> | Date | string
    created_by?: StringWithAggregatesFilter<"SecurityRule"> | string
    created_ip?: StringNullableWithAggregatesFilter<"SecurityRule"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"SecurityRule"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"SecurityRule"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"SecurityRule"> | string | null
    company_id?: StringWithAggregatesFilter<"SecurityRule"> | string
  }

  export type SecurityRuleWiseMenuPermissionWhereInput = {
    AND?: SecurityRuleWiseMenuPermissionWhereInput | SecurityRuleWiseMenuPermissionWhereInput[]
    OR?: SecurityRuleWiseMenuPermissionWhereInput[]
    NOT?: SecurityRuleWiseMenuPermissionWhereInput | SecurityRuleWiseMenuPermissionWhereInput[]
    id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    menu_id?: IntFilter<"SecurityRuleWiseMenuPermission"> | number
    can_view?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_create?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_update?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_delete?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_report?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    rule_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    created_by?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    updated_by?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    company_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    security_rule?: XOR<SecurityRuleRelationFilter, SecurityRuleWhereInput>
  }

  export type SecurityRuleWiseMenuPermissionOrderByWithRelationInput = {
    id?: SortOrder
    menu_id?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    security_rule?: SecurityRuleOrderByWithRelationInput
  }

  export type SecurityRuleWiseMenuPermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SecurityRuleWiseMenuPermissionWhereInput | SecurityRuleWiseMenuPermissionWhereInput[]
    OR?: SecurityRuleWiseMenuPermissionWhereInput[]
    NOT?: SecurityRuleWiseMenuPermissionWhereInput | SecurityRuleWiseMenuPermissionWhereInput[]
    menu_id?: IntFilter<"SecurityRuleWiseMenuPermission"> | number
    can_view?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_create?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_update?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_delete?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_report?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    rule_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    created_by?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    updated_by?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    company_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    security_rule?: XOR<SecurityRuleRelationFilter, SecurityRuleWhereInput>
  }, "id">

  export type SecurityRuleWiseMenuPermissionOrderByWithAggregationInput = {
    id?: SortOrder
    menu_id?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: SecurityRuleWiseMenuPermissionCountOrderByAggregateInput
    _avg?: SecurityRuleWiseMenuPermissionAvgOrderByAggregateInput
    _max?: SecurityRuleWiseMenuPermissionMaxOrderByAggregateInput
    _min?: SecurityRuleWiseMenuPermissionMinOrderByAggregateInput
    _sum?: SecurityRuleWiseMenuPermissionSumOrderByAggregateInput
  }

  export type SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput = {
    AND?: SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput | SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput[]
    OR?: SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput[]
    NOT?: SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput | SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string
    menu_id?: IntWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | number
    can_view?: BoolWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_create?: BoolWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_update?: BoolWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_delete?: BoolWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_report?: BoolWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | boolean
    rule_id?: StringWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string
    created_at?: DateTimeWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    created_by?: StringWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string
    created_ip?: StringNullableWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string | null
    company_id?: StringWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string
  }

  export type SecurityGroupWhereInput = {
    AND?: SecurityGroupWhereInput | SecurityGroupWhereInput[]
    OR?: SecurityGroupWhereInput[]
    NOT?: SecurityGroupWhereInput | SecurityGroupWhereInput[]
    id?: StringFilter<"SecurityGroup"> | string
    name?: StringFilter<"SecurityGroup"> | string
    description?: StringNullableFilter<"SecurityGroup"> | string | null
    created_at?: DateTimeFilter<"SecurityGroup"> | Date | string
    created_by?: StringFilter<"SecurityGroup"> | string
    created_ip?: StringNullableFilter<"SecurityGroup"> | string | null
    updated_at?: DateTimeFilter<"SecurityGroup"> | Date | string
    updated_by?: StringNullableFilter<"SecurityGroup"> | string | null
    updated_ip?: StringNullableFilter<"SecurityGroup"> | string | null
    company_id?: StringFilter<"SecurityGroup"> | string
    SecurityGroupRules?: SecurityGroupRuleListRelationFilter
    UserGroups?: UserGroupListRelationFilter
  }

  export type SecurityGroupOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    SecurityGroupRules?: SecurityGroupRuleOrderByRelationAggregateInput
    UserGroups?: UserGroupOrderByRelationAggregateInput
  }

  export type SecurityGroupWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SecurityGroupWhereInput | SecurityGroupWhereInput[]
    OR?: SecurityGroupWhereInput[]
    NOT?: SecurityGroupWhereInput | SecurityGroupWhereInput[]
    name?: StringFilter<"SecurityGroup"> | string
    description?: StringNullableFilter<"SecurityGroup"> | string | null
    created_at?: DateTimeFilter<"SecurityGroup"> | Date | string
    created_by?: StringFilter<"SecurityGroup"> | string
    created_ip?: StringNullableFilter<"SecurityGroup"> | string | null
    updated_at?: DateTimeFilter<"SecurityGroup"> | Date | string
    updated_by?: StringNullableFilter<"SecurityGroup"> | string | null
    updated_ip?: StringNullableFilter<"SecurityGroup"> | string | null
    company_id?: StringFilter<"SecurityGroup"> | string
    SecurityGroupRules?: SecurityGroupRuleListRelationFilter
    UserGroups?: UserGroupListRelationFilter
  }, "id">

  export type SecurityGroupOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: SecurityGroupCountOrderByAggregateInput
    _max?: SecurityGroupMaxOrderByAggregateInput
    _min?: SecurityGroupMinOrderByAggregateInput
  }

  export type SecurityGroupScalarWhereWithAggregatesInput = {
    AND?: SecurityGroupScalarWhereWithAggregatesInput | SecurityGroupScalarWhereWithAggregatesInput[]
    OR?: SecurityGroupScalarWhereWithAggregatesInput[]
    NOT?: SecurityGroupScalarWhereWithAggregatesInput | SecurityGroupScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SecurityGroup"> | string
    name?: StringWithAggregatesFilter<"SecurityGroup"> | string
    description?: StringNullableWithAggregatesFilter<"SecurityGroup"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"SecurityGroup"> | Date | string
    created_by?: StringWithAggregatesFilter<"SecurityGroup"> | string
    created_ip?: StringNullableWithAggregatesFilter<"SecurityGroup"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"SecurityGroup"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"SecurityGroup"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"SecurityGroup"> | string | null
    company_id?: StringWithAggregatesFilter<"SecurityGroup"> | string
  }

  export type SecurityGroupRuleWhereInput = {
    AND?: SecurityGroupRuleWhereInput | SecurityGroupRuleWhereInput[]
    OR?: SecurityGroupRuleWhereInput[]
    NOT?: SecurityGroupRuleWhereInput | SecurityGroupRuleWhereInput[]
    id?: StringFilter<"SecurityGroupRule"> | string
    group_id?: StringFilter<"SecurityGroupRule"> | string
    rule_id?: StringFilter<"SecurityGroupRule"> | string
    created_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    created_by?: StringFilter<"SecurityGroupRule"> | string
    created_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    updated_by?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    company_id?: StringFilter<"SecurityGroupRule"> | string
    security_group?: XOR<SecurityGroupRelationFilter, SecurityGroupWhereInput>
    security_rule?: XOR<SecurityRuleRelationFilter, SecurityRuleWhereInput>
  }

  export type SecurityGroupRuleOrderByWithRelationInput = {
    id?: SortOrder
    group_id?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    security_group?: SecurityGroupOrderByWithRelationInput
    security_rule?: SecurityRuleOrderByWithRelationInput
  }

  export type SecurityGroupRuleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SecurityGroupRuleWhereInput | SecurityGroupRuleWhereInput[]
    OR?: SecurityGroupRuleWhereInput[]
    NOT?: SecurityGroupRuleWhereInput | SecurityGroupRuleWhereInput[]
    group_id?: StringFilter<"SecurityGroupRule"> | string
    rule_id?: StringFilter<"SecurityGroupRule"> | string
    created_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    created_by?: StringFilter<"SecurityGroupRule"> | string
    created_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    updated_by?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    company_id?: StringFilter<"SecurityGroupRule"> | string
    security_group?: XOR<SecurityGroupRelationFilter, SecurityGroupWhereInput>
    security_rule?: XOR<SecurityRuleRelationFilter, SecurityRuleWhereInput>
  }, "id">

  export type SecurityGroupRuleOrderByWithAggregationInput = {
    id?: SortOrder
    group_id?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: SecurityGroupRuleCountOrderByAggregateInput
    _max?: SecurityGroupRuleMaxOrderByAggregateInput
    _min?: SecurityGroupRuleMinOrderByAggregateInput
  }

  export type SecurityGroupRuleScalarWhereWithAggregatesInput = {
    AND?: SecurityGroupRuleScalarWhereWithAggregatesInput | SecurityGroupRuleScalarWhereWithAggregatesInput[]
    OR?: SecurityGroupRuleScalarWhereWithAggregatesInput[]
    NOT?: SecurityGroupRuleScalarWhereWithAggregatesInput | SecurityGroupRuleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SecurityGroupRule"> | string
    group_id?: StringWithAggregatesFilter<"SecurityGroupRule"> | string
    rule_id?: StringWithAggregatesFilter<"SecurityGroupRule"> | string
    created_at?: DateTimeWithAggregatesFilter<"SecurityGroupRule"> | Date | string
    created_by?: StringWithAggregatesFilter<"SecurityGroupRule"> | string
    created_ip?: StringNullableWithAggregatesFilter<"SecurityGroupRule"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"SecurityGroupRule"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"SecurityGroupRule"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"SecurityGroupRule"> | string | null
    company_id?: StringWithAggregatesFilter<"SecurityGroupRule"> | string
  }

  export type UserGroupWhereInput = {
    AND?: UserGroupWhereInput | UserGroupWhereInput[]
    OR?: UserGroupWhereInput[]
    NOT?: UserGroupWhereInput | UserGroupWhereInput[]
    id?: StringFilter<"UserGroup"> | string
    user_id?: StringFilter<"UserGroup"> | string
    group_id?: StringFilter<"UserGroup"> | string
    created_at?: DateTimeFilter<"UserGroup"> | Date | string
    created_by?: StringFilter<"UserGroup"> | string
    created_ip?: StringNullableFilter<"UserGroup"> | string | null
    updated_at?: DateTimeFilter<"UserGroup"> | Date | string
    updated_by?: StringNullableFilter<"UserGroup"> | string | null
    updated_ip?: StringNullableFilter<"UserGroup"> | string | null
    company_id?: StringFilter<"UserGroup"> | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    security_group?: XOR<SecurityGroupRelationFilter, SecurityGroupWhereInput>
  }

  export type UserGroupOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    user?: UserOrderByWithRelationInput
    security_group?: SecurityGroupOrderByWithRelationInput
  }

  export type UserGroupWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UserGroupWhereInput | UserGroupWhereInput[]
    OR?: UserGroupWhereInput[]
    NOT?: UserGroupWhereInput | UserGroupWhereInput[]
    user_id?: StringFilter<"UserGroup"> | string
    group_id?: StringFilter<"UserGroup"> | string
    created_at?: DateTimeFilter<"UserGroup"> | Date | string
    created_by?: StringFilter<"UserGroup"> | string
    created_ip?: StringNullableFilter<"UserGroup"> | string | null
    updated_at?: DateTimeFilter<"UserGroup"> | Date | string
    updated_by?: StringNullableFilter<"UserGroup"> | string | null
    updated_ip?: StringNullableFilter<"UserGroup"> | string | null
    company_id?: StringFilter<"UserGroup"> | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    security_group?: XOR<SecurityGroupRelationFilter, SecurityGroupWhereInput>
  }, "id">

  export type UserGroupOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: UserGroupCountOrderByAggregateInput
    _max?: UserGroupMaxOrderByAggregateInput
    _min?: UserGroupMinOrderByAggregateInput
  }

  export type UserGroupScalarWhereWithAggregatesInput = {
    AND?: UserGroupScalarWhereWithAggregatesInput | UserGroupScalarWhereWithAggregatesInput[]
    OR?: UserGroupScalarWhereWithAggregatesInput[]
    NOT?: UserGroupScalarWhereWithAggregatesInput | UserGroupScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserGroup"> | string
    user_id?: StringWithAggregatesFilter<"UserGroup"> | string
    group_id?: StringWithAggregatesFilter<"UserGroup"> | string
    created_at?: DateTimeWithAggregatesFilter<"UserGroup"> | Date | string
    created_by?: StringWithAggregatesFilter<"UserGroup"> | string
    created_ip?: StringNullableWithAggregatesFilter<"UserGroup"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"UserGroup"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"UserGroup"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"UserGroup"> | string | null
    company_id?: StringWithAggregatesFilter<"UserGroup"> | string
  }

  export type MenuWhereInput = {
    AND?: MenuWhereInput | MenuWhereInput[]
    OR?: MenuWhereInput[]
    NOT?: MenuWhereInput | MenuWhereInput[]
    id?: IntFilter<"Menu"> | number
    title?: StringFilter<"Menu"> | string
    url?: StringNullableFilter<"Menu"> | string | null
    icon?: StringNullableFilter<"Menu"> | string | null
    icon_library?: StringNullableFilter<"Menu"> | string | null
    parent_id?: IntFilter<"Menu"> | number
    sequence_no?: DecimalFilter<"Menu"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolFilter<"Menu"> | boolean
    can_view?: BoolNullableFilter<"Menu"> | boolean | null
    can_create?: BoolNullableFilter<"Menu"> | boolean | null
    can_update?: BoolNullableFilter<"Menu"> | boolean | null
    can_delete?: BoolNullableFilter<"Menu"> | boolean | null
    can_report?: BoolNullableFilter<"Menu"> | boolean | null
  }

  export type MenuOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    url?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    icon_library?: SortOrderInput | SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    can_view?: SortOrderInput | SortOrder
    can_create?: SortOrderInput | SortOrder
    can_update?: SortOrderInput | SortOrder
    can_delete?: SortOrderInput | SortOrder
    can_report?: SortOrderInput | SortOrder
  }

  export type MenuWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MenuWhereInput | MenuWhereInput[]
    OR?: MenuWhereInput[]
    NOT?: MenuWhereInput | MenuWhereInput[]
    title?: StringFilter<"Menu"> | string
    url?: StringNullableFilter<"Menu"> | string | null
    icon?: StringNullableFilter<"Menu"> | string | null
    icon_library?: StringNullableFilter<"Menu"> | string | null
    parent_id?: IntFilter<"Menu"> | number
    sequence_no?: DecimalFilter<"Menu"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolFilter<"Menu"> | boolean
    can_view?: BoolNullableFilter<"Menu"> | boolean | null
    can_create?: BoolNullableFilter<"Menu"> | boolean | null
    can_update?: BoolNullableFilter<"Menu"> | boolean | null
    can_delete?: BoolNullableFilter<"Menu"> | boolean | null
    can_report?: BoolNullableFilter<"Menu"> | boolean | null
  }, "id">

  export type MenuOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    url?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    icon_library?: SortOrderInput | SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    can_view?: SortOrderInput | SortOrder
    can_create?: SortOrderInput | SortOrder
    can_update?: SortOrderInput | SortOrder
    can_delete?: SortOrderInput | SortOrder
    can_report?: SortOrderInput | SortOrder
    _count?: MenuCountOrderByAggregateInput
    _avg?: MenuAvgOrderByAggregateInput
    _max?: MenuMaxOrderByAggregateInput
    _min?: MenuMinOrderByAggregateInput
    _sum?: MenuSumOrderByAggregateInput
  }

  export type MenuScalarWhereWithAggregatesInput = {
    AND?: MenuScalarWhereWithAggregatesInput | MenuScalarWhereWithAggregatesInput[]
    OR?: MenuScalarWhereWithAggregatesInput[]
    NOT?: MenuScalarWhereWithAggregatesInput | MenuScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Menu"> | number
    title?: StringWithAggregatesFilter<"Menu"> | string
    url?: StringNullableWithAggregatesFilter<"Menu"> | string | null
    icon?: StringNullableWithAggregatesFilter<"Menu"> | string | null
    icon_library?: StringNullableWithAggregatesFilter<"Menu"> | string | null
    parent_id?: IntWithAggregatesFilter<"Menu"> | number
    sequence_no?: DecimalWithAggregatesFilter<"Menu"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolWithAggregatesFilter<"Menu"> | boolean
    can_view?: BoolNullableWithAggregatesFilter<"Menu"> | boolean | null
    can_create?: BoolNullableWithAggregatesFilter<"Menu"> | boolean | null
    can_update?: BoolNullableWithAggregatesFilter<"Menu"> | boolean | null
    can_delete?: BoolNullableWithAggregatesFilter<"Menu"> | boolean | null
    can_report?: BoolNullableWithAggregatesFilter<"Menu"> | boolean | null
  }

  export type ProjectWhereInput = {
    AND?: ProjectWhereInput | ProjectWhereInput[]
    OR?: ProjectWhereInput[]
    NOT?: ProjectWhereInput | ProjectWhereInput[]
    id?: StringFilter<"Project"> | string
    title?: StringFilter<"Project"> | string
    subtitle?: StringNullableFilter<"Project"> | string | null
    description?: StringNullableFilter<"Project"> | string | null
    start_date?: DateTimeFilter<"Project"> | Date | string
    end_date?: DateTimeNullableFilter<"Project"> | Date | string | null
    thumbnail_url?: StringNullableFilter<"Project"> | string | null
    city?: StringNullableFilter<"Project"> | string | null
    country?: StringNullableFilter<"Project"> | string | null
    address?: StringNullableFilter<"Project"> | string | null
    client_name?: StringNullableFilter<"Project"> | string | null
    category_id?: StringFilter<"Project"> | string
    area?: DecimalNullableFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFilter<"Project"> | boolean
    tags?: JsonNullableFilter<"Project">
    budget?: DecimalNullableFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"Project"> | string
    created_at?: DateTimeFilter<"Project"> | Date | string
    created_by?: StringFilter<"Project"> | string
    created_ip?: StringNullableFilter<"Project"> | string | null
    updated_at?: DateTimeFilter<"Project"> | Date | string
    updated_by?: StringNullableFilter<"Project"> | string | null
    updated_ip?: StringNullableFilter<"Project"> | string | null
    company_id?: StringFilter<"Project"> | string
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
    gallery?: ProjectGalleryListRelationFilter
    key_features?: ProjectKeyFeatureListRelationFilter
    services?: ProjectServiceListRelationFilter
  }

  export type ProjectOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrderInput | SortOrder
    thumbnail_url?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    client_name?: SortOrderInput | SortOrder
    category_id?: SortOrder
    area?: SortOrderInput | SortOrder
    is_featured?: SortOrder
    tags?: SortOrderInput | SortOrder
    budget?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    category?: CategoryOrderByWithRelationInput
    gallery?: ProjectGalleryOrderByRelationAggregateInput
    key_features?: ProjectKeyFeatureOrderByRelationAggregateInput
    services?: ProjectServiceOrderByRelationAggregateInput
  }

  export type ProjectWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProjectWhereInput | ProjectWhereInput[]
    OR?: ProjectWhereInput[]
    NOT?: ProjectWhereInput | ProjectWhereInput[]
    title?: StringFilter<"Project"> | string
    subtitle?: StringNullableFilter<"Project"> | string | null
    description?: StringNullableFilter<"Project"> | string | null
    start_date?: DateTimeFilter<"Project"> | Date | string
    end_date?: DateTimeNullableFilter<"Project"> | Date | string | null
    thumbnail_url?: StringNullableFilter<"Project"> | string | null
    city?: StringNullableFilter<"Project"> | string | null
    country?: StringNullableFilter<"Project"> | string | null
    address?: StringNullableFilter<"Project"> | string | null
    client_name?: StringNullableFilter<"Project"> | string | null
    category_id?: StringFilter<"Project"> | string
    area?: DecimalNullableFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFilter<"Project"> | boolean
    tags?: JsonNullableFilter<"Project">
    budget?: DecimalNullableFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"Project"> | string
    created_at?: DateTimeFilter<"Project"> | Date | string
    created_by?: StringFilter<"Project"> | string
    created_ip?: StringNullableFilter<"Project"> | string | null
    updated_at?: DateTimeFilter<"Project"> | Date | string
    updated_by?: StringNullableFilter<"Project"> | string | null
    updated_ip?: StringNullableFilter<"Project"> | string | null
    company_id?: StringFilter<"Project"> | string
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
    gallery?: ProjectGalleryListRelationFilter
    key_features?: ProjectKeyFeatureListRelationFilter
    services?: ProjectServiceListRelationFilter
  }, "id">

  export type ProjectOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrderInput | SortOrder
    thumbnail_url?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    client_name?: SortOrderInput | SortOrder
    category_id?: SortOrder
    area?: SortOrderInput | SortOrder
    is_featured?: SortOrder
    tags?: SortOrderInput | SortOrder
    budget?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: ProjectCountOrderByAggregateInput
    _avg?: ProjectAvgOrderByAggregateInput
    _max?: ProjectMaxOrderByAggregateInput
    _min?: ProjectMinOrderByAggregateInput
    _sum?: ProjectSumOrderByAggregateInput
  }

  export type ProjectScalarWhereWithAggregatesInput = {
    AND?: ProjectScalarWhereWithAggregatesInput | ProjectScalarWhereWithAggregatesInput[]
    OR?: ProjectScalarWhereWithAggregatesInput[]
    NOT?: ProjectScalarWhereWithAggregatesInput | ProjectScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Project"> | string
    title?: StringWithAggregatesFilter<"Project"> | string
    subtitle?: StringNullableWithAggregatesFilter<"Project"> | string | null
    description?: StringNullableWithAggregatesFilter<"Project"> | string | null
    start_date?: DateTimeWithAggregatesFilter<"Project"> | Date | string
    end_date?: DateTimeNullableWithAggregatesFilter<"Project"> | Date | string | null
    thumbnail_url?: StringNullableWithAggregatesFilter<"Project"> | string | null
    city?: StringNullableWithAggregatesFilter<"Project"> | string | null
    country?: StringNullableWithAggregatesFilter<"Project"> | string | null
    address?: StringNullableWithAggregatesFilter<"Project"> | string | null
    client_name?: StringNullableWithAggregatesFilter<"Project"> | string | null
    category_id?: StringWithAggregatesFilter<"Project"> | string
    area?: DecimalNullableWithAggregatesFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolWithAggregatesFilter<"Project"> | boolean
    tags?: JsonNullableWithAggregatesFilter<"Project">
    budget?: DecimalNullableWithAggregatesFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    status?: StringWithAggregatesFilter<"Project"> | string
    created_at?: DateTimeWithAggregatesFilter<"Project"> | Date | string
    created_by?: StringWithAggregatesFilter<"Project"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Project"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Project"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Project"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Project"> | string | null
    company_id?: StringWithAggregatesFilter<"Project"> | string
  }

  export type ProjectGalleryWhereInput = {
    AND?: ProjectGalleryWhereInput | ProjectGalleryWhereInput[]
    OR?: ProjectGalleryWhereInput[]
    NOT?: ProjectGalleryWhereInput | ProjectGalleryWhereInput[]
    id?: StringFilter<"ProjectGallery"> | string
    project_id?: StringFilter<"ProjectGallery"> | string
    image_url?: StringFilter<"ProjectGallery"> | string
    title?: StringNullableFilter<"ProjectGallery"> | string | null
    subtitle?: StringNullableFilter<"ProjectGallery"> | string | null
    sequence_no?: IntFilter<"ProjectGallery"> | number
    created_at?: DateTimeFilter<"ProjectGallery"> | Date | string
    created_by?: StringFilter<"ProjectGallery"> | string
    created_ip?: StringNullableFilter<"ProjectGallery"> | string | null
    updated_at?: DateTimeFilter<"ProjectGallery"> | Date | string
    updated_by?: StringNullableFilter<"ProjectGallery"> | string | null
    updated_ip?: StringNullableFilter<"ProjectGallery"> | string | null
    company_id?: StringFilter<"ProjectGallery"> | string
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
  }

  export type ProjectGalleryOrderByWithRelationInput = {
    id?: SortOrder
    project_id?: SortOrder
    image_url?: SortOrder
    title?: SortOrderInput | SortOrder
    subtitle?: SortOrderInput | SortOrder
    sequence_no?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    project?: ProjectOrderByWithRelationInput
  }

  export type ProjectGalleryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProjectGalleryWhereInput | ProjectGalleryWhereInput[]
    OR?: ProjectGalleryWhereInput[]
    NOT?: ProjectGalleryWhereInput | ProjectGalleryWhereInput[]
    project_id?: StringFilter<"ProjectGallery"> | string
    image_url?: StringFilter<"ProjectGallery"> | string
    title?: StringNullableFilter<"ProjectGallery"> | string | null
    subtitle?: StringNullableFilter<"ProjectGallery"> | string | null
    sequence_no?: IntFilter<"ProjectGallery"> | number
    created_at?: DateTimeFilter<"ProjectGallery"> | Date | string
    created_by?: StringFilter<"ProjectGallery"> | string
    created_ip?: StringNullableFilter<"ProjectGallery"> | string | null
    updated_at?: DateTimeFilter<"ProjectGallery"> | Date | string
    updated_by?: StringNullableFilter<"ProjectGallery"> | string | null
    updated_ip?: StringNullableFilter<"ProjectGallery"> | string | null
    company_id?: StringFilter<"ProjectGallery"> | string
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
  }, "id">

  export type ProjectGalleryOrderByWithAggregationInput = {
    id?: SortOrder
    project_id?: SortOrder
    image_url?: SortOrder
    title?: SortOrderInput | SortOrder
    subtitle?: SortOrderInput | SortOrder
    sequence_no?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: ProjectGalleryCountOrderByAggregateInput
    _avg?: ProjectGalleryAvgOrderByAggregateInput
    _max?: ProjectGalleryMaxOrderByAggregateInput
    _min?: ProjectGalleryMinOrderByAggregateInput
    _sum?: ProjectGallerySumOrderByAggregateInput
  }

  export type ProjectGalleryScalarWhereWithAggregatesInput = {
    AND?: ProjectGalleryScalarWhereWithAggregatesInput | ProjectGalleryScalarWhereWithAggregatesInput[]
    OR?: ProjectGalleryScalarWhereWithAggregatesInput[]
    NOT?: ProjectGalleryScalarWhereWithAggregatesInput | ProjectGalleryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProjectGallery"> | string
    project_id?: StringWithAggregatesFilter<"ProjectGallery"> | string
    image_url?: StringWithAggregatesFilter<"ProjectGallery"> | string
    title?: StringNullableWithAggregatesFilter<"ProjectGallery"> | string | null
    subtitle?: StringNullableWithAggregatesFilter<"ProjectGallery"> | string | null
    sequence_no?: IntWithAggregatesFilter<"ProjectGallery"> | number
    created_at?: DateTimeWithAggregatesFilter<"ProjectGallery"> | Date | string
    created_by?: StringWithAggregatesFilter<"ProjectGallery"> | string
    created_ip?: StringNullableWithAggregatesFilter<"ProjectGallery"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"ProjectGallery"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"ProjectGallery"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"ProjectGallery"> | string | null
    company_id?: StringWithAggregatesFilter<"ProjectGallery"> | string
  }

  export type ProjectKeyFeatureWhereInput = {
    AND?: ProjectKeyFeatureWhereInput | ProjectKeyFeatureWhereInput[]
    OR?: ProjectKeyFeatureWhereInput[]
    NOT?: ProjectKeyFeatureWhereInput | ProjectKeyFeatureWhereInput[]
    id?: StringFilter<"ProjectKeyFeature"> | string
    project_id?: StringFilter<"ProjectKeyFeature"> | string
    feature?: StringFilter<"ProjectKeyFeature"> | string
    created_at?: DateTimeFilter<"ProjectKeyFeature"> | Date | string
    created_by?: StringFilter<"ProjectKeyFeature"> | string
    created_ip?: StringNullableFilter<"ProjectKeyFeature"> | string | null
    updated_at?: DateTimeFilter<"ProjectKeyFeature"> | Date | string
    updated_by?: StringNullableFilter<"ProjectKeyFeature"> | string | null
    updated_ip?: StringNullableFilter<"ProjectKeyFeature"> | string | null
    company_id?: StringFilter<"ProjectKeyFeature"> | string
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
  }

  export type ProjectKeyFeatureOrderByWithRelationInput = {
    id?: SortOrder
    project_id?: SortOrder
    feature?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    project?: ProjectOrderByWithRelationInput
  }

  export type ProjectKeyFeatureWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProjectKeyFeatureWhereInput | ProjectKeyFeatureWhereInput[]
    OR?: ProjectKeyFeatureWhereInput[]
    NOT?: ProjectKeyFeatureWhereInput | ProjectKeyFeatureWhereInput[]
    project_id?: StringFilter<"ProjectKeyFeature"> | string
    feature?: StringFilter<"ProjectKeyFeature"> | string
    created_at?: DateTimeFilter<"ProjectKeyFeature"> | Date | string
    created_by?: StringFilter<"ProjectKeyFeature"> | string
    created_ip?: StringNullableFilter<"ProjectKeyFeature"> | string | null
    updated_at?: DateTimeFilter<"ProjectKeyFeature"> | Date | string
    updated_by?: StringNullableFilter<"ProjectKeyFeature"> | string | null
    updated_ip?: StringNullableFilter<"ProjectKeyFeature"> | string | null
    company_id?: StringFilter<"ProjectKeyFeature"> | string
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
  }, "id">

  export type ProjectKeyFeatureOrderByWithAggregationInput = {
    id?: SortOrder
    project_id?: SortOrder
    feature?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: ProjectKeyFeatureCountOrderByAggregateInput
    _max?: ProjectKeyFeatureMaxOrderByAggregateInput
    _min?: ProjectKeyFeatureMinOrderByAggregateInput
  }

  export type ProjectKeyFeatureScalarWhereWithAggregatesInput = {
    AND?: ProjectKeyFeatureScalarWhereWithAggregatesInput | ProjectKeyFeatureScalarWhereWithAggregatesInput[]
    OR?: ProjectKeyFeatureScalarWhereWithAggregatesInput[]
    NOT?: ProjectKeyFeatureScalarWhereWithAggregatesInput | ProjectKeyFeatureScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProjectKeyFeature"> | string
    project_id?: StringWithAggregatesFilter<"ProjectKeyFeature"> | string
    feature?: StringWithAggregatesFilter<"ProjectKeyFeature"> | string
    created_at?: DateTimeWithAggregatesFilter<"ProjectKeyFeature"> | Date | string
    created_by?: StringWithAggregatesFilter<"ProjectKeyFeature"> | string
    created_ip?: StringNullableWithAggregatesFilter<"ProjectKeyFeature"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"ProjectKeyFeature"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"ProjectKeyFeature"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"ProjectKeyFeature"> | string | null
    company_id?: StringWithAggregatesFilter<"ProjectKeyFeature"> | string
  }

  export type ProjectServiceWhereInput = {
    AND?: ProjectServiceWhereInput | ProjectServiceWhereInput[]
    OR?: ProjectServiceWhereInput[]
    NOT?: ProjectServiceWhereInput | ProjectServiceWhereInput[]
    id?: StringFilter<"ProjectService"> | string
    project_id?: StringFilter<"ProjectService"> | string
    service?: StringFilter<"ProjectService"> | string
    created_at?: DateTimeFilter<"ProjectService"> | Date | string
    created_by?: StringFilter<"ProjectService"> | string
    created_ip?: StringNullableFilter<"ProjectService"> | string | null
    updated_at?: DateTimeFilter<"ProjectService"> | Date | string
    updated_by?: StringNullableFilter<"ProjectService"> | string | null
    updated_ip?: StringNullableFilter<"ProjectService"> | string | null
    company_id?: StringFilter<"ProjectService"> | string
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
  }

  export type ProjectServiceOrderByWithRelationInput = {
    id?: SortOrder
    project_id?: SortOrder
    service?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    project?: ProjectOrderByWithRelationInput
  }

  export type ProjectServiceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProjectServiceWhereInput | ProjectServiceWhereInput[]
    OR?: ProjectServiceWhereInput[]
    NOT?: ProjectServiceWhereInput | ProjectServiceWhereInput[]
    project_id?: StringFilter<"ProjectService"> | string
    service?: StringFilter<"ProjectService"> | string
    created_at?: DateTimeFilter<"ProjectService"> | Date | string
    created_by?: StringFilter<"ProjectService"> | string
    created_ip?: StringNullableFilter<"ProjectService"> | string | null
    updated_at?: DateTimeFilter<"ProjectService"> | Date | string
    updated_by?: StringNullableFilter<"ProjectService"> | string | null
    updated_ip?: StringNullableFilter<"ProjectService"> | string | null
    company_id?: StringFilter<"ProjectService"> | string
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
  }, "id">

  export type ProjectServiceOrderByWithAggregationInput = {
    id?: SortOrder
    project_id?: SortOrder
    service?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: ProjectServiceCountOrderByAggregateInput
    _max?: ProjectServiceMaxOrderByAggregateInput
    _min?: ProjectServiceMinOrderByAggregateInput
  }

  export type ProjectServiceScalarWhereWithAggregatesInput = {
    AND?: ProjectServiceScalarWhereWithAggregatesInput | ProjectServiceScalarWhereWithAggregatesInput[]
    OR?: ProjectServiceScalarWhereWithAggregatesInput[]
    NOT?: ProjectServiceScalarWhereWithAggregatesInput | ProjectServiceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProjectService"> | string
    project_id?: StringWithAggregatesFilter<"ProjectService"> | string
    service?: StringWithAggregatesFilter<"ProjectService"> | string
    created_at?: DateTimeWithAggregatesFilter<"ProjectService"> | Date | string
    created_by?: StringWithAggregatesFilter<"ProjectService"> | string
    created_ip?: StringNullableWithAggregatesFilter<"ProjectService"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"ProjectService"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"ProjectService"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"ProjectService"> | string | null
    company_id?: StringWithAggregatesFilter<"ProjectService"> | string
  }

  export type ContactWhereInput = {
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    id?: StringFilter<"Contact"> | string
    first_name?: StringFilter<"Contact"> | string
    last_name?: StringFilter<"Contact"> | string
    email?: StringFilter<"Contact"> | string
    phone?: StringFilter<"Contact"> | string
    message?: StringFilter<"Contact"> | string
    created_at?: DateTimeFilter<"Contact"> | Date | string
    created_by?: StringFilter<"Contact"> | string
    created_ip?: StringNullableFilter<"Contact"> | string | null
    updated_at?: DateTimeFilter<"Contact"> | Date | string
    updated_by?: StringNullableFilter<"Contact"> | string | null
    updated_ip?: StringNullableFilter<"Contact"> | string | null
    company_id?: StringFilter<"Contact"> | string
  }

  export type ContactOrderByWithRelationInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    message?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
  }

  export type ContactWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    first_name?: StringFilter<"Contact"> | string
    last_name?: StringFilter<"Contact"> | string
    email?: StringFilter<"Contact"> | string
    phone?: StringFilter<"Contact"> | string
    message?: StringFilter<"Contact"> | string
    created_at?: DateTimeFilter<"Contact"> | Date | string
    created_by?: StringFilter<"Contact"> | string
    created_ip?: StringNullableFilter<"Contact"> | string | null
    updated_at?: DateTimeFilter<"Contact"> | Date | string
    updated_by?: StringNullableFilter<"Contact"> | string | null
    updated_ip?: StringNullableFilter<"Contact"> | string | null
    company_id?: StringFilter<"Contact"> | string
  }, "id">

  export type ContactOrderByWithAggregationInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    message?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: ContactCountOrderByAggregateInput
    _max?: ContactMaxOrderByAggregateInput
    _min?: ContactMinOrderByAggregateInput
  }

  export type ContactScalarWhereWithAggregatesInput = {
    AND?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    OR?: ContactScalarWhereWithAggregatesInput[]
    NOT?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Contact"> | string
    first_name?: StringWithAggregatesFilter<"Contact"> | string
    last_name?: StringWithAggregatesFilter<"Contact"> | string
    email?: StringWithAggregatesFilter<"Contact"> | string
    phone?: StringWithAggregatesFilter<"Contact"> | string
    message?: StringWithAggregatesFilter<"Contact"> | string
    created_at?: DateTimeWithAggregatesFilter<"Contact"> | Date | string
    created_by?: StringWithAggregatesFilter<"Contact"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Contact"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    company_id?: StringWithAggregatesFilter<"Contact"> | string
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    created_at?: DateTimeFilter<"Category"> | Date | string
    created_by?: StringFilter<"Category"> | string
    created_ip?: StringNullableFilter<"Category"> | string | null
    updated_at?: DateTimeFilter<"Category"> | Date | string
    updated_by?: StringNullableFilter<"Category"> | string | null
    updated_ip?: StringNullableFilter<"Category"> | string | null
    company_id?: StringFilter<"Category"> | string
    Projects?: ProjectListRelationFilter
    News?: NewsListRelationFilter
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    Projects?: ProjectOrderByRelationAggregateInput
    News?: NewsOrderByRelationAggregateInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    created_at?: DateTimeFilter<"Category"> | Date | string
    created_by?: StringFilter<"Category"> | string
    created_ip?: StringNullableFilter<"Category"> | string | null
    updated_at?: DateTimeFilter<"Category"> | Date | string
    updated_by?: StringNullableFilter<"Category"> | string | null
    updated_ip?: StringNullableFilter<"Category"> | string | null
    company_id?: StringFilter<"Category"> | string
    Projects?: ProjectListRelationFilter
    News?: NewsListRelationFilter
  }, "id">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Category"> | string
    name?: StringWithAggregatesFilter<"Category"> | string
    description?: StringNullableWithAggregatesFilter<"Category"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    created_by?: StringWithAggregatesFilter<"Category"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Category"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Category"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Category"> | string | null
    company_id?: StringWithAggregatesFilter<"Category"> | string
  }

  export type CareerWhereInput = {
    AND?: CareerWhereInput | CareerWhereInput[]
    OR?: CareerWhereInput[]
    NOT?: CareerWhereInput | CareerWhereInput[]
    id?: StringFilter<"Career"> | string
    first_name?: StringFilter<"Career"> | string
    last_name?: StringFilter<"Career"> | string
    email?: StringFilter<"Career"> | string
    document_url?: StringFilter<"Career"> | string
    applied_position?: StringFilter<"Career"> | string
    created_at?: DateTimeFilter<"Career"> | Date | string
    created_by?: StringFilter<"Career"> | string
    created_ip?: StringNullableFilter<"Career"> | string | null
    updated_at?: DateTimeFilter<"Career"> | Date | string
    updated_by?: StringNullableFilter<"Career"> | string | null
    updated_ip?: StringNullableFilter<"Career"> | string | null
    company_id?: StringFilter<"Career"> | string
  }

  export type CareerOrderByWithRelationInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    document_url?: SortOrder
    applied_position?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
  }

  export type CareerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CareerWhereInput | CareerWhereInput[]
    OR?: CareerWhereInput[]
    NOT?: CareerWhereInput | CareerWhereInput[]
    first_name?: StringFilter<"Career"> | string
    last_name?: StringFilter<"Career"> | string
    email?: StringFilter<"Career"> | string
    document_url?: StringFilter<"Career"> | string
    applied_position?: StringFilter<"Career"> | string
    created_at?: DateTimeFilter<"Career"> | Date | string
    created_by?: StringFilter<"Career"> | string
    created_ip?: StringNullableFilter<"Career"> | string | null
    updated_at?: DateTimeFilter<"Career"> | Date | string
    updated_by?: StringNullableFilter<"Career"> | string | null
    updated_ip?: StringNullableFilter<"Career"> | string | null
    company_id?: StringFilter<"Career"> | string
  }, "id">

  export type CareerOrderByWithAggregationInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    document_url?: SortOrder
    applied_position?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: CareerCountOrderByAggregateInput
    _max?: CareerMaxOrderByAggregateInput
    _min?: CareerMinOrderByAggregateInput
  }

  export type CareerScalarWhereWithAggregatesInput = {
    AND?: CareerScalarWhereWithAggregatesInput | CareerScalarWhereWithAggregatesInput[]
    OR?: CareerScalarWhereWithAggregatesInput[]
    NOT?: CareerScalarWhereWithAggregatesInput | CareerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Career"> | string
    first_name?: StringWithAggregatesFilter<"Career"> | string
    last_name?: StringWithAggregatesFilter<"Career"> | string
    email?: StringWithAggregatesFilter<"Career"> | string
    document_url?: StringWithAggregatesFilter<"Career"> | string
    applied_position?: StringWithAggregatesFilter<"Career"> | string
    created_at?: DateTimeWithAggregatesFilter<"Career"> | Date | string
    created_by?: StringWithAggregatesFilter<"Career"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Career"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Career"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Career"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Career"> | string | null
    company_id?: StringWithAggregatesFilter<"Career"> | string
  }

  export type NewsWhereInput = {
    AND?: NewsWhereInput | NewsWhereInput[]
    OR?: NewsWhereInput[]
    NOT?: NewsWhereInput | NewsWhereInput[]
    id?: StringFilter<"News"> | string
    title?: StringFilter<"News"> | string
    subtitle?: StringNullableFilter<"News"> | string | null
    description?: StringFilter<"News"> | string
    category_id?: StringFilter<"News"> | string
    publish_date?: DateTimeFilter<"News"> | Date | string
    tags?: JsonNullableFilter<"News">
    thumbnail_url?: StringNullableFilter<"News"> | string | null
    type?: StringFilter<"News"> | string
    created_at?: DateTimeFilter<"News"> | Date | string
    created_by?: StringFilter<"News"> | string
    created_ip?: StringNullableFilter<"News"> | string | null
    updated_at?: DateTimeFilter<"News"> | Date | string
    updated_by?: StringNullableFilter<"News"> | string | null
    updated_ip?: StringNullableFilter<"News"> | string | null
    company_id?: StringFilter<"News"> | string
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
    gallery?: NewsGalleryListRelationFilter
  }

  export type NewsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    description?: SortOrder
    category_id?: SortOrder
    publish_date?: SortOrder
    tags?: SortOrderInput | SortOrder
    thumbnail_url?: SortOrderInput | SortOrder
    type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    category?: CategoryOrderByWithRelationInput
    gallery?: NewsGalleryOrderByRelationAggregateInput
  }

  export type NewsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NewsWhereInput | NewsWhereInput[]
    OR?: NewsWhereInput[]
    NOT?: NewsWhereInput | NewsWhereInput[]
    title?: StringFilter<"News"> | string
    subtitle?: StringNullableFilter<"News"> | string | null
    description?: StringFilter<"News"> | string
    category_id?: StringFilter<"News"> | string
    publish_date?: DateTimeFilter<"News"> | Date | string
    tags?: JsonNullableFilter<"News">
    thumbnail_url?: StringNullableFilter<"News"> | string | null
    type?: StringFilter<"News"> | string
    created_at?: DateTimeFilter<"News"> | Date | string
    created_by?: StringFilter<"News"> | string
    created_ip?: StringNullableFilter<"News"> | string | null
    updated_at?: DateTimeFilter<"News"> | Date | string
    updated_by?: StringNullableFilter<"News"> | string | null
    updated_ip?: StringNullableFilter<"News"> | string | null
    company_id?: StringFilter<"News"> | string
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
    gallery?: NewsGalleryListRelationFilter
  }, "id">

  export type NewsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    description?: SortOrder
    category_id?: SortOrder
    publish_date?: SortOrder
    tags?: SortOrderInput | SortOrder
    thumbnail_url?: SortOrderInput | SortOrder
    type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: NewsCountOrderByAggregateInput
    _max?: NewsMaxOrderByAggregateInput
    _min?: NewsMinOrderByAggregateInput
  }

  export type NewsScalarWhereWithAggregatesInput = {
    AND?: NewsScalarWhereWithAggregatesInput | NewsScalarWhereWithAggregatesInput[]
    OR?: NewsScalarWhereWithAggregatesInput[]
    NOT?: NewsScalarWhereWithAggregatesInput | NewsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"News"> | string
    title?: StringWithAggregatesFilter<"News"> | string
    subtitle?: StringNullableWithAggregatesFilter<"News"> | string | null
    description?: StringWithAggregatesFilter<"News"> | string
    category_id?: StringWithAggregatesFilter<"News"> | string
    publish_date?: DateTimeWithAggregatesFilter<"News"> | Date | string
    tags?: JsonNullableWithAggregatesFilter<"News">
    thumbnail_url?: StringNullableWithAggregatesFilter<"News"> | string | null
    type?: StringWithAggregatesFilter<"News"> | string
    created_at?: DateTimeWithAggregatesFilter<"News"> | Date | string
    created_by?: StringWithAggregatesFilter<"News"> | string
    created_ip?: StringNullableWithAggregatesFilter<"News"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"News"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"News"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"News"> | string | null
    company_id?: StringWithAggregatesFilter<"News"> | string
  }

  export type NewsGalleryWhereInput = {
    AND?: NewsGalleryWhereInput | NewsGalleryWhereInput[]
    OR?: NewsGalleryWhereInput[]
    NOT?: NewsGalleryWhereInput | NewsGalleryWhereInput[]
    id?: StringFilter<"NewsGallery"> | string
    news_id?: StringFilter<"NewsGallery"> | string
    image_url?: StringFilter<"NewsGallery"> | string
    title?: StringNullableFilter<"NewsGallery"> | string | null
    subtitle?: StringNullableFilter<"NewsGallery"> | string | null
    sequence_no?: DecimalFilter<"NewsGallery"> | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFilter<"NewsGallery"> | Date | string
    created_by?: StringFilter<"NewsGallery"> | string
    created_ip?: StringNullableFilter<"NewsGallery"> | string | null
    updated_at?: DateTimeFilter<"NewsGallery"> | Date | string
    updated_by?: StringNullableFilter<"NewsGallery"> | string | null
    updated_ip?: StringNullableFilter<"NewsGallery"> | string | null
    company_id?: StringFilter<"NewsGallery"> | string
    news?: XOR<NewsRelationFilter, NewsWhereInput>
  }

  export type NewsGalleryOrderByWithRelationInput = {
    id?: SortOrder
    news_id?: SortOrder
    image_url?: SortOrder
    title?: SortOrderInput | SortOrder
    subtitle?: SortOrderInput | SortOrder
    sequence_no?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    news?: NewsOrderByWithRelationInput
  }

  export type NewsGalleryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NewsGalleryWhereInput | NewsGalleryWhereInput[]
    OR?: NewsGalleryWhereInput[]
    NOT?: NewsGalleryWhereInput | NewsGalleryWhereInput[]
    news_id?: StringFilter<"NewsGallery"> | string
    image_url?: StringFilter<"NewsGallery"> | string
    title?: StringNullableFilter<"NewsGallery"> | string | null
    subtitle?: StringNullableFilter<"NewsGallery"> | string | null
    sequence_no?: DecimalFilter<"NewsGallery"> | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFilter<"NewsGallery"> | Date | string
    created_by?: StringFilter<"NewsGallery"> | string
    created_ip?: StringNullableFilter<"NewsGallery"> | string | null
    updated_at?: DateTimeFilter<"NewsGallery"> | Date | string
    updated_by?: StringNullableFilter<"NewsGallery"> | string | null
    updated_ip?: StringNullableFilter<"NewsGallery"> | string | null
    company_id?: StringFilter<"NewsGallery"> | string
    news?: XOR<NewsRelationFilter, NewsWhereInput>
  }, "id">

  export type NewsGalleryOrderByWithAggregationInput = {
    id?: SortOrder
    news_id?: SortOrder
    image_url?: SortOrder
    title?: SortOrderInput | SortOrder
    subtitle?: SortOrderInput | SortOrder
    sequence_no?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: NewsGalleryCountOrderByAggregateInput
    _avg?: NewsGalleryAvgOrderByAggregateInput
    _max?: NewsGalleryMaxOrderByAggregateInput
    _min?: NewsGalleryMinOrderByAggregateInput
    _sum?: NewsGallerySumOrderByAggregateInput
  }

  export type NewsGalleryScalarWhereWithAggregatesInput = {
    AND?: NewsGalleryScalarWhereWithAggregatesInput | NewsGalleryScalarWhereWithAggregatesInput[]
    OR?: NewsGalleryScalarWhereWithAggregatesInput[]
    NOT?: NewsGalleryScalarWhereWithAggregatesInput | NewsGalleryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"NewsGallery"> | string
    news_id?: StringWithAggregatesFilter<"NewsGallery"> | string
    image_url?: StringWithAggregatesFilter<"NewsGallery"> | string
    title?: StringNullableWithAggregatesFilter<"NewsGallery"> | string | null
    subtitle?: StringNullableWithAggregatesFilter<"NewsGallery"> | string | null
    sequence_no?: DecimalWithAggregatesFilter<"NewsGallery"> | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeWithAggregatesFilter<"NewsGallery"> | Date | string
    created_by?: StringWithAggregatesFilter<"NewsGallery"> | string
    created_ip?: StringNullableWithAggregatesFilter<"NewsGallery"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"NewsGallery"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"NewsGallery"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"NewsGallery"> | string | null
    company_id?: StringWithAggregatesFilter<"NewsGallery"> | string
  }

  export type CompanyAdditionalInfoWhereInput = {
    AND?: CompanyAdditionalInfoWhereInput | CompanyAdditionalInfoWhereInput[]
    OR?: CompanyAdditionalInfoWhereInput[]
    NOT?: CompanyAdditionalInfoWhereInput | CompanyAdditionalInfoWhereInput[]
    id?: StringFilter<"CompanyAdditionalInfo"> | string
    company_id?: StringFilter<"CompanyAdditionalInfo"> | string
    short_description?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    facebook_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    twitter_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    instagram_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    linkedin_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    youtube_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    whatsapp_number?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    google_map_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    vision?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    mission?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    created_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    created_by?: StringFilter<"CompanyAdditionalInfo"> | string
    created_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    updated_by?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type CompanyAdditionalInfoOrderByWithRelationInput = {
    id?: SortOrder
    company_id?: SortOrder
    short_description?: SortOrderInput | SortOrder
    facebook_link?: SortOrderInput | SortOrder
    twitter_link?: SortOrderInput | SortOrder
    instagram_link?: SortOrderInput | SortOrder
    linkedin_link?: SortOrderInput | SortOrder
    youtube_link?: SortOrderInput | SortOrder
    whatsapp_number?: SortOrderInput | SortOrder
    google_map_link?: SortOrderInput | SortOrder
    vision?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company?: CompanyOrderByWithRelationInput
  }

  export type CompanyAdditionalInfoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CompanyAdditionalInfoWhereInput | CompanyAdditionalInfoWhereInput[]
    OR?: CompanyAdditionalInfoWhereInput[]
    NOT?: CompanyAdditionalInfoWhereInput | CompanyAdditionalInfoWhereInput[]
    company_id?: StringFilter<"CompanyAdditionalInfo"> | string
    short_description?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    facebook_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    twitter_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    instagram_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    linkedin_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    youtube_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    whatsapp_number?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    google_map_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    vision?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    mission?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    created_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    created_by?: StringFilter<"CompanyAdditionalInfo"> | string
    created_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    updated_by?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id">

  export type CompanyAdditionalInfoOrderByWithAggregationInput = {
    id?: SortOrder
    company_id?: SortOrder
    short_description?: SortOrderInput | SortOrder
    facebook_link?: SortOrderInput | SortOrder
    twitter_link?: SortOrderInput | SortOrder
    instagram_link?: SortOrderInput | SortOrder
    linkedin_link?: SortOrderInput | SortOrder
    youtube_link?: SortOrderInput | SortOrder
    whatsapp_number?: SortOrderInput | SortOrder
    google_map_link?: SortOrderInput | SortOrder
    vision?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    _count?: CompanyAdditionalInfoCountOrderByAggregateInput
    _max?: CompanyAdditionalInfoMaxOrderByAggregateInput
    _min?: CompanyAdditionalInfoMinOrderByAggregateInput
  }

  export type CompanyAdditionalInfoScalarWhereWithAggregatesInput = {
    AND?: CompanyAdditionalInfoScalarWhereWithAggregatesInput | CompanyAdditionalInfoScalarWhereWithAggregatesInput[]
    OR?: CompanyAdditionalInfoScalarWhereWithAggregatesInput[]
    NOT?: CompanyAdditionalInfoScalarWhereWithAggregatesInput | CompanyAdditionalInfoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CompanyAdditionalInfo"> | string
    company_id?: StringWithAggregatesFilter<"CompanyAdditionalInfo"> | string
    short_description?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    facebook_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    twitter_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    instagram_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    linkedin_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    youtube_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    whatsapp_number?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    google_map_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    vision?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    mission?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"CompanyAdditionalInfo"> | Date | string
    created_by?: StringWithAggregatesFilter<"CompanyAdditionalInfo"> | string
    created_ip?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"CompanyAdditionalInfo"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
  }

  export type ApplicationLogCreateInput = {
    id?: string
    level: string
    message: string
    meta: JsonNullValueInput | InputJsonValue
    timestamp: Date | string
  }

  export type ApplicationLogUncheckedCreateInput = {
    id?: string
    level: string
    message: string
    meta: JsonNullValueInput | InputJsonValue
    timestamp: Date | string
  }

  export type ApplicationLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationLogCreateManyInput = {
    id?: string
    level: string
    message: string
    meta: JsonNullValueInput | InputJsonValue
    timestamp: Date | string
  }

  export type ApplicationLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogCreateInput = {
    id?: string
    table_name: string
    record_id: string
    action: string
    previous_data: JsonNullValueInput | InputJsonValue
    new_data: JsonNullValueInput | InputJsonValue
    changed_by: string
    timestamp: Date | string
  }

  export type AuditLogUncheckedCreateInput = {
    id?: string
    table_name: string
    record_id: string
    action: string
    previous_data: JsonNullValueInput | InputJsonValue
    new_data: JsonNullValueInput | InputJsonValue
    changed_by: string
    timestamp: Date | string
  }

  export type AuditLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    previous_data?: JsonNullValueInput | InputJsonValue
    new_data?: JsonNullValueInput | InputJsonValue
    changed_by?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    previous_data?: JsonNullValueInput | InputJsonValue
    new_data?: JsonNullValueInput | InputJsonValue
    changed_by?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogCreateManyInput = {
    id?: string
    table_name: string
    record_id: string
    action: string
    previous_data: JsonNullValueInput | InputJsonValue
    new_data: JsonNullValueInput | InputJsonValue
    changed_by: string
    timestamp: Date | string
  }

  export type AuditLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    previous_data?: JsonNullValueInput | InputJsonValue
    new_data?: JsonNullValueInput | InputJsonValue
    changed_by?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    previous_data?: JsonNullValueInput | InputJsonValue
    new_data?: JsonNullValueInput | InputJsonValue
    changed_by?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyCreateInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
    CompanyAdditionalInfo?: CompanyAdditionalInfoCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
    CompanyAdditionalInfo?: CompanyAdditionalInfoUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    CompanyAdditionalInfo?: CompanyAdditionalInfoUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    CompanyAdditionalInfo?: CompanyAdditionalInfoUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateManyInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
  }

  export type CompanyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CompanyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserCreateInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupCreateNestedManyWithoutUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupUncheckedCreateNestedManyWithoutUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUpdateManyWithoutUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUncheckedUpdateManyWithoutUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type RefreshTokenCreateInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
    user: UserCreateNestedOneWithoutRefreshTokenInput
  }

  export type RefreshTokenUncheckedCreateInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type RefreshTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutRefreshTokenNestedInput
  }

  export type RefreshTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RefreshTokenCreateManyInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type RefreshTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RefreshTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SecurityRuleCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionCreateNestedManyWithoutSecurity_ruleInput
    SecurityGroupRules?: SecurityGroupRuleCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUncheckedCreateNestedManyWithoutSecurity_ruleInput
    SecurityGroupRules?: SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUpdateManyWithoutSecurity_ruleNestedInput
    SecurityGroupRules?: SecurityGroupRuleUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type SecurityRuleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUncheckedUpdateManyWithoutSecurity_ruleNestedInput
    SecurityGroupRules?: SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type SecurityRuleCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleWiseMenuPermissionCreateInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    security_rule: SecurityRuleCreateNestedOneWithoutSecurityRuleWiseMenuPermissionsInput
  }

  export type SecurityRuleWiseMenuPermissionUncheckedCreateInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleWiseMenuPermissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    security_rule?: SecurityRuleUpdateOneRequiredWithoutSecurityRuleWiseMenuPermissionsNestedInput
  }

  export type SecurityRuleWiseMenuPermissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleWiseMenuPermissionCreateManyInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleWiseMenuPermissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleWiseMenuPermissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleCreateNestedManyWithoutSecurity_groupInput
    UserGroups?: UserGroupCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_groupInput
    UserGroups?: UserGroupUncheckedCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUpdateManyWithoutSecurity_groupNestedInput
    UserGroups?: UserGroupUpdateManyWithoutSecurity_groupNestedInput
  }

  export type SecurityGroupUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_groupNestedInput
    UserGroups?: UserGroupUncheckedUpdateManyWithoutSecurity_groupNestedInput
  }

  export type SecurityGroupCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleCreateInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    security_group: SecurityGroupCreateNestedOneWithoutSecurityGroupRulesInput
    security_rule: SecurityRuleCreateNestedOneWithoutSecurityGroupRulesInput
  }

  export type SecurityGroupRuleUncheckedCreateInput = {
    id?: string
    group_id: string
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    security_group?: SecurityGroupUpdateOneRequiredWithoutSecurityGroupRulesNestedInput
    security_rule?: SecurityRuleUpdateOneRequiredWithoutSecurityGroupRulesNestedInput
  }

  export type SecurityGroupRuleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleCreateManyInput = {
    id?: string
    group_id: string
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupCreateInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    user: UserCreateNestedOneWithoutUserGroupsInput
    security_group: SecurityGroupCreateNestedOneWithoutUserGroupsInput
  }

  export type UserGroupUncheckedCreateInput = {
    id?: string
    user_id: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserGroupUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutUserGroupsNestedInput
    security_group?: SecurityGroupUpdateOneRequiredWithoutUserGroupsNestedInput
  }

  export type UserGroupUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupCreateManyInput = {
    id?: string
    user_id: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserGroupUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type MenuCreateInput = {
    id?: number
    title: string
    url?: string | null
    icon?: string | null
    icon_library?: string | null
    parent_id: number
    sequence_no: Decimal | DecimalJsLike | number | string
    is_active: boolean
    can_view?: boolean | null
    can_create?: boolean | null
    can_update?: boolean | null
    can_delete?: boolean | null
    can_report?: boolean | null
  }

  export type MenuUncheckedCreateInput = {
    id?: number
    title: string
    url?: string | null
    icon?: string | null
    icon_library?: string | null
    parent_id: number
    sequence_no: Decimal | DecimalJsLike | number | string
    is_active: boolean
    can_view?: boolean | null
    can_create?: boolean | null
    can_update?: boolean | null
    can_delete?: boolean | null
    can_report?: boolean | null
  }

  export type MenuUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    icon_library?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: IntFieldUpdateOperationsInput | number
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    can_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_create?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_delete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type MenuUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    icon_library?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: IntFieldUpdateOperationsInput | number
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    can_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_create?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_delete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type MenuCreateManyInput = {
    id?: number
    title: string
    url?: string | null
    icon?: string | null
    icon_library?: string | null
    parent_id: number
    sequence_no: Decimal | DecimalJsLike | number | string
    is_active: boolean
    can_view?: boolean | null
    can_create?: boolean | null
    can_update?: boolean | null
    can_delete?: boolean | null
    can_report?: boolean | null
  }

  export type MenuUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    icon_library?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: IntFieldUpdateOperationsInput | number
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    can_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_create?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_delete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type MenuUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    icon_library?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: IntFieldUpdateOperationsInput | number
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    can_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_create?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_delete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProjectCreateInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProjectsInput
    gallery?: ProjectGalleryCreateNestedManyWithoutProjectInput
    key_features?: ProjectKeyFeatureCreateNestedManyWithoutProjectInput
    services?: ProjectServiceCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    category_id: string
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    gallery?: ProjectGalleryUncheckedCreateNestedManyWithoutProjectInput
    key_features?: ProjectKeyFeatureUncheckedCreateNestedManyWithoutProjectInput
    services?: ProjectServiceUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProjectsNestedInput
    gallery?: ProjectGalleryUpdateManyWithoutProjectNestedInput
    key_features?: ProjectKeyFeatureUpdateManyWithoutProjectNestedInput
    services?: ProjectServiceUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_id?: StringFieldUpdateOperationsInput | string
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    gallery?: ProjectGalleryUncheckedUpdateManyWithoutProjectNestedInput
    key_features?: ProjectKeyFeatureUncheckedUpdateManyWithoutProjectNestedInput
    services?: ProjectServiceUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectCreateManyInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    category_id: string
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_id?: StringFieldUpdateOperationsInput | string
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectGalleryCreateInput = {
    id?: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    project: ProjectCreateNestedOneWithoutGalleryInput
  }

  export type ProjectGalleryUncheckedCreateInput = {
    id?: string
    project_id: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectGalleryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    project?: ProjectUpdateOneRequiredWithoutGalleryNestedInput
  }

  export type ProjectGalleryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectGalleryCreateManyInput = {
    id?: string
    project_id: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectGalleryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectGalleryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectKeyFeatureCreateInput = {
    id?: string
    feature: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    project: ProjectCreateNestedOneWithoutKey_featuresInput
  }

  export type ProjectKeyFeatureUncheckedCreateInput = {
    id?: string
    project_id: string
    feature: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectKeyFeatureUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    project?: ProjectUpdateOneRequiredWithoutKey_featuresNestedInput
  }

  export type ProjectKeyFeatureUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectKeyFeatureCreateManyInput = {
    id?: string
    project_id: string
    feature: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectKeyFeatureUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectKeyFeatureUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectServiceCreateInput = {
    id?: string
    service: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    project: ProjectCreateNestedOneWithoutServicesInput
  }

  export type ProjectServiceUncheckedCreateInput = {
    id?: string
    project_id: string
    service: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectServiceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    service?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    project?: ProjectUpdateOneRequiredWithoutServicesNestedInput
  }

  export type ProjectServiceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    service?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectServiceCreateManyInput = {
    id?: string
    project_id: string
    service: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectServiceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    service?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectServiceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    service?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ContactCreateInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone: string
    message: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ContactUncheckedCreateInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone: string
    message: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ContactUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ContactUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ContactCreateManyInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone: string
    message: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ContactUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ContactUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CategoryCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    Projects?: ProjectCreateNestedManyWithoutCategoryInput
    News?: NewsCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    Projects?: ProjectUncheckedCreateNestedManyWithoutCategoryInput
    News?: NewsUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    Projects?: ProjectUpdateManyWithoutCategoryNestedInput
    News?: NewsUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    Projects?: ProjectUncheckedUpdateManyWithoutCategoryNestedInput
    News?: NewsUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type CategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CareerCreateInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    document_url: string
    applied_position: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type CareerUncheckedCreateInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    document_url: string
    applied_position: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type CareerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    document_url?: StringFieldUpdateOperationsInput | string
    applied_position?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CareerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    document_url?: StringFieldUpdateOperationsInput | string
    applied_position?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CareerCreateManyInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    document_url: string
    applied_position: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type CareerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    document_url?: StringFieldUpdateOperationsInput | string
    applied_position?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CareerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    document_url?: StringFieldUpdateOperationsInput | string
    applied_position?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type NewsCreateInput = {
    id?: string
    title: string
    subtitle?: string | null
    description: string
    publish_date: Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: string | null
    type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutNewsInput
    gallery?: NewsGalleryCreateNestedManyWithoutNewsInput
  }

  export type NewsUncheckedCreateInput = {
    id?: string
    title: string
    subtitle?: string | null
    description: string
    category_id: string
    publish_date: Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: string | null
    type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    gallery?: NewsGalleryUncheckedCreateNestedManyWithoutNewsInput
  }

  export type NewsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    publish_date?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutNewsNestedInput
    gallery?: NewsGalleryUpdateManyWithoutNewsNestedInput
  }

  export type NewsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category_id?: StringFieldUpdateOperationsInput | string
    publish_date?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    gallery?: NewsGalleryUncheckedUpdateManyWithoutNewsNestedInput
  }

  export type NewsCreateManyInput = {
    id?: string
    title: string
    subtitle?: string | null
    description: string
    category_id: string
    publish_date: Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: string | null
    type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type NewsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    publish_date?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type NewsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category_id?: StringFieldUpdateOperationsInput | string
    publish_date?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type NewsGalleryCreateInput = {
    id?: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: Decimal | DecimalJsLike | number | string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    news: NewsCreateNestedOneWithoutGalleryInput
  }

  export type NewsGalleryUncheckedCreateInput = {
    id?: string
    news_id: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: Decimal | DecimalJsLike | number | string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type NewsGalleryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    news?: NewsUpdateOneRequiredWithoutGalleryNestedInput
  }

  export type NewsGalleryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    news_id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type NewsGalleryCreateManyInput = {
    id?: string
    news_id: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: Decimal | DecimalJsLike | number | string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type NewsGalleryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type NewsGalleryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    news_id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CompanyAdditionalInfoCreateInput = {
    id?: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company: CompanyCreateNestedOneWithoutCompanyAdditionalInfoInput
  }

  export type CompanyAdditionalInfoUncheckedCreateInput = {
    id?: string
    company_id: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyAdditionalInfoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutCompanyAdditionalInfoNestedInput
  }

  export type CompanyAdditionalInfoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyAdditionalInfoCreateManyInput = {
    id?: string
    company_id: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyAdditionalInfoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyAdditionalInfoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ApplicationLogCountOrderByAggregateInput = {
    id?: SortOrder
    level?: SortOrder
    message?: SortOrder
    meta?: SortOrder
    timestamp?: SortOrder
  }

  export type ApplicationLogMaxOrderByAggregateInput = {
    id?: SortOrder
    level?: SortOrder
    message?: SortOrder
    timestamp?: SortOrder
  }

  export type ApplicationLogMinOrderByAggregateInput = {
    id?: SortOrder
    level?: SortOrder
    message?: SortOrder
    timestamp?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type AuditLogCountOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    action?: SortOrder
    previous_data?: SortOrder
    new_data?: SortOrder
    changed_by?: SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogMaxOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    action?: SortOrder
    changed_by?: SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogMinOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    action?: SortOrder
    changed_by?: SortOrder
    timestamp?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type CompanyAdditionalInfoListRelationFilter = {
    every?: CompanyAdditionalInfoWhereInput
    some?: CompanyAdditionalInfoWhereInput
    none?: CompanyAdditionalInfoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CompanyAdditionalInfoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CompanyCountOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
    company_short_name?: SortOrder
    company_code?: SortOrder
    registration_number?: SortOrder
    tax_id?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    postal_code?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    website?: SortOrder
    industry?: SortOrder
    number_of_employees?: SortOrder
    annual_revenue?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
  }

  export type CompanyAvgOrderByAggregateInput = {
    number_of_employees?: SortOrder
    annual_revenue?: SortOrder
  }

  export type CompanyMaxOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
    company_short_name?: SortOrder
    company_code?: SortOrder
    registration_number?: SortOrder
    tax_id?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    postal_code?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    website?: SortOrder
    industry?: SortOrder
    number_of_employees?: SortOrder
    annual_revenue?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
  }

  export type CompanyMinOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
    company_short_name?: SortOrder
    company_code?: SortOrder
    registration_number?: SortOrder
    tax_id?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    postal_code?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    website?: SortOrder
    industry?: SortOrder
    number_of_employees?: SortOrder
    annual_revenue?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
  }

  export type CompanySumOrderByAggregateInput = {
    number_of_employees?: SortOrder
    annual_revenue?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type UserGroupListRelationFilter = {
    every?: UserGroupWhereInput
    some?: UserGroupWhereInput
    none?: UserGroupWhereInput
  }

  export type RefreshTokenListRelationFilter = {
    every?: RefreshTokenWhereInput
    some?: RefreshTokenWhereInput
    none?: RefreshTokenWhereInput
  }

  export type UserGroupOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RefreshTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    is_active?: SortOrder
    is_admin?: SortOrder
    is_password_reset?: SortOrder
    user_type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    is_active?: SortOrder
    is_admin?: SortOrder
    is_password_reset?: SortOrder
    user_type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    is_active?: SortOrder
    is_admin?: SortOrder
    is_password_reset?: SortOrder
    user_type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type RefreshTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
  }

  export type RefreshTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
  }

  export type RefreshTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
  }

  export type SecurityRuleWiseMenuPermissionListRelationFilter = {
    every?: SecurityRuleWiseMenuPermissionWhereInput
    some?: SecurityRuleWiseMenuPermissionWhereInput
    none?: SecurityRuleWiseMenuPermissionWhereInput
  }

  export type SecurityGroupRuleListRelationFilter = {
    every?: SecurityGroupRuleWhereInput
    some?: SecurityGroupRuleWhereInput
    none?: SecurityGroupRuleWhereInput
  }

  export type SecurityRuleWiseMenuPermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SecurityGroupRuleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SecurityRuleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityRuleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityRuleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type SecurityRuleRelationFilter = {
    is?: SecurityRuleWhereInput
    isNot?: SecurityRuleWhereInput
  }

  export type SecurityRuleWiseMenuPermissionCountOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityRuleWiseMenuPermissionAvgOrderByAggregateInput = {
    menu_id?: SortOrder
  }

  export type SecurityRuleWiseMenuPermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityRuleWiseMenuPermissionMinOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityRuleWiseMenuPermissionSumOrderByAggregateInput = {
    menu_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type SecurityGroupCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityGroupMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityGroupMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityGroupRelationFilter = {
    is?: SecurityGroupWhereInput
    isNot?: SecurityGroupWhereInput
  }

  export type SecurityGroupRuleCountOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityGroupRuleMaxOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityGroupRuleMinOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserGroupCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserGroupMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserGroupMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type MenuCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    url?: SortOrder
    icon?: SortOrder
    icon_library?: SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
  }

  export type MenuAvgOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
  }

  export type MenuMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    url?: SortOrder
    icon?: SortOrder
    icon_library?: SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
  }

  export type MenuMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    url?: SortOrder
    icon?: SortOrder
    icon_library?: SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
  }

  export type MenuSumOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type CategoryRelationFilter = {
    is?: CategoryWhereInput
    isNot?: CategoryWhereInput
  }

  export type ProjectGalleryListRelationFilter = {
    every?: ProjectGalleryWhereInput
    some?: ProjectGalleryWhereInput
    none?: ProjectGalleryWhereInput
  }

  export type ProjectKeyFeatureListRelationFilter = {
    every?: ProjectKeyFeatureWhereInput
    some?: ProjectKeyFeatureWhereInput
    none?: ProjectKeyFeatureWhereInput
  }

  export type ProjectServiceListRelationFilter = {
    every?: ProjectServiceWhereInput
    some?: ProjectServiceWhereInput
    none?: ProjectServiceWhereInput
  }

  export type ProjectGalleryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectKeyFeatureOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectServiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    thumbnail_url?: SortOrder
    city?: SortOrder
    country?: SortOrder
    address?: SortOrder
    client_name?: SortOrder
    category_id?: SortOrder
    area?: SortOrder
    is_featured?: SortOrder
    tags?: SortOrder
    budget?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectAvgOrderByAggregateInput = {
    area?: SortOrder
    budget?: SortOrder
  }

  export type ProjectMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    thumbnail_url?: SortOrder
    city?: SortOrder
    country?: SortOrder
    address?: SortOrder
    client_name?: SortOrder
    category_id?: SortOrder
    area?: SortOrder
    is_featured?: SortOrder
    budget?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    thumbnail_url?: SortOrder
    city?: SortOrder
    country?: SortOrder
    address?: SortOrder
    client_name?: SortOrder
    category_id?: SortOrder
    area?: SortOrder
    is_featured?: SortOrder
    budget?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectSumOrderByAggregateInput = {
    area?: SortOrder
    budget?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type ProjectRelationFilter = {
    is?: ProjectWhereInput
    isNot?: ProjectWhereInput
  }

  export type ProjectGalleryCountOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    image_url?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    sequence_no?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectGalleryAvgOrderByAggregateInput = {
    sequence_no?: SortOrder
  }

  export type ProjectGalleryMaxOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    image_url?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    sequence_no?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectGalleryMinOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    image_url?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    sequence_no?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectGallerySumOrderByAggregateInput = {
    sequence_no?: SortOrder
  }

  export type ProjectKeyFeatureCountOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    feature?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectKeyFeatureMaxOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    feature?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectKeyFeatureMinOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    feature?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectServiceCountOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    service?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectServiceMaxOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    service?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectServiceMinOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    service?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ContactCountOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    message?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ContactMaxOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    message?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ContactMinOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    message?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ProjectListRelationFilter = {
    every?: ProjectWhereInput
    some?: ProjectWhereInput
    none?: ProjectWhereInput
  }

  export type NewsListRelationFilter = {
    every?: NewsWhereInput
    some?: NewsWhereInput
    none?: NewsWhereInput
  }

  export type ProjectOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NewsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CareerCountOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    document_url?: SortOrder
    applied_position?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CareerMaxOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    document_url?: SortOrder
    applied_position?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CareerMinOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    document_url?: SortOrder
    applied_position?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type NewsGalleryListRelationFilter = {
    every?: NewsGalleryWhereInput
    some?: NewsGalleryWhereInput
    none?: NewsGalleryWhereInput
  }

  export type NewsGalleryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NewsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    category_id?: SortOrder
    publish_date?: SortOrder
    tags?: SortOrder
    thumbnail_url?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type NewsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    category_id?: SortOrder
    publish_date?: SortOrder
    thumbnail_url?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type NewsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    category_id?: SortOrder
    publish_date?: SortOrder
    thumbnail_url?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type NewsRelationFilter = {
    is?: NewsWhereInput
    isNot?: NewsWhereInput
  }

  export type NewsGalleryCountOrderByAggregateInput = {
    id?: SortOrder
    news_id?: SortOrder
    image_url?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    sequence_no?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type NewsGalleryAvgOrderByAggregateInput = {
    sequence_no?: SortOrder
  }

  export type NewsGalleryMaxOrderByAggregateInput = {
    id?: SortOrder
    news_id?: SortOrder
    image_url?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    sequence_no?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type NewsGalleryMinOrderByAggregateInput = {
    id?: SortOrder
    news_id?: SortOrder
    image_url?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    sequence_no?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type NewsGallerySumOrderByAggregateInput = {
    sequence_no?: SortOrder
  }

  export type CompanyRelationFilter = {
    is?: CompanyWhereInput
    isNot?: CompanyWhereInput
  }

  export type CompanyAdditionalInfoCountOrderByAggregateInput = {
    id?: SortOrder
    company_id?: SortOrder
    short_description?: SortOrder
    facebook_link?: SortOrder
    twitter_link?: SortOrder
    instagram_link?: SortOrder
    linkedin_link?: SortOrder
    youtube_link?: SortOrder
    whatsapp_number?: SortOrder
    google_map_link?: SortOrder
    vision?: SortOrder
    mission?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CompanyAdditionalInfoMaxOrderByAggregateInput = {
    id?: SortOrder
    company_id?: SortOrder
    short_description?: SortOrder
    facebook_link?: SortOrder
    twitter_link?: SortOrder
    instagram_link?: SortOrder
    linkedin_link?: SortOrder
    youtube_link?: SortOrder
    whatsapp_number?: SortOrder
    google_map_link?: SortOrder
    vision?: SortOrder
    mission?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CompanyAdditionalInfoMinOrderByAggregateInput = {
    id?: SortOrder
    company_id?: SortOrder
    short_description?: SortOrder
    facebook_link?: SortOrder
    twitter_link?: SortOrder
    instagram_link?: SortOrder
    linkedin_link?: SortOrder
    youtube_link?: SortOrder
    whatsapp_number?: SortOrder
    google_map_link?: SortOrder
    vision?: SortOrder
    mission?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type CompanyAdditionalInfoCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput> | CompanyAdditionalInfoCreateWithoutCompanyInput[] | CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput | CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput[]
    createMany?: CompanyAdditionalInfoCreateManyCompanyInputEnvelope
    connect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
  }

  export type CompanyAdditionalInfoUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput> | CompanyAdditionalInfoCreateWithoutCompanyInput[] | CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput | CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput[]
    createMany?: CompanyAdditionalInfoCreateManyCompanyInputEnvelope
    connect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type CompanyAdditionalInfoUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput> | CompanyAdditionalInfoCreateWithoutCompanyInput[] | CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput | CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput[]
    upsert?: CompanyAdditionalInfoUpsertWithWhereUniqueWithoutCompanyInput | CompanyAdditionalInfoUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CompanyAdditionalInfoCreateManyCompanyInputEnvelope
    set?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    disconnect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    delete?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    connect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    update?: CompanyAdditionalInfoUpdateWithWhereUniqueWithoutCompanyInput | CompanyAdditionalInfoUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CompanyAdditionalInfoUpdateManyWithWhereWithoutCompanyInput | CompanyAdditionalInfoUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CompanyAdditionalInfoScalarWhereInput | CompanyAdditionalInfoScalarWhereInput[]
  }

  export type CompanyAdditionalInfoUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput> | CompanyAdditionalInfoCreateWithoutCompanyInput[] | CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput | CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput[]
    upsert?: CompanyAdditionalInfoUpsertWithWhereUniqueWithoutCompanyInput | CompanyAdditionalInfoUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CompanyAdditionalInfoCreateManyCompanyInputEnvelope
    set?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    disconnect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    delete?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    connect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    update?: CompanyAdditionalInfoUpdateWithWhereUniqueWithoutCompanyInput | CompanyAdditionalInfoUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CompanyAdditionalInfoUpdateManyWithWhereWithoutCompanyInput | CompanyAdditionalInfoUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CompanyAdditionalInfoScalarWhereInput | CompanyAdditionalInfoScalarWhereInput[]
  }

  export type UserGroupCreateNestedManyWithoutUserInput = {
    create?: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput> | UserGroupCreateWithoutUserInput[] | UserGroupUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutUserInput | UserGroupCreateOrConnectWithoutUserInput[]
    createMany?: UserGroupCreateManyUserInputEnvelope
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
  }

  export type RefreshTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type UserGroupUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput> | UserGroupCreateWithoutUserInput[] | UserGroupUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutUserInput | UserGroupCreateOrConnectWithoutUserInput[]
    createMany?: UserGroupCreateManyUserInputEnvelope
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type UserGroupUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput> | UserGroupCreateWithoutUserInput[] | UserGroupUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutUserInput | UserGroupCreateOrConnectWithoutUserInput[]
    upsert?: UserGroupUpsertWithWhereUniqueWithoutUserInput | UserGroupUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserGroupCreateManyUserInputEnvelope
    set?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    disconnect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    delete?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    update?: UserGroupUpdateWithWhereUniqueWithoutUserInput | UserGroupUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserGroupUpdateManyWithWhereWithoutUserInput | UserGroupUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
  }

  export type RefreshTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type UserGroupUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput> | UserGroupCreateWithoutUserInput[] | UserGroupUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutUserInput | UserGroupCreateOrConnectWithoutUserInput[]
    upsert?: UserGroupUpsertWithWhereUniqueWithoutUserInput | UserGroupUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserGroupCreateManyUserInputEnvelope
    set?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    disconnect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    delete?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    update?: UserGroupUpdateWithWhereUniqueWithoutUserInput | UserGroupUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserGroupUpdateManyWithWhereWithoutUserInput | UserGroupUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutRefreshTokenInput = {
    create?: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokenInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutRefreshTokenNestedInput = {
    create?: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokenInput
    upsert?: UserUpsertWithoutRefreshTokenInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRefreshTokenInput, UserUpdateWithoutRefreshTokenInput>, UserUncheckedUpdateWithoutRefreshTokenInput>
  }

  export type SecurityRuleWiseMenuPermissionCreateNestedManyWithoutSecurity_ruleInput = {
    create?: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput> | SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput[] | SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput[]
    createMany?: SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInputEnvelope
    connect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
  }

  export type SecurityGroupRuleCreateNestedManyWithoutSecurity_ruleInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput> | SecurityGroupRuleCreateWithoutSecurity_ruleInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_ruleInputEnvelope
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
  }

  export type SecurityRuleWiseMenuPermissionUncheckedCreateNestedManyWithoutSecurity_ruleInput = {
    create?: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput> | SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput[] | SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput[]
    createMany?: SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInputEnvelope
    connect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
  }

  export type SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_ruleInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput> | SecurityGroupRuleCreateWithoutSecurity_ruleInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_ruleInputEnvelope
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
  }

  export type SecurityRuleWiseMenuPermissionUpdateManyWithoutSecurity_ruleNestedInput = {
    create?: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput> | SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput[] | SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput[]
    upsert?: SecurityRuleWiseMenuPermissionUpsertWithWhereUniqueWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpsertWithWhereUniqueWithoutSecurity_ruleInput[]
    createMany?: SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInputEnvelope
    set?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    disconnect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    delete?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    connect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    update?: SecurityRuleWiseMenuPermissionUpdateWithWhereUniqueWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpdateWithWhereUniqueWithoutSecurity_ruleInput[]
    updateMany?: SecurityRuleWiseMenuPermissionUpdateManyWithWhereWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpdateManyWithWhereWithoutSecurity_ruleInput[]
    deleteMany?: SecurityRuleWiseMenuPermissionScalarWhereInput | SecurityRuleWiseMenuPermissionScalarWhereInput[]
  }

  export type SecurityGroupRuleUpdateManyWithoutSecurity_ruleNestedInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput> | SecurityGroupRuleCreateWithoutSecurity_ruleInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput[]
    upsert?: SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_ruleInput | SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_ruleInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_ruleInputEnvelope
    set?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    disconnect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    delete?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    update?: SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_ruleInput | SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_ruleInput[]
    updateMany?: SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_ruleInput | SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_ruleInput[]
    deleteMany?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
  }

  export type SecurityRuleWiseMenuPermissionUncheckedUpdateManyWithoutSecurity_ruleNestedInput = {
    create?: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput> | SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput[] | SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput[]
    upsert?: SecurityRuleWiseMenuPermissionUpsertWithWhereUniqueWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpsertWithWhereUniqueWithoutSecurity_ruleInput[]
    createMany?: SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInputEnvelope
    set?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    disconnect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    delete?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    connect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    update?: SecurityRuleWiseMenuPermissionUpdateWithWhereUniqueWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpdateWithWhereUniqueWithoutSecurity_ruleInput[]
    updateMany?: SecurityRuleWiseMenuPermissionUpdateManyWithWhereWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpdateManyWithWhereWithoutSecurity_ruleInput[]
    deleteMany?: SecurityRuleWiseMenuPermissionScalarWhereInput | SecurityRuleWiseMenuPermissionScalarWhereInput[]
  }

  export type SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_ruleNestedInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput> | SecurityGroupRuleCreateWithoutSecurity_ruleInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput[]
    upsert?: SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_ruleInput | SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_ruleInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_ruleInputEnvelope
    set?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    disconnect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    delete?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    update?: SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_ruleInput | SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_ruleInput[]
    updateMany?: SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_ruleInput | SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_ruleInput[]
    deleteMany?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
  }

  export type SecurityRuleCreateNestedOneWithoutSecurityRuleWiseMenuPermissionsInput = {
    create?: XOR<SecurityRuleCreateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedCreateWithoutSecurityRuleWiseMenuPermissionsInput>
    connectOrCreate?: SecurityRuleCreateOrConnectWithoutSecurityRuleWiseMenuPermissionsInput
    connect?: SecurityRuleWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type SecurityRuleUpdateOneRequiredWithoutSecurityRuleWiseMenuPermissionsNestedInput = {
    create?: XOR<SecurityRuleCreateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedCreateWithoutSecurityRuleWiseMenuPermissionsInput>
    connectOrCreate?: SecurityRuleCreateOrConnectWithoutSecurityRuleWiseMenuPermissionsInput
    upsert?: SecurityRuleUpsertWithoutSecurityRuleWiseMenuPermissionsInput
    connect?: SecurityRuleWhereUniqueInput
    update?: XOR<XOR<SecurityRuleUpdateToOneWithWhereWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUpdateWithoutSecurityRuleWiseMenuPermissionsInput>, SecurityRuleUncheckedUpdateWithoutSecurityRuleWiseMenuPermissionsInput>
  }

  export type SecurityGroupRuleCreateNestedManyWithoutSecurity_groupInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput> | SecurityGroupRuleCreateWithoutSecurity_groupInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_groupInputEnvelope
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
  }

  export type UserGroupCreateNestedManyWithoutSecurity_groupInput = {
    create?: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput> | UserGroupCreateWithoutSecurity_groupInput[] | UserGroupUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutSecurity_groupInput | UserGroupCreateOrConnectWithoutSecurity_groupInput[]
    createMany?: UserGroupCreateManySecurity_groupInputEnvelope
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
  }

  export type SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_groupInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput> | SecurityGroupRuleCreateWithoutSecurity_groupInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_groupInputEnvelope
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
  }

  export type UserGroupUncheckedCreateNestedManyWithoutSecurity_groupInput = {
    create?: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput> | UserGroupCreateWithoutSecurity_groupInput[] | UserGroupUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutSecurity_groupInput | UserGroupCreateOrConnectWithoutSecurity_groupInput[]
    createMany?: UserGroupCreateManySecurity_groupInputEnvelope
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
  }

  export type SecurityGroupRuleUpdateManyWithoutSecurity_groupNestedInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput> | SecurityGroupRuleCreateWithoutSecurity_groupInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput[]
    upsert?: SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_groupInput | SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_groupInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_groupInputEnvelope
    set?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    disconnect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    delete?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    update?: SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_groupInput | SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_groupInput[]
    updateMany?: SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_groupInput | SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_groupInput[]
    deleteMany?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
  }

  export type UserGroupUpdateManyWithoutSecurity_groupNestedInput = {
    create?: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput> | UserGroupCreateWithoutSecurity_groupInput[] | UserGroupUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutSecurity_groupInput | UserGroupCreateOrConnectWithoutSecurity_groupInput[]
    upsert?: UserGroupUpsertWithWhereUniqueWithoutSecurity_groupInput | UserGroupUpsertWithWhereUniqueWithoutSecurity_groupInput[]
    createMany?: UserGroupCreateManySecurity_groupInputEnvelope
    set?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    disconnect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    delete?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    update?: UserGroupUpdateWithWhereUniqueWithoutSecurity_groupInput | UserGroupUpdateWithWhereUniqueWithoutSecurity_groupInput[]
    updateMany?: UserGroupUpdateManyWithWhereWithoutSecurity_groupInput | UserGroupUpdateManyWithWhereWithoutSecurity_groupInput[]
    deleteMany?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
  }

  export type SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_groupNestedInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput> | SecurityGroupRuleCreateWithoutSecurity_groupInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput[]
    upsert?: SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_groupInput | SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_groupInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_groupInputEnvelope
    set?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    disconnect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    delete?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    update?: SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_groupInput | SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_groupInput[]
    updateMany?: SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_groupInput | SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_groupInput[]
    deleteMany?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
  }

  export type UserGroupUncheckedUpdateManyWithoutSecurity_groupNestedInput = {
    create?: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput> | UserGroupCreateWithoutSecurity_groupInput[] | UserGroupUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutSecurity_groupInput | UserGroupCreateOrConnectWithoutSecurity_groupInput[]
    upsert?: UserGroupUpsertWithWhereUniqueWithoutSecurity_groupInput | UserGroupUpsertWithWhereUniqueWithoutSecurity_groupInput[]
    createMany?: UserGroupCreateManySecurity_groupInputEnvelope
    set?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    disconnect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    delete?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    update?: UserGroupUpdateWithWhereUniqueWithoutSecurity_groupInput | UserGroupUpdateWithWhereUniqueWithoutSecurity_groupInput[]
    updateMany?: UserGroupUpdateManyWithWhereWithoutSecurity_groupInput | UserGroupUpdateManyWithWhereWithoutSecurity_groupInput[]
    deleteMany?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
  }

  export type SecurityGroupCreateNestedOneWithoutSecurityGroupRulesInput = {
    create?: XOR<SecurityGroupCreateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedCreateWithoutSecurityGroupRulesInput>
    connectOrCreate?: SecurityGroupCreateOrConnectWithoutSecurityGroupRulesInput
    connect?: SecurityGroupWhereUniqueInput
  }

  export type SecurityRuleCreateNestedOneWithoutSecurityGroupRulesInput = {
    create?: XOR<SecurityRuleCreateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedCreateWithoutSecurityGroupRulesInput>
    connectOrCreate?: SecurityRuleCreateOrConnectWithoutSecurityGroupRulesInput
    connect?: SecurityRuleWhereUniqueInput
  }

  export type SecurityGroupUpdateOneRequiredWithoutSecurityGroupRulesNestedInput = {
    create?: XOR<SecurityGroupCreateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedCreateWithoutSecurityGroupRulesInput>
    connectOrCreate?: SecurityGroupCreateOrConnectWithoutSecurityGroupRulesInput
    upsert?: SecurityGroupUpsertWithoutSecurityGroupRulesInput
    connect?: SecurityGroupWhereUniqueInput
    update?: XOR<XOR<SecurityGroupUpdateToOneWithWhereWithoutSecurityGroupRulesInput, SecurityGroupUpdateWithoutSecurityGroupRulesInput>, SecurityGroupUncheckedUpdateWithoutSecurityGroupRulesInput>
  }

  export type SecurityRuleUpdateOneRequiredWithoutSecurityGroupRulesNestedInput = {
    create?: XOR<SecurityRuleCreateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedCreateWithoutSecurityGroupRulesInput>
    connectOrCreate?: SecurityRuleCreateOrConnectWithoutSecurityGroupRulesInput
    upsert?: SecurityRuleUpsertWithoutSecurityGroupRulesInput
    connect?: SecurityRuleWhereUniqueInput
    update?: XOR<XOR<SecurityRuleUpdateToOneWithWhereWithoutSecurityGroupRulesInput, SecurityRuleUpdateWithoutSecurityGroupRulesInput>, SecurityRuleUncheckedUpdateWithoutSecurityGroupRulesInput>
  }

  export type UserCreateNestedOneWithoutUserGroupsInput = {
    create?: XOR<UserCreateWithoutUserGroupsInput, UserUncheckedCreateWithoutUserGroupsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserGroupsInput
    connect?: UserWhereUniqueInput
  }

  export type SecurityGroupCreateNestedOneWithoutUserGroupsInput = {
    create?: XOR<SecurityGroupCreateWithoutUserGroupsInput, SecurityGroupUncheckedCreateWithoutUserGroupsInput>
    connectOrCreate?: SecurityGroupCreateOrConnectWithoutUserGroupsInput
    connect?: SecurityGroupWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserGroupsNestedInput = {
    create?: XOR<UserCreateWithoutUserGroupsInput, UserUncheckedCreateWithoutUserGroupsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserGroupsInput
    upsert?: UserUpsertWithoutUserGroupsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserGroupsInput, UserUpdateWithoutUserGroupsInput>, UserUncheckedUpdateWithoutUserGroupsInput>
  }

  export type SecurityGroupUpdateOneRequiredWithoutUserGroupsNestedInput = {
    create?: XOR<SecurityGroupCreateWithoutUserGroupsInput, SecurityGroupUncheckedCreateWithoutUserGroupsInput>
    connectOrCreate?: SecurityGroupCreateOrConnectWithoutUserGroupsInput
    upsert?: SecurityGroupUpsertWithoutUserGroupsInput
    connect?: SecurityGroupWhereUniqueInput
    update?: XOR<XOR<SecurityGroupUpdateToOneWithWhereWithoutUserGroupsInput, SecurityGroupUpdateWithoutUserGroupsInput>, SecurityGroupUncheckedUpdateWithoutUserGroupsInput>
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type CategoryCreateNestedOneWithoutProjectsInput = {
    create?: XOR<CategoryCreateWithoutProjectsInput, CategoryUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProjectsInput
    connect?: CategoryWhereUniqueInput
  }

  export type ProjectGalleryCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProjectGalleryCreateWithoutProjectInput, ProjectGalleryUncheckedCreateWithoutProjectInput> | ProjectGalleryCreateWithoutProjectInput[] | ProjectGalleryUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectGalleryCreateOrConnectWithoutProjectInput | ProjectGalleryCreateOrConnectWithoutProjectInput[]
    createMany?: ProjectGalleryCreateManyProjectInputEnvelope
    connect?: ProjectGalleryWhereUniqueInput | ProjectGalleryWhereUniqueInput[]
  }

  export type ProjectKeyFeatureCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProjectKeyFeatureCreateWithoutProjectInput, ProjectKeyFeatureUncheckedCreateWithoutProjectInput> | ProjectKeyFeatureCreateWithoutProjectInput[] | ProjectKeyFeatureUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectKeyFeatureCreateOrConnectWithoutProjectInput | ProjectKeyFeatureCreateOrConnectWithoutProjectInput[]
    createMany?: ProjectKeyFeatureCreateManyProjectInputEnvelope
    connect?: ProjectKeyFeatureWhereUniqueInput | ProjectKeyFeatureWhereUniqueInput[]
  }

  export type ProjectServiceCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProjectServiceCreateWithoutProjectInput, ProjectServiceUncheckedCreateWithoutProjectInput> | ProjectServiceCreateWithoutProjectInput[] | ProjectServiceUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectServiceCreateOrConnectWithoutProjectInput | ProjectServiceCreateOrConnectWithoutProjectInput[]
    createMany?: ProjectServiceCreateManyProjectInputEnvelope
    connect?: ProjectServiceWhereUniqueInput | ProjectServiceWhereUniqueInput[]
  }

  export type ProjectGalleryUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProjectGalleryCreateWithoutProjectInput, ProjectGalleryUncheckedCreateWithoutProjectInput> | ProjectGalleryCreateWithoutProjectInput[] | ProjectGalleryUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectGalleryCreateOrConnectWithoutProjectInput | ProjectGalleryCreateOrConnectWithoutProjectInput[]
    createMany?: ProjectGalleryCreateManyProjectInputEnvelope
    connect?: ProjectGalleryWhereUniqueInput | ProjectGalleryWhereUniqueInput[]
  }

  export type ProjectKeyFeatureUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProjectKeyFeatureCreateWithoutProjectInput, ProjectKeyFeatureUncheckedCreateWithoutProjectInput> | ProjectKeyFeatureCreateWithoutProjectInput[] | ProjectKeyFeatureUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectKeyFeatureCreateOrConnectWithoutProjectInput | ProjectKeyFeatureCreateOrConnectWithoutProjectInput[]
    createMany?: ProjectKeyFeatureCreateManyProjectInputEnvelope
    connect?: ProjectKeyFeatureWhereUniqueInput | ProjectKeyFeatureWhereUniqueInput[]
  }

  export type ProjectServiceUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProjectServiceCreateWithoutProjectInput, ProjectServiceUncheckedCreateWithoutProjectInput> | ProjectServiceCreateWithoutProjectInput[] | ProjectServiceUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectServiceCreateOrConnectWithoutProjectInput | ProjectServiceCreateOrConnectWithoutProjectInput[]
    createMany?: ProjectServiceCreateManyProjectInputEnvelope
    connect?: ProjectServiceWhereUniqueInput | ProjectServiceWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type CategoryUpdateOneRequiredWithoutProjectsNestedInput = {
    create?: XOR<CategoryCreateWithoutProjectsInput, CategoryUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProjectsInput
    upsert?: CategoryUpsertWithoutProjectsInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutProjectsInput, CategoryUpdateWithoutProjectsInput>, CategoryUncheckedUpdateWithoutProjectsInput>
  }

  export type ProjectGalleryUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProjectGalleryCreateWithoutProjectInput, ProjectGalleryUncheckedCreateWithoutProjectInput> | ProjectGalleryCreateWithoutProjectInput[] | ProjectGalleryUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectGalleryCreateOrConnectWithoutProjectInput | ProjectGalleryCreateOrConnectWithoutProjectInput[]
    upsert?: ProjectGalleryUpsertWithWhereUniqueWithoutProjectInput | ProjectGalleryUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProjectGalleryCreateManyProjectInputEnvelope
    set?: ProjectGalleryWhereUniqueInput | ProjectGalleryWhereUniqueInput[]
    disconnect?: ProjectGalleryWhereUniqueInput | ProjectGalleryWhereUniqueInput[]
    delete?: ProjectGalleryWhereUniqueInput | ProjectGalleryWhereUniqueInput[]
    connect?: ProjectGalleryWhereUniqueInput | ProjectGalleryWhereUniqueInput[]
    update?: ProjectGalleryUpdateWithWhereUniqueWithoutProjectInput | ProjectGalleryUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProjectGalleryUpdateManyWithWhereWithoutProjectInput | ProjectGalleryUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProjectGalleryScalarWhereInput | ProjectGalleryScalarWhereInput[]
  }

  export type ProjectKeyFeatureUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProjectKeyFeatureCreateWithoutProjectInput, ProjectKeyFeatureUncheckedCreateWithoutProjectInput> | ProjectKeyFeatureCreateWithoutProjectInput[] | ProjectKeyFeatureUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectKeyFeatureCreateOrConnectWithoutProjectInput | ProjectKeyFeatureCreateOrConnectWithoutProjectInput[]
    upsert?: ProjectKeyFeatureUpsertWithWhereUniqueWithoutProjectInput | ProjectKeyFeatureUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProjectKeyFeatureCreateManyProjectInputEnvelope
    set?: ProjectKeyFeatureWhereUniqueInput | ProjectKeyFeatureWhereUniqueInput[]
    disconnect?: ProjectKeyFeatureWhereUniqueInput | ProjectKeyFeatureWhereUniqueInput[]
    delete?: ProjectKeyFeatureWhereUniqueInput | ProjectKeyFeatureWhereUniqueInput[]
    connect?: ProjectKeyFeatureWhereUniqueInput | ProjectKeyFeatureWhereUniqueInput[]
    update?: ProjectKeyFeatureUpdateWithWhereUniqueWithoutProjectInput | ProjectKeyFeatureUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProjectKeyFeatureUpdateManyWithWhereWithoutProjectInput | ProjectKeyFeatureUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProjectKeyFeatureScalarWhereInput | ProjectKeyFeatureScalarWhereInput[]
  }

  export type ProjectServiceUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProjectServiceCreateWithoutProjectInput, ProjectServiceUncheckedCreateWithoutProjectInput> | ProjectServiceCreateWithoutProjectInput[] | ProjectServiceUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectServiceCreateOrConnectWithoutProjectInput | ProjectServiceCreateOrConnectWithoutProjectInput[]
    upsert?: ProjectServiceUpsertWithWhereUniqueWithoutProjectInput | ProjectServiceUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProjectServiceCreateManyProjectInputEnvelope
    set?: ProjectServiceWhereUniqueInput | ProjectServiceWhereUniqueInput[]
    disconnect?: ProjectServiceWhereUniqueInput | ProjectServiceWhereUniqueInput[]
    delete?: ProjectServiceWhereUniqueInput | ProjectServiceWhereUniqueInput[]
    connect?: ProjectServiceWhereUniqueInput | ProjectServiceWhereUniqueInput[]
    update?: ProjectServiceUpdateWithWhereUniqueWithoutProjectInput | ProjectServiceUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProjectServiceUpdateManyWithWhereWithoutProjectInput | ProjectServiceUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProjectServiceScalarWhereInput | ProjectServiceScalarWhereInput[]
  }

  export type ProjectGalleryUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProjectGalleryCreateWithoutProjectInput, ProjectGalleryUncheckedCreateWithoutProjectInput> | ProjectGalleryCreateWithoutProjectInput[] | ProjectGalleryUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectGalleryCreateOrConnectWithoutProjectInput | ProjectGalleryCreateOrConnectWithoutProjectInput[]
    upsert?: ProjectGalleryUpsertWithWhereUniqueWithoutProjectInput | ProjectGalleryUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProjectGalleryCreateManyProjectInputEnvelope
    set?: ProjectGalleryWhereUniqueInput | ProjectGalleryWhereUniqueInput[]
    disconnect?: ProjectGalleryWhereUniqueInput | ProjectGalleryWhereUniqueInput[]
    delete?: ProjectGalleryWhereUniqueInput | ProjectGalleryWhereUniqueInput[]
    connect?: ProjectGalleryWhereUniqueInput | ProjectGalleryWhereUniqueInput[]
    update?: ProjectGalleryUpdateWithWhereUniqueWithoutProjectInput | ProjectGalleryUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProjectGalleryUpdateManyWithWhereWithoutProjectInput | ProjectGalleryUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProjectGalleryScalarWhereInput | ProjectGalleryScalarWhereInput[]
  }

  export type ProjectKeyFeatureUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProjectKeyFeatureCreateWithoutProjectInput, ProjectKeyFeatureUncheckedCreateWithoutProjectInput> | ProjectKeyFeatureCreateWithoutProjectInput[] | ProjectKeyFeatureUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectKeyFeatureCreateOrConnectWithoutProjectInput | ProjectKeyFeatureCreateOrConnectWithoutProjectInput[]
    upsert?: ProjectKeyFeatureUpsertWithWhereUniqueWithoutProjectInput | ProjectKeyFeatureUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProjectKeyFeatureCreateManyProjectInputEnvelope
    set?: ProjectKeyFeatureWhereUniqueInput | ProjectKeyFeatureWhereUniqueInput[]
    disconnect?: ProjectKeyFeatureWhereUniqueInput | ProjectKeyFeatureWhereUniqueInput[]
    delete?: ProjectKeyFeatureWhereUniqueInput | ProjectKeyFeatureWhereUniqueInput[]
    connect?: ProjectKeyFeatureWhereUniqueInput | ProjectKeyFeatureWhereUniqueInput[]
    update?: ProjectKeyFeatureUpdateWithWhereUniqueWithoutProjectInput | ProjectKeyFeatureUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProjectKeyFeatureUpdateManyWithWhereWithoutProjectInput | ProjectKeyFeatureUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProjectKeyFeatureScalarWhereInput | ProjectKeyFeatureScalarWhereInput[]
  }

  export type ProjectServiceUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProjectServiceCreateWithoutProjectInput, ProjectServiceUncheckedCreateWithoutProjectInput> | ProjectServiceCreateWithoutProjectInput[] | ProjectServiceUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectServiceCreateOrConnectWithoutProjectInput | ProjectServiceCreateOrConnectWithoutProjectInput[]
    upsert?: ProjectServiceUpsertWithWhereUniqueWithoutProjectInput | ProjectServiceUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProjectServiceCreateManyProjectInputEnvelope
    set?: ProjectServiceWhereUniqueInput | ProjectServiceWhereUniqueInput[]
    disconnect?: ProjectServiceWhereUniqueInput | ProjectServiceWhereUniqueInput[]
    delete?: ProjectServiceWhereUniqueInput | ProjectServiceWhereUniqueInput[]
    connect?: ProjectServiceWhereUniqueInput | ProjectServiceWhereUniqueInput[]
    update?: ProjectServiceUpdateWithWhereUniqueWithoutProjectInput | ProjectServiceUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProjectServiceUpdateManyWithWhereWithoutProjectInput | ProjectServiceUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProjectServiceScalarWhereInput | ProjectServiceScalarWhereInput[]
  }

  export type ProjectCreateNestedOneWithoutGalleryInput = {
    create?: XOR<ProjectCreateWithoutGalleryInput, ProjectUncheckedCreateWithoutGalleryInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutGalleryInput
    connect?: ProjectWhereUniqueInput
  }

  export type ProjectUpdateOneRequiredWithoutGalleryNestedInput = {
    create?: XOR<ProjectCreateWithoutGalleryInput, ProjectUncheckedCreateWithoutGalleryInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutGalleryInput
    upsert?: ProjectUpsertWithoutGalleryInput
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutGalleryInput, ProjectUpdateWithoutGalleryInput>, ProjectUncheckedUpdateWithoutGalleryInput>
  }

  export type ProjectCreateNestedOneWithoutKey_featuresInput = {
    create?: XOR<ProjectCreateWithoutKey_featuresInput, ProjectUncheckedCreateWithoutKey_featuresInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutKey_featuresInput
    connect?: ProjectWhereUniqueInput
  }

  export type ProjectUpdateOneRequiredWithoutKey_featuresNestedInput = {
    create?: XOR<ProjectCreateWithoutKey_featuresInput, ProjectUncheckedCreateWithoutKey_featuresInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutKey_featuresInput
    upsert?: ProjectUpsertWithoutKey_featuresInput
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutKey_featuresInput, ProjectUpdateWithoutKey_featuresInput>, ProjectUncheckedUpdateWithoutKey_featuresInput>
  }

  export type ProjectCreateNestedOneWithoutServicesInput = {
    create?: XOR<ProjectCreateWithoutServicesInput, ProjectUncheckedCreateWithoutServicesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutServicesInput
    connect?: ProjectWhereUniqueInput
  }

  export type ProjectUpdateOneRequiredWithoutServicesNestedInput = {
    create?: XOR<ProjectCreateWithoutServicesInput, ProjectUncheckedCreateWithoutServicesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutServicesInput
    upsert?: ProjectUpsertWithoutServicesInput
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutServicesInput, ProjectUpdateWithoutServicesInput>, ProjectUncheckedUpdateWithoutServicesInput>
  }

  export type ProjectCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProjectCreateWithoutCategoryInput, ProjectUncheckedCreateWithoutCategoryInput> | ProjectCreateWithoutCategoryInput[] | ProjectUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCategoryInput | ProjectCreateOrConnectWithoutCategoryInput[]
    createMany?: ProjectCreateManyCategoryInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type NewsCreateNestedManyWithoutCategoryInput = {
    create?: XOR<NewsCreateWithoutCategoryInput, NewsUncheckedCreateWithoutCategoryInput> | NewsCreateWithoutCategoryInput[] | NewsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutCategoryInput | NewsCreateOrConnectWithoutCategoryInput[]
    createMany?: NewsCreateManyCategoryInputEnvelope
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
  }

  export type ProjectUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProjectCreateWithoutCategoryInput, ProjectUncheckedCreateWithoutCategoryInput> | ProjectCreateWithoutCategoryInput[] | ProjectUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCategoryInput | ProjectCreateOrConnectWithoutCategoryInput[]
    createMany?: ProjectCreateManyCategoryInputEnvelope
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
  }

  export type NewsUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<NewsCreateWithoutCategoryInput, NewsUncheckedCreateWithoutCategoryInput> | NewsCreateWithoutCategoryInput[] | NewsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutCategoryInput | NewsCreateOrConnectWithoutCategoryInput[]
    createMany?: NewsCreateManyCategoryInputEnvelope
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
  }

  export type ProjectUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProjectCreateWithoutCategoryInput, ProjectUncheckedCreateWithoutCategoryInput> | ProjectCreateWithoutCategoryInput[] | ProjectUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCategoryInput | ProjectCreateOrConnectWithoutCategoryInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutCategoryInput | ProjectUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProjectCreateManyCategoryInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutCategoryInput | ProjectUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutCategoryInput | ProjectUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type NewsUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<NewsCreateWithoutCategoryInput, NewsUncheckedCreateWithoutCategoryInput> | NewsCreateWithoutCategoryInput[] | NewsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutCategoryInput | NewsCreateOrConnectWithoutCategoryInput[]
    upsert?: NewsUpsertWithWhereUniqueWithoutCategoryInput | NewsUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: NewsCreateManyCategoryInputEnvelope
    set?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    disconnect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    delete?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    update?: NewsUpdateWithWhereUniqueWithoutCategoryInput | NewsUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: NewsUpdateManyWithWhereWithoutCategoryInput | NewsUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: NewsScalarWhereInput | NewsScalarWhereInput[]
  }

  export type ProjectUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProjectCreateWithoutCategoryInput, ProjectUncheckedCreateWithoutCategoryInput> | ProjectCreateWithoutCategoryInput[] | ProjectUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProjectCreateOrConnectWithoutCategoryInput | ProjectCreateOrConnectWithoutCategoryInput[]
    upsert?: ProjectUpsertWithWhereUniqueWithoutCategoryInput | ProjectUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProjectCreateManyCategoryInputEnvelope
    set?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    disconnect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    delete?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[]
    update?: ProjectUpdateWithWhereUniqueWithoutCategoryInput | ProjectUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProjectUpdateManyWithWhereWithoutCategoryInput | ProjectUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
  }

  export type NewsUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<NewsCreateWithoutCategoryInput, NewsUncheckedCreateWithoutCategoryInput> | NewsCreateWithoutCategoryInput[] | NewsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutCategoryInput | NewsCreateOrConnectWithoutCategoryInput[]
    upsert?: NewsUpsertWithWhereUniqueWithoutCategoryInput | NewsUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: NewsCreateManyCategoryInputEnvelope
    set?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    disconnect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    delete?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    update?: NewsUpdateWithWhereUniqueWithoutCategoryInput | NewsUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: NewsUpdateManyWithWhereWithoutCategoryInput | NewsUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: NewsScalarWhereInput | NewsScalarWhereInput[]
  }

  export type CategoryCreateNestedOneWithoutNewsInput = {
    create?: XOR<CategoryCreateWithoutNewsInput, CategoryUncheckedCreateWithoutNewsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutNewsInput
    connect?: CategoryWhereUniqueInput
  }

  export type NewsGalleryCreateNestedManyWithoutNewsInput = {
    create?: XOR<NewsGalleryCreateWithoutNewsInput, NewsGalleryUncheckedCreateWithoutNewsInput> | NewsGalleryCreateWithoutNewsInput[] | NewsGalleryUncheckedCreateWithoutNewsInput[]
    connectOrCreate?: NewsGalleryCreateOrConnectWithoutNewsInput | NewsGalleryCreateOrConnectWithoutNewsInput[]
    createMany?: NewsGalleryCreateManyNewsInputEnvelope
    connect?: NewsGalleryWhereUniqueInput | NewsGalleryWhereUniqueInput[]
  }

  export type NewsGalleryUncheckedCreateNestedManyWithoutNewsInput = {
    create?: XOR<NewsGalleryCreateWithoutNewsInput, NewsGalleryUncheckedCreateWithoutNewsInput> | NewsGalleryCreateWithoutNewsInput[] | NewsGalleryUncheckedCreateWithoutNewsInput[]
    connectOrCreate?: NewsGalleryCreateOrConnectWithoutNewsInput | NewsGalleryCreateOrConnectWithoutNewsInput[]
    createMany?: NewsGalleryCreateManyNewsInputEnvelope
    connect?: NewsGalleryWhereUniqueInput | NewsGalleryWhereUniqueInput[]
  }

  export type CategoryUpdateOneRequiredWithoutNewsNestedInput = {
    create?: XOR<CategoryCreateWithoutNewsInput, CategoryUncheckedCreateWithoutNewsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutNewsInput
    upsert?: CategoryUpsertWithoutNewsInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutNewsInput, CategoryUpdateWithoutNewsInput>, CategoryUncheckedUpdateWithoutNewsInput>
  }

  export type NewsGalleryUpdateManyWithoutNewsNestedInput = {
    create?: XOR<NewsGalleryCreateWithoutNewsInput, NewsGalleryUncheckedCreateWithoutNewsInput> | NewsGalleryCreateWithoutNewsInput[] | NewsGalleryUncheckedCreateWithoutNewsInput[]
    connectOrCreate?: NewsGalleryCreateOrConnectWithoutNewsInput | NewsGalleryCreateOrConnectWithoutNewsInput[]
    upsert?: NewsGalleryUpsertWithWhereUniqueWithoutNewsInput | NewsGalleryUpsertWithWhereUniqueWithoutNewsInput[]
    createMany?: NewsGalleryCreateManyNewsInputEnvelope
    set?: NewsGalleryWhereUniqueInput | NewsGalleryWhereUniqueInput[]
    disconnect?: NewsGalleryWhereUniqueInput | NewsGalleryWhereUniqueInput[]
    delete?: NewsGalleryWhereUniqueInput | NewsGalleryWhereUniqueInput[]
    connect?: NewsGalleryWhereUniqueInput | NewsGalleryWhereUniqueInput[]
    update?: NewsGalleryUpdateWithWhereUniqueWithoutNewsInput | NewsGalleryUpdateWithWhereUniqueWithoutNewsInput[]
    updateMany?: NewsGalleryUpdateManyWithWhereWithoutNewsInput | NewsGalleryUpdateManyWithWhereWithoutNewsInput[]
    deleteMany?: NewsGalleryScalarWhereInput | NewsGalleryScalarWhereInput[]
  }

  export type NewsGalleryUncheckedUpdateManyWithoutNewsNestedInput = {
    create?: XOR<NewsGalleryCreateWithoutNewsInput, NewsGalleryUncheckedCreateWithoutNewsInput> | NewsGalleryCreateWithoutNewsInput[] | NewsGalleryUncheckedCreateWithoutNewsInput[]
    connectOrCreate?: NewsGalleryCreateOrConnectWithoutNewsInput | NewsGalleryCreateOrConnectWithoutNewsInput[]
    upsert?: NewsGalleryUpsertWithWhereUniqueWithoutNewsInput | NewsGalleryUpsertWithWhereUniqueWithoutNewsInput[]
    createMany?: NewsGalleryCreateManyNewsInputEnvelope
    set?: NewsGalleryWhereUniqueInput | NewsGalleryWhereUniqueInput[]
    disconnect?: NewsGalleryWhereUniqueInput | NewsGalleryWhereUniqueInput[]
    delete?: NewsGalleryWhereUniqueInput | NewsGalleryWhereUniqueInput[]
    connect?: NewsGalleryWhereUniqueInput | NewsGalleryWhereUniqueInput[]
    update?: NewsGalleryUpdateWithWhereUniqueWithoutNewsInput | NewsGalleryUpdateWithWhereUniqueWithoutNewsInput[]
    updateMany?: NewsGalleryUpdateManyWithWhereWithoutNewsInput | NewsGalleryUpdateManyWithWhereWithoutNewsInput[]
    deleteMany?: NewsGalleryScalarWhereInput | NewsGalleryScalarWhereInput[]
  }

  export type NewsCreateNestedOneWithoutGalleryInput = {
    create?: XOR<NewsCreateWithoutGalleryInput, NewsUncheckedCreateWithoutGalleryInput>
    connectOrCreate?: NewsCreateOrConnectWithoutGalleryInput
    connect?: NewsWhereUniqueInput
  }

  export type NewsUpdateOneRequiredWithoutGalleryNestedInput = {
    create?: XOR<NewsCreateWithoutGalleryInput, NewsUncheckedCreateWithoutGalleryInput>
    connectOrCreate?: NewsCreateOrConnectWithoutGalleryInput
    upsert?: NewsUpsertWithoutGalleryInput
    connect?: NewsWhereUniqueInput
    update?: XOR<XOR<NewsUpdateToOneWithWhereWithoutGalleryInput, NewsUpdateWithoutGalleryInput>, NewsUncheckedUpdateWithoutGalleryInput>
  }

  export type CompanyCreateNestedOneWithoutCompanyAdditionalInfoInput = {
    create?: XOR<CompanyCreateWithoutCompanyAdditionalInfoInput, CompanyUncheckedCreateWithoutCompanyAdditionalInfoInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCompanyAdditionalInfoInput
    connect?: CompanyWhereUniqueInput
  }

  export type CompanyUpdateOneRequiredWithoutCompanyAdditionalInfoNestedInput = {
    create?: XOR<CompanyCreateWithoutCompanyAdditionalInfoInput, CompanyUncheckedCreateWithoutCompanyAdditionalInfoInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCompanyAdditionalInfoInput
    upsert?: CompanyUpsertWithoutCompanyAdditionalInfoInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutCompanyAdditionalInfoInput, CompanyUpdateWithoutCompanyAdditionalInfoInput>, CompanyUncheckedUpdateWithoutCompanyAdditionalInfoInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type CompanyAdditionalInfoCreateWithoutCompanyInput = {
    id?: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput = {
    id?: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput = {
    where: CompanyAdditionalInfoWhereUniqueInput
    create: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput>
  }

  export type CompanyAdditionalInfoCreateManyCompanyInputEnvelope = {
    data: CompanyAdditionalInfoCreateManyCompanyInput | CompanyAdditionalInfoCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type CompanyAdditionalInfoUpsertWithWhereUniqueWithoutCompanyInput = {
    where: CompanyAdditionalInfoWhereUniqueInput
    update: XOR<CompanyAdditionalInfoUpdateWithoutCompanyInput, CompanyAdditionalInfoUncheckedUpdateWithoutCompanyInput>
    create: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput>
  }

  export type CompanyAdditionalInfoUpdateWithWhereUniqueWithoutCompanyInput = {
    where: CompanyAdditionalInfoWhereUniqueInput
    data: XOR<CompanyAdditionalInfoUpdateWithoutCompanyInput, CompanyAdditionalInfoUncheckedUpdateWithoutCompanyInput>
  }

  export type CompanyAdditionalInfoUpdateManyWithWhereWithoutCompanyInput = {
    where: CompanyAdditionalInfoScalarWhereInput
    data: XOR<CompanyAdditionalInfoUpdateManyMutationInput, CompanyAdditionalInfoUncheckedUpdateManyWithoutCompanyInput>
  }

  export type CompanyAdditionalInfoScalarWhereInput = {
    AND?: CompanyAdditionalInfoScalarWhereInput | CompanyAdditionalInfoScalarWhereInput[]
    OR?: CompanyAdditionalInfoScalarWhereInput[]
    NOT?: CompanyAdditionalInfoScalarWhereInput | CompanyAdditionalInfoScalarWhereInput[]
    id?: StringFilter<"CompanyAdditionalInfo"> | string
    company_id?: StringFilter<"CompanyAdditionalInfo"> | string
    short_description?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    facebook_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    twitter_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    instagram_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    linkedin_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    youtube_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    whatsapp_number?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    google_map_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    vision?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    mission?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    created_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    created_by?: StringFilter<"CompanyAdditionalInfo"> | string
    created_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    updated_by?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
  }

  export type UserGroupCreateWithoutUserInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    security_group: SecurityGroupCreateNestedOneWithoutUserGroupsInput
  }

  export type UserGroupUncheckedCreateWithoutUserInput = {
    id?: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserGroupCreateOrConnectWithoutUserInput = {
    where: UserGroupWhereUniqueInput
    create: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput>
  }

  export type UserGroupCreateManyUserInputEnvelope = {
    data: UserGroupCreateManyUserInput | UserGroupCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RefreshTokenCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type RefreshTokenUncheckedCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type RefreshTokenCreateOrConnectWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenCreateManyUserInputEnvelope = {
    data: RefreshTokenCreateManyUserInput | RefreshTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserGroupUpsertWithWhereUniqueWithoutUserInput = {
    where: UserGroupWhereUniqueInput
    update: XOR<UserGroupUpdateWithoutUserInput, UserGroupUncheckedUpdateWithoutUserInput>
    create: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput>
  }

  export type UserGroupUpdateWithWhereUniqueWithoutUserInput = {
    where: UserGroupWhereUniqueInput
    data: XOR<UserGroupUpdateWithoutUserInput, UserGroupUncheckedUpdateWithoutUserInput>
  }

  export type UserGroupUpdateManyWithWhereWithoutUserInput = {
    where: UserGroupScalarWhereInput
    data: XOR<UserGroupUpdateManyMutationInput, UserGroupUncheckedUpdateManyWithoutUserInput>
  }

  export type UserGroupScalarWhereInput = {
    AND?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
    OR?: UserGroupScalarWhereInput[]
    NOT?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
    id?: StringFilter<"UserGroup"> | string
    user_id?: StringFilter<"UserGroup"> | string
    group_id?: StringFilter<"UserGroup"> | string
    created_at?: DateTimeFilter<"UserGroup"> | Date | string
    created_by?: StringFilter<"UserGroup"> | string
    created_ip?: StringNullableFilter<"UserGroup"> | string | null
    updated_at?: DateTimeFilter<"UserGroup"> | Date | string
    updated_by?: StringNullableFilter<"UserGroup"> | string | null
    updated_ip?: StringNullableFilter<"UserGroup"> | string | null
    company_id?: StringFilter<"UserGroup"> | string
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutUserInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type RefreshTokenScalarWhereInput = {
    AND?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    OR?: RefreshTokenScalarWhereInput[]
    NOT?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    isRevoked?: BoolFilter<"RefreshToken"> | boolean
  }

  export type UserCreateWithoutRefreshTokenInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRefreshTokenInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRefreshTokenInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
  }

  export type UserUpsertWithoutRefreshTokenInput = {
    update: XOR<UserUpdateWithoutRefreshTokenInput, UserUncheckedUpdateWithoutRefreshTokenInput>
    create: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRefreshTokenInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRefreshTokenInput, UserUncheckedUpdateWithoutRefreshTokenInput>
  }

  export type UserUpdateWithoutRefreshTokenInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRefreshTokenInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput = {
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
    create: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput>
  }

  export type SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInputEnvelope = {
    data: SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInput | SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInput[]
    skipDuplicates?: boolean
  }

  export type SecurityGroupRuleCreateWithoutSecurity_ruleInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    security_group: SecurityGroupCreateNestedOneWithoutSecurityGroupRulesInput
  }

  export type SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput = {
    id?: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput = {
    where: SecurityGroupRuleWhereUniqueInput
    create: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput>
  }

  export type SecurityGroupRuleCreateManySecurity_ruleInputEnvelope = {
    data: SecurityGroupRuleCreateManySecurity_ruleInput | SecurityGroupRuleCreateManySecurity_ruleInput[]
    skipDuplicates?: boolean
  }

  export type SecurityRuleWiseMenuPermissionUpsertWithWhereUniqueWithoutSecurity_ruleInput = {
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
    update: XOR<SecurityRuleWiseMenuPermissionUpdateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedUpdateWithoutSecurity_ruleInput>
    create: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput>
  }

  export type SecurityRuleWiseMenuPermissionUpdateWithWhereUniqueWithoutSecurity_ruleInput = {
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
    data: XOR<SecurityRuleWiseMenuPermissionUpdateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedUpdateWithoutSecurity_ruleInput>
  }

  export type SecurityRuleWiseMenuPermissionUpdateManyWithWhereWithoutSecurity_ruleInput = {
    where: SecurityRuleWiseMenuPermissionScalarWhereInput
    data: XOR<SecurityRuleWiseMenuPermissionUpdateManyMutationInput, SecurityRuleWiseMenuPermissionUncheckedUpdateManyWithoutSecurity_ruleInput>
  }

  export type SecurityRuleWiseMenuPermissionScalarWhereInput = {
    AND?: SecurityRuleWiseMenuPermissionScalarWhereInput | SecurityRuleWiseMenuPermissionScalarWhereInput[]
    OR?: SecurityRuleWiseMenuPermissionScalarWhereInput[]
    NOT?: SecurityRuleWiseMenuPermissionScalarWhereInput | SecurityRuleWiseMenuPermissionScalarWhereInput[]
    id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    menu_id?: IntFilter<"SecurityRuleWiseMenuPermission"> | number
    can_view?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_create?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_update?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_delete?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_report?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    rule_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    created_by?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    updated_by?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    company_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
  }

  export type SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_ruleInput = {
    where: SecurityGroupRuleWhereUniqueInput
    update: XOR<SecurityGroupRuleUpdateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedUpdateWithoutSecurity_ruleInput>
    create: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput>
  }

  export type SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_ruleInput = {
    where: SecurityGroupRuleWhereUniqueInput
    data: XOR<SecurityGroupRuleUpdateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedUpdateWithoutSecurity_ruleInput>
  }

  export type SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_ruleInput = {
    where: SecurityGroupRuleScalarWhereInput
    data: XOR<SecurityGroupRuleUpdateManyMutationInput, SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_ruleInput>
  }

  export type SecurityGroupRuleScalarWhereInput = {
    AND?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
    OR?: SecurityGroupRuleScalarWhereInput[]
    NOT?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
    id?: StringFilter<"SecurityGroupRule"> | string
    group_id?: StringFilter<"SecurityGroupRule"> | string
    rule_id?: StringFilter<"SecurityGroupRule"> | string
    created_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    created_by?: StringFilter<"SecurityGroupRule"> | string
    created_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    updated_by?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    company_id?: StringFilter<"SecurityGroupRule"> | string
  }

  export type SecurityRuleCreateWithoutSecurityRuleWiseMenuPermissionsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleUncheckedCreateWithoutSecurityRuleWiseMenuPermissionsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleCreateOrConnectWithoutSecurityRuleWiseMenuPermissionsInput = {
    where: SecurityRuleWhereUniqueInput
    create: XOR<SecurityRuleCreateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedCreateWithoutSecurityRuleWiseMenuPermissionsInput>
  }

  export type SecurityRuleUpsertWithoutSecurityRuleWiseMenuPermissionsInput = {
    update: XOR<SecurityRuleUpdateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedUpdateWithoutSecurityRuleWiseMenuPermissionsInput>
    create: XOR<SecurityRuleCreateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedCreateWithoutSecurityRuleWiseMenuPermissionsInput>
    where?: SecurityRuleWhereInput
  }

  export type SecurityRuleUpdateToOneWithWhereWithoutSecurityRuleWiseMenuPermissionsInput = {
    where?: SecurityRuleWhereInput
    data: XOR<SecurityRuleUpdateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedUpdateWithoutSecurityRuleWiseMenuPermissionsInput>
  }

  export type SecurityRuleUpdateWithoutSecurityRuleWiseMenuPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type SecurityRuleUncheckedUpdateWithoutSecurityRuleWiseMenuPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type SecurityGroupRuleCreateWithoutSecurity_groupInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    security_rule: SecurityRuleCreateNestedOneWithoutSecurityGroupRulesInput
  }

  export type SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput = {
    id?: string
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput = {
    where: SecurityGroupRuleWhereUniqueInput
    create: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput>
  }

  export type SecurityGroupRuleCreateManySecurity_groupInputEnvelope = {
    data: SecurityGroupRuleCreateManySecurity_groupInput | SecurityGroupRuleCreateManySecurity_groupInput[]
    skipDuplicates?: boolean
  }

  export type UserGroupCreateWithoutSecurity_groupInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    user: UserCreateNestedOneWithoutUserGroupsInput
  }

  export type UserGroupUncheckedCreateWithoutSecurity_groupInput = {
    id?: string
    user_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserGroupCreateOrConnectWithoutSecurity_groupInput = {
    where: UserGroupWhereUniqueInput
    create: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput>
  }

  export type UserGroupCreateManySecurity_groupInputEnvelope = {
    data: UserGroupCreateManySecurity_groupInput | UserGroupCreateManySecurity_groupInput[]
    skipDuplicates?: boolean
  }

  export type SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_groupInput = {
    where: SecurityGroupRuleWhereUniqueInput
    update: XOR<SecurityGroupRuleUpdateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedUpdateWithoutSecurity_groupInput>
    create: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput>
  }

  export type SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_groupInput = {
    where: SecurityGroupRuleWhereUniqueInput
    data: XOR<SecurityGroupRuleUpdateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedUpdateWithoutSecurity_groupInput>
  }

  export type SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_groupInput = {
    where: SecurityGroupRuleScalarWhereInput
    data: XOR<SecurityGroupRuleUpdateManyMutationInput, SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_groupInput>
  }

  export type UserGroupUpsertWithWhereUniqueWithoutSecurity_groupInput = {
    where: UserGroupWhereUniqueInput
    update: XOR<UserGroupUpdateWithoutSecurity_groupInput, UserGroupUncheckedUpdateWithoutSecurity_groupInput>
    create: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput>
  }

  export type UserGroupUpdateWithWhereUniqueWithoutSecurity_groupInput = {
    where: UserGroupWhereUniqueInput
    data: XOR<UserGroupUpdateWithoutSecurity_groupInput, UserGroupUncheckedUpdateWithoutSecurity_groupInput>
  }

  export type UserGroupUpdateManyWithWhereWithoutSecurity_groupInput = {
    where: UserGroupScalarWhereInput
    data: XOR<UserGroupUpdateManyMutationInput, UserGroupUncheckedUpdateManyWithoutSecurity_groupInput>
  }

  export type SecurityGroupCreateWithoutSecurityGroupRulesInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupUncheckedCreateWithoutSecurityGroupRulesInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupUncheckedCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupCreateOrConnectWithoutSecurityGroupRulesInput = {
    where: SecurityGroupWhereUniqueInput
    create: XOR<SecurityGroupCreateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedCreateWithoutSecurityGroupRulesInput>
  }

  export type SecurityRuleCreateWithoutSecurityGroupRulesInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleUncheckedCreateWithoutSecurityGroupRulesInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUncheckedCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleCreateOrConnectWithoutSecurityGroupRulesInput = {
    where: SecurityRuleWhereUniqueInput
    create: XOR<SecurityRuleCreateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedCreateWithoutSecurityGroupRulesInput>
  }

  export type SecurityGroupUpsertWithoutSecurityGroupRulesInput = {
    update: XOR<SecurityGroupUpdateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedUpdateWithoutSecurityGroupRulesInput>
    create: XOR<SecurityGroupCreateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedCreateWithoutSecurityGroupRulesInput>
    where?: SecurityGroupWhereInput
  }

  export type SecurityGroupUpdateToOneWithWhereWithoutSecurityGroupRulesInput = {
    where?: SecurityGroupWhereInput
    data: XOR<SecurityGroupUpdateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedUpdateWithoutSecurityGroupRulesInput>
  }

  export type SecurityGroupUpdateWithoutSecurityGroupRulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUpdateManyWithoutSecurity_groupNestedInput
  }

  export type SecurityGroupUncheckedUpdateWithoutSecurityGroupRulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUncheckedUpdateManyWithoutSecurity_groupNestedInput
  }

  export type SecurityRuleUpsertWithoutSecurityGroupRulesInput = {
    update: XOR<SecurityRuleUpdateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedUpdateWithoutSecurityGroupRulesInput>
    create: XOR<SecurityRuleCreateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedCreateWithoutSecurityGroupRulesInput>
    where?: SecurityRuleWhereInput
  }

  export type SecurityRuleUpdateToOneWithWhereWithoutSecurityGroupRulesInput = {
    where?: SecurityRuleWhereInput
    data: XOR<SecurityRuleUpdateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedUpdateWithoutSecurityGroupRulesInput>
  }

  export type SecurityRuleUpdateWithoutSecurityGroupRulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type SecurityRuleUncheckedUpdateWithoutSecurityGroupRulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUncheckedUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type UserCreateWithoutUserGroupsInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserGroupsInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserGroupsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserGroupsInput, UserUncheckedCreateWithoutUserGroupsInput>
  }

  export type SecurityGroupCreateWithoutUserGroupsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupUncheckedCreateWithoutUserGroupsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupCreateOrConnectWithoutUserGroupsInput = {
    where: SecurityGroupWhereUniqueInput
    create: XOR<SecurityGroupCreateWithoutUserGroupsInput, SecurityGroupUncheckedCreateWithoutUserGroupsInput>
  }

  export type UserUpsertWithoutUserGroupsInput = {
    update: XOR<UserUpdateWithoutUserGroupsInput, UserUncheckedUpdateWithoutUserGroupsInput>
    create: XOR<UserCreateWithoutUserGroupsInput, UserUncheckedCreateWithoutUserGroupsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserGroupsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserGroupsInput, UserUncheckedUpdateWithoutUserGroupsInput>
  }

  export type UserUpdateWithoutUserGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SecurityGroupUpsertWithoutUserGroupsInput = {
    update: XOR<SecurityGroupUpdateWithoutUserGroupsInput, SecurityGroupUncheckedUpdateWithoutUserGroupsInput>
    create: XOR<SecurityGroupCreateWithoutUserGroupsInput, SecurityGroupUncheckedCreateWithoutUserGroupsInput>
    where?: SecurityGroupWhereInput
  }

  export type SecurityGroupUpdateToOneWithWhereWithoutUserGroupsInput = {
    where?: SecurityGroupWhereInput
    data: XOR<SecurityGroupUpdateWithoutUserGroupsInput, SecurityGroupUncheckedUpdateWithoutUserGroupsInput>
  }

  export type SecurityGroupUpdateWithoutUserGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUpdateManyWithoutSecurity_groupNestedInput
  }

  export type SecurityGroupUncheckedUpdateWithoutUserGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_groupNestedInput
  }

  export type CategoryCreateWithoutProjectsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    News?: NewsCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutProjectsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    News?: NewsUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutProjectsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutProjectsInput, CategoryUncheckedCreateWithoutProjectsInput>
  }

  export type ProjectGalleryCreateWithoutProjectInput = {
    id?: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectGalleryUncheckedCreateWithoutProjectInput = {
    id?: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectGalleryCreateOrConnectWithoutProjectInput = {
    where: ProjectGalleryWhereUniqueInput
    create: XOR<ProjectGalleryCreateWithoutProjectInput, ProjectGalleryUncheckedCreateWithoutProjectInput>
  }

  export type ProjectGalleryCreateManyProjectInputEnvelope = {
    data: ProjectGalleryCreateManyProjectInput | ProjectGalleryCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type ProjectKeyFeatureCreateWithoutProjectInput = {
    id?: string
    feature: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectKeyFeatureUncheckedCreateWithoutProjectInput = {
    id?: string
    feature: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectKeyFeatureCreateOrConnectWithoutProjectInput = {
    where: ProjectKeyFeatureWhereUniqueInput
    create: XOR<ProjectKeyFeatureCreateWithoutProjectInput, ProjectKeyFeatureUncheckedCreateWithoutProjectInput>
  }

  export type ProjectKeyFeatureCreateManyProjectInputEnvelope = {
    data: ProjectKeyFeatureCreateManyProjectInput | ProjectKeyFeatureCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type ProjectServiceCreateWithoutProjectInput = {
    id?: string
    service: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectServiceUncheckedCreateWithoutProjectInput = {
    id?: string
    service: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectServiceCreateOrConnectWithoutProjectInput = {
    where: ProjectServiceWhereUniqueInput
    create: XOR<ProjectServiceCreateWithoutProjectInput, ProjectServiceUncheckedCreateWithoutProjectInput>
  }

  export type ProjectServiceCreateManyProjectInputEnvelope = {
    data: ProjectServiceCreateManyProjectInput | ProjectServiceCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type CategoryUpsertWithoutProjectsInput = {
    update: XOR<CategoryUpdateWithoutProjectsInput, CategoryUncheckedUpdateWithoutProjectsInput>
    create: XOR<CategoryCreateWithoutProjectsInput, CategoryUncheckedCreateWithoutProjectsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutProjectsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutProjectsInput, CategoryUncheckedUpdateWithoutProjectsInput>
  }

  export type CategoryUpdateWithoutProjectsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    News?: NewsUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutProjectsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    News?: NewsUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type ProjectGalleryUpsertWithWhereUniqueWithoutProjectInput = {
    where: ProjectGalleryWhereUniqueInput
    update: XOR<ProjectGalleryUpdateWithoutProjectInput, ProjectGalleryUncheckedUpdateWithoutProjectInput>
    create: XOR<ProjectGalleryCreateWithoutProjectInput, ProjectGalleryUncheckedCreateWithoutProjectInput>
  }

  export type ProjectGalleryUpdateWithWhereUniqueWithoutProjectInput = {
    where: ProjectGalleryWhereUniqueInput
    data: XOR<ProjectGalleryUpdateWithoutProjectInput, ProjectGalleryUncheckedUpdateWithoutProjectInput>
  }

  export type ProjectGalleryUpdateManyWithWhereWithoutProjectInput = {
    where: ProjectGalleryScalarWhereInput
    data: XOR<ProjectGalleryUpdateManyMutationInput, ProjectGalleryUncheckedUpdateManyWithoutProjectInput>
  }

  export type ProjectGalleryScalarWhereInput = {
    AND?: ProjectGalleryScalarWhereInput | ProjectGalleryScalarWhereInput[]
    OR?: ProjectGalleryScalarWhereInput[]
    NOT?: ProjectGalleryScalarWhereInput | ProjectGalleryScalarWhereInput[]
    id?: StringFilter<"ProjectGallery"> | string
    project_id?: StringFilter<"ProjectGallery"> | string
    image_url?: StringFilter<"ProjectGallery"> | string
    title?: StringNullableFilter<"ProjectGallery"> | string | null
    subtitle?: StringNullableFilter<"ProjectGallery"> | string | null
    sequence_no?: IntFilter<"ProjectGallery"> | number
    created_at?: DateTimeFilter<"ProjectGallery"> | Date | string
    created_by?: StringFilter<"ProjectGallery"> | string
    created_ip?: StringNullableFilter<"ProjectGallery"> | string | null
    updated_at?: DateTimeFilter<"ProjectGallery"> | Date | string
    updated_by?: StringNullableFilter<"ProjectGallery"> | string | null
    updated_ip?: StringNullableFilter<"ProjectGallery"> | string | null
    company_id?: StringFilter<"ProjectGallery"> | string
  }

  export type ProjectKeyFeatureUpsertWithWhereUniqueWithoutProjectInput = {
    where: ProjectKeyFeatureWhereUniqueInput
    update: XOR<ProjectKeyFeatureUpdateWithoutProjectInput, ProjectKeyFeatureUncheckedUpdateWithoutProjectInput>
    create: XOR<ProjectKeyFeatureCreateWithoutProjectInput, ProjectKeyFeatureUncheckedCreateWithoutProjectInput>
  }

  export type ProjectKeyFeatureUpdateWithWhereUniqueWithoutProjectInput = {
    where: ProjectKeyFeatureWhereUniqueInput
    data: XOR<ProjectKeyFeatureUpdateWithoutProjectInput, ProjectKeyFeatureUncheckedUpdateWithoutProjectInput>
  }

  export type ProjectKeyFeatureUpdateManyWithWhereWithoutProjectInput = {
    where: ProjectKeyFeatureScalarWhereInput
    data: XOR<ProjectKeyFeatureUpdateManyMutationInput, ProjectKeyFeatureUncheckedUpdateManyWithoutProjectInput>
  }

  export type ProjectKeyFeatureScalarWhereInput = {
    AND?: ProjectKeyFeatureScalarWhereInput | ProjectKeyFeatureScalarWhereInput[]
    OR?: ProjectKeyFeatureScalarWhereInput[]
    NOT?: ProjectKeyFeatureScalarWhereInput | ProjectKeyFeatureScalarWhereInput[]
    id?: StringFilter<"ProjectKeyFeature"> | string
    project_id?: StringFilter<"ProjectKeyFeature"> | string
    feature?: StringFilter<"ProjectKeyFeature"> | string
    created_at?: DateTimeFilter<"ProjectKeyFeature"> | Date | string
    created_by?: StringFilter<"ProjectKeyFeature"> | string
    created_ip?: StringNullableFilter<"ProjectKeyFeature"> | string | null
    updated_at?: DateTimeFilter<"ProjectKeyFeature"> | Date | string
    updated_by?: StringNullableFilter<"ProjectKeyFeature"> | string | null
    updated_ip?: StringNullableFilter<"ProjectKeyFeature"> | string | null
    company_id?: StringFilter<"ProjectKeyFeature"> | string
  }

  export type ProjectServiceUpsertWithWhereUniqueWithoutProjectInput = {
    where: ProjectServiceWhereUniqueInput
    update: XOR<ProjectServiceUpdateWithoutProjectInput, ProjectServiceUncheckedUpdateWithoutProjectInput>
    create: XOR<ProjectServiceCreateWithoutProjectInput, ProjectServiceUncheckedCreateWithoutProjectInput>
  }

  export type ProjectServiceUpdateWithWhereUniqueWithoutProjectInput = {
    where: ProjectServiceWhereUniqueInput
    data: XOR<ProjectServiceUpdateWithoutProjectInput, ProjectServiceUncheckedUpdateWithoutProjectInput>
  }

  export type ProjectServiceUpdateManyWithWhereWithoutProjectInput = {
    where: ProjectServiceScalarWhereInput
    data: XOR<ProjectServiceUpdateManyMutationInput, ProjectServiceUncheckedUpdateManyWithoutProjectInput>
  }

  export type ProjectServiceScalarWhereInput = {
    AND?: ProjectServiceScalarWhereInput | ProjectServiceScalarWhereInput[]
    OR?: ProjectServiceScalarWhereInput[]
    NOT?: ProjectServiceScalarWhereInput | ProjectServiceScalarWhereInput[]
    id?: StringFilter<"ProjectService"> | string
    project_id?: StringFilter<"ProjectService"> | string
    service?: StringFilter<"ProjectService"> | string
    created_at?: DateTimeFilter<"ProjectService"> | Date | string
    created_by?: StringFilter<"ProjectService"> | string
    created_ip?: StringNullableFilter<"ProjectService"> | string | null
    updated_at?: DateTimeFilter<"ProjectService"> | Date | string
    updated_by?: StringNullableFilter<"ProjectService"> | string | null
    updated_ip?: StringNullableFilter<"ProjectService"> | string | null
    company_id?: StringFilter<"ProjectService"> | string
  }

  export type ProjectCreateWithoutGalleryInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProjectsInput
    key_features?: ProjectKeyFeatureCreateNestedManyWithoutProjectInput
    services?: ProjectServiceCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutGalleryInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    category_id: string
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    key_features?: ProjectKeyFeatureUncheckedCreateNestedManyWithoutProjectInput
    services?: ProjectServiceUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutGalleryInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutGalleryInput, ProjectUncheckedCreateWithoutGalleryInput>
  }

  export type ProjectUpsertWithoutGalleryInput = {
    update: XOR<ProjectUpdateWithoutGalleryInput, ProjectUncheckedUpdateWithoutGalleryInput>
    create: XOR<ProjectCreateWithoutGalleryInput, ProjectUncheckedCreateWithoutGalleryInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutGalleryInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutGalleryInput, ProjectUncheckedUpdateWithoutGalleryInput>
  }

  export type ProjectUpdateWithoutGalleryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProjectsNestedInput
    key_features?: ProjectKeyFeatureUpdateManyWithoutProjectNestedInput
    services?: ProjectServiceUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutGalleryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_id?: StringFieldUpdateOperationsInput | string
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    key_features?: ProjectKeyFeatureUncheckedUpdateManyWithoutProjectNestedInput
    services?: ProjectServiceUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectCreateWithoutKey_featuresInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProjectsInput
    gallery?: ProjectGalleryCreateNestedManyWithoutProjectInput
    services?: ProjectServiceCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutKey_featuresInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    category_id: string
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    gallery?: ProjectGalleryUncheckedCreateNestedManyWithoutProjectInput
    services?: ProjectServiceUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutKey_featuresInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutKey_featuresInput, ProjectUncheckedCreateWithoutKey_featuresInput>
  }

  export type ProjectUpsertWithoutKey_featuresInput = {
    update: XOR<ProjectUpdateWithoutKey_featuresInput, ProjectUncheckedUpdateWithoutKey_featuresInput>
    create: XOR<ProjectCreateWithoutKey_featuresInput, ProjectUncheckedCreateWithoutKey_featuresInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutKey_featuresInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutKey_featuresInput, ProjectUncheckedUpdateWithoutKey_featuresInput>
  }

  export type ProjectUpdateWithoutKey_featuresInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProjectsNestedInput
    gallery?: ProjectGalleryUpdateManyWithoutProjectNestedInput
    services?: ProjectServiceUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutKey_featuresInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_id?: StringFieldUpdateOperationsInput | string
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    gallery?: ProjectGalleryUncheckedUpdateManyWithoutProjectNestedInput
    services?: ProjectServiceUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectCreateWithoutServicesInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProjectsInput
    gallery?: ProjectGalleryCreateNestedManyWithoutProjectInput
    key_features?: ProjectKeyFeatureCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutServicesInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    category_id: string
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    gallery?: ProjectGalleryUncheckedCreateNestedManyWithoutProjectInput
    key_features?: ProjectKeyFeatureUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutServicesInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutServicesInput, ProjectUncheckedCreateWithoutServicesInput>
  }

  export type ProjectUpsertWithoutServicesInput = {
    update: XOR<ProjectUpdateWithoutServicesInput, ProjectUncheckedUpdateWithoutServicesInput>
    create: XOR<ProjectCreateWithoutServicesInput, ProjectUncheckedCreateWithoutServicesInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutServicesInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutServicesInput, ProjectUncheckedUpdateWithoutServicesInput>
  }

  export type ProjectUpdateWithoutServicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProjectsNestedInput
    gallery?: ProjectGalleryUpdateManyWithoutProjectNestedInput
    key_features?: ProjectKeyFeatureUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutServicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_id?: StringFieldUpdateOperationsInput | string
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    gallery?: ProjectGalleryUncheckedUpdateManyWithoutProjectNestedInput
    key_features?: ProjectKeyFeatureUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectCreateWithoutCategoryInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    gallery?: ProjectGalleryCreateNestedManyWithoutProjectInput
    key_features?: ProjectKeyFeatureCreateNestedManyWithoutProjectInput
    services?: ProjectServiceCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutCategoryInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    gallery?: ProjectGalleryUncheckedCreateNestedManyWithoutProjectInput
    key_features?: ProjectKeyFeatureUncheckedCreateNestedManyWithoutProjectInput
    services?: ProjectServiceUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutCategoryInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutCategoryInput, ProjectUncheckedCreateWithoutCategoryInput>
  }

  export type ProjectCreateManyCategoryInputEnvelope = {
    data: ProjectCreateManyCategoryInput | ProjectCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type NewsCreateWithoutCategoryInput = {
    id?: string
    title: string
    subtitle?: string | null
    description: string
    publish_date: Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: string | null
    type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    gallery?: NewsGalleryCreateNestedManyWithoutNewsInput
  }

  export type NewsUncheckedCreateWithoutCategoryInput = {
    id?: string
    title: string
    subtitle?: string | null
    description: string
    publish_date: Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: string | null
    type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    gallery?: NewsGalleryUncheckedCreateNestedManyWithoutNewsInput
  }

  export type NewsCreateOrConnectWithoutCategoryInput = {
    where: NewsWhereUniqueInput
    create: XOR<NewsCreateWithoutCategoryInput, NewsUncheckedCreateWithoutCategoryInput>
  }

  export type NewsCreateManyCategoryInputEnvelope = {
    data: NewsCreateManyCategoryInput | NewsCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ProjectUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ProjectWhereUniqueInput
    update: XOR<ProjectUpdateWithoutCategoryInput, ProjectUncheckedUpdateWithoutCategoryInput>
    create: XOR<ProjectCreateWithoutCategoryInput, ProjectUncheckedCreateWithoutCategoryInput>
  }

  export type ProjectUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ProjectWhereUniqueInput
    data: XOR<ProjectUpdateWithoutCategoryInput, ProjectUncheckedUpdateWithoutCategoryInput>
  }

  export type ProjectUpdateManyWithWhereWithoutCategoryInput = {
    where: ProjectScalarWhereInput
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ProjectScalarWhereInput = {
    AND?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
    OR?: ProjectScalarWhereInput[]
    NOT?: ProjectScalarWhereInput | ProjectScalarWhereInput[]
    id?: StringFilter<"Project"> | string
    title?: StringFilter<"Project"> | string
    subtitle?: StringNullableFilter<"Project"> | string | null
    description?: StringNullableFilter<"Project"> | string | null
    start_date?: DateTimeFilter<"Project"> | Date | string
    end_date?: DateTimeNullableFilter<"Project"> | Date | string | null
    thumbnail_url?: StringNullableFilter<"Project"> | string | null
    city?: StringNullableFilter<"Project"> | string | null
    country?: StringNullableFilter<"Project"> | string | null
    address?: StringNullableFilter<"Project"> | string | null
    client_name?: StringNullableFilter<"Project"> | string | null
    category_id?: StringFilter<"Project"> | string
    area?: DecimalNullableFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFilter<"Project"> | boolean
    tags?: JsonNullableFilter<"Project">
    budget?: DecimalNullableFilter<"Project"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"Project"> | string
    created_at?: DateTimeFilter<"Project"> | Date | string
    created_by?: StringFilter<"Project"> | string
    created_ip?: StringNullableFilter<"Project"> | string | null
    updated_at?: DateTimeFilter<"Project"> | Date | string
    updated_by?: StringNullableFilter<"Project"> | string | null
    updated_ip?: StringNullableFilter<"Project"> | string | null
    company_id?: StringFilter<"Project"> | string
  }

  export type NewsUpsertWithWhereUniqueWithoutCategoryInput = {
    where: NewsWhereUniqueInput
    update: XOR<NewsUpdateWithoutCategoryInput, NewsUncheckedUpdateWithoutCategoryInput>
    create: XOR<NewsCreateWithoutCategoryInput, NewsUncheckedCreateWithoutCategoryInput>
  }

  export type NewsUpdateWithWhereUniqueWithoutCategoryInput = {
    where: NewsWhereUniqueInput
    data: XOR<NewsUpdateWithoutCategoryInput, NewsUncheckedUpdateWithoutCategoryInput>
  }

  export type NewsUpdateManyWithWhereWithoutCategoryInput = {
    where: NewsScalarWhereInput
    data: XOR<NewsUpdateManyMutationInput, NewsUncheckedUpdateManyWithoutCategoryInput>
  }

  export type NewsScalarWhereInput = {
    AND?: NewsScalarWhereInput | NewsScalarWhereInput[]
    OR?: NewsScalarWhereInput[]
    NOT?: NewsScalarWhereInput | NewsScalarWhereInput[]
    id?: StringFilter<"News"> | string
    title?: StringFilter<"News"> | string
    subtitle?: StringNullableFilter<"News"> | string | null
    description?: StringFilter<"News"> | string
    category_id?: StringFilter<"News"> | string
    publish_date?: DateTimeFilter<"News"> | Date | string
    tags?: JsonNullableFilter<"News">
    thumbnail_url?: StringNullableFilter<"News"> | string | null
    type?: StringFilter<"News"> | string
    created_at?: DateTimeFilter<"News"> | Date | string
    created_by?: StringFilter<"News"> | string
    created_ip?: StringNullableFilter<"News"> | string | null
    updated_at?: DateTimeFilter<"News"> | Date | string
    updated_by?: StringNullableFilter<"News"> | string | null
    updated_ip?: StringNullableFilter<"News"> | string | null
    company_id?: StringFilter<"News"> | string
  }

  export type CategoryCreateWithoutNewsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    Projects?: ProjectCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutNewsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    Projects?: ProjectUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutNewsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutNewsInput, CategoryUncheckedCreateWithoutNewsInput>
  }

  export type NewsGalleryCreateWithoutNewsInput = {
    id?: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: Decimal | DecimalJsLike | number | string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type NewsGalleryUncheckedCreateWithoutNewsInput = {
    id?: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: Decimal | DecimalJsLike | number | string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type NewsGalleryCreateOrConnectWithoutNewsInput = {
    where: NewsGalleryWhereUniqueInput
    create: XOR<NewsGalleryCreateWithoutNewsInput, NewsGalleryUncheckedCreateWithoutNewsInput>
  }

  export type NewsGalleryCreateManyNewsInputEnvelope = {
    data: NewsGalleryCreateManyNewsInput | NewsGalleryCreateManyNewsInput[]
    skipDuplicates?: boolean
  }

  export type CategoryUpsertWithoutNewsInput = {
    update: XOR<CategoryUpdateWithoutNewsInput, CategoryUncheckedUpdateWithoutNewsInput>
    create: XOR<CategoryCreateWithoutNewsInput, CategoryUncheckedCreateWithoutNewsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutNewsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutNewsInput, CategoryUncheckedUpdateWithoutNewsInput>
  }

  export type CategoryUpdateWithoutNewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    Projects?: ProjectUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutNewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    Projects?: ProjectUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type NewsGalleryUpsertWithWhereUniqueWithoutNewsInput = {
    where: NewsGalleryWhereUniqueInput
    update: XOR<NewsGalleryUpdateWithoutNewsInput, NewsGalleryUncheckedUpdateWithoutNewsInput>
    create: XOR<NewsGalleryCreateWithoutNewsInput, NewsGalleryUncheckedCreateWithoutNewsInput>
  }

  export type NewsGalleryUpdateWithWhereUniqueWithoutNewsInput = {
    where: NewsGalleryWhereUniqueInput
    data: XOR<NewsGalleryUpdateWithoutNewsInput, NewsGalleryUncheckedUpdateWithoutNewsInput>
  }

  export type NewsGalleryUpdateManyWithWhereWithoutNewsInput = {
    where: NewsGalleryScalarWhereInput
    data: XOR<NewsGalleryUpdateManyMutationInput, NewsGalleryUncheckedUpdateManyWithoutNewsInput>
  }

  export type NewsGalleryScalarWhereInput = {
    AND?: NewsGalleryScalarWhereInput | NewsGalleryScalarWhereInput[]
    OR?: NewsGalleryScalarWhereInput[]
    NOT?: NewsGalleryScalarWhereInput | NewsGalleryScalarWhereInput[]
    id?: StringFilter<"NewsGallery"> | string
    news_id?: StringFilter<"NewsGallery"> | string
    image_url?: StringFilter<"NewsGallery"> | string
    title?: StringNullableFilter<"NewsGallery"> | string | null
    subtitle?: StringNullableFilter<"NewsGallery"> | string | null
    sequence_no?: DecimalFilter<"NewsGallery"> | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFilter<"NewsGallery"> | Date | string
    created_by?: StringFilter<"NewsGallery"> | string
    created_ip?: StringNullableFilter<"NewsGallery"> | string | null
    updated_at?: DateTimeFilter<"NewsGallery"> | Date | string
    updated_by?: StringNullableFilter<"NewsGallery"> | string | null
    updated_ip?: StringNullableFilter<"NewsGallery"> | string | null
    company_id?: StringFilter<"NewsGallery"> | string
  }

  export type NewsCreateWithoutGalleryInput = {
    id?: string
    title: string
    subtitle?: string | null
    description: string
    publish_date: Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: string | null
    type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutNewsInput
  }

  export type NewsUncheckedCreateWithoutGalleryInput = {
    id?: string
    title: string
    subtitle?: string | null
    description: string
    category_id: string
    publish_date: Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: string | null
    type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type NewsCreateOrConnectWithoutGalleryInput = {
    where: NewsWhereUniqueInput
    create: XOR<NewsCreateWithoutGalleryInput, NewsUncheckedCreateWithoutGalleryInput>
  }

  export type NewsUpsertWithoutGalleryInput = {
    update: XOR<NewsUpdateWithoutGalleryInput, NewsUncheckedUpdateWithoutGalleryInput>
    create: XOR<NewsCreateWithoutGalleryInput, NewsUncheckedCreateWithoutGalleryInput>
    where?: NewsWhereInput
  }

  export type NewsUpdateToOneWithWhereWithoutGalleryInput = {
    where?: NewsWhereInput
    data: XOR<NewsUpdateWithoutGalleryInput, NewsUncheckedUpdateWithoutGalleryInput>
  }

  export type NewsUpdateWithoutGalleryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    publish_date?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutNewsNestedInput
  }

  export type NewsUncheckedUpdateWithoutGalleryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category_id?: StringFieldUpdateOperationsInput | string
    publish_date?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CompanyCreateWithoutCompanyAdditionalInfoInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
  }

  export type CompanyUncheckedCreateWithoutCompanyAdditionalInfoInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
  }

  export type CompanyCreateOrConnectWithoutCompanyAdditionalInfoInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutCompanyAdditionalInfoInput, CompanyUncheckedCreateWithoutCompanyAdditionalInfoInput>
  }

  export type CompanyUpsertWithoutCompanyAdditionalInfoInput = {
    update: XOR<CompanyUpdateWithoutCompanyAdditionalInfoInput, CompanyUncheckedUpdateWithoutCompanyAdditionalInfoInput>
    create: XOR<CompanyCreateWithoutCompanyAdditionalInfoInput, CompanyUncheckedCreateWithoutCompanyAdditionalInfoInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutCompanyAdditionalInfoInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutCompanyAdditionalInfoInput, CompanyUncheckedUpdateWithoutCompanyAdditionalInfoInput>
  }

  export type CompanyUpdateWithoutCompanyAdditionalInfoInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CompanyUncheckedUpdateWithoutCompanyAdditionalInfoInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CompanyAdditionalInfoCreateManyCompanyInput = {
    id?: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyAdditionalInfoUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyAdditionalInfoUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyAdditionalInfoUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserGroupCreateManyUserInput = {
    id?: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type RefreshTokenCreateManyUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type UserGroupUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    security_group?: SecurityGroupUpdateOneRequiredWithoutUserGroupsNestedInput
  }

  export type UserGroupUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type RefreshTokenUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RefreshTokenUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleCreateManySecurity_ruleInput = {
    id?: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleWiseMenuPermissionUpdateWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleWiseMenuPermissionUncheckedUpdateWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleWiseMenuPermissionUncheckedUpdateManyWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleUpdateWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    security_group?: SecurityGroupUpdateOneRequiredWithoutSecurityGroupRulesNestedInput
  }

  export type SecurityGroupRuleUncheckedUpdateWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleCreateManySecurity_groupInput = {
    id?: string
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserGroupCreateManySecurity_groupInput = {
    id?: string
    user_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleUpdateWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    security_rule?: SecurityRuleUpdateOneRequiredWithoutSecurityGroupRulesNestedInput
  }

  export type SecurityGroupRuleUncheckedUpdateWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupUpdateWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutUserGroupsNestedInput
  }

  export type UserGroupUncheckedUpdateWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupUncheckedUpdateManyWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectGalleryCreateManyProjectInput = {
    id?: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectKeyFeatureCreateManyProjectInput = {
    id?: string
    feature: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectServiceCreateManyProjectInput = {
    id?: string
    service: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectGalleryUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectGalleryUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectGalleryUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectKeyFeatureUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectKeyFeatureUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectKeyFeatureUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    feature?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectServiceUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    service?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectServiceUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    service?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectServiceUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    service?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectCreateManyCategoryInput = {
    id?: string
    title: string
    subtitle?: string | null
    description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    thumbnail_url?: string | null
    city?: string | null
    country?: string | null
    address?: string | null
    client_name?: string | null
    area?: Decimal | DecimalJsLike | number | string | null
    is_featured?: boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: Decimal | DecimalJsLike | number | string | null
    status: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type NewsCreateManyCategoryInput = {
    id?: string
    title: string
    subtitle?: string | null
    description: string
    publish_date: Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: string | null
    type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProjectUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    gallery?: ProjectGalleryUpdateManyWithoutProjectNestedInput
    key_features?: ProjectKeyFeatureUpdateManyWithoutProjectNestedInput
    services?: ProjectServiceUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    gallery?: ProjectGalleryUncheckedUpdateManyWithoutProjectNestedInput
    key_features?: ProjectKeyFeatureUncheckedUpdateManyWithoutProjectNestedInput
    services?: ProjectServiceUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NullableJsonNullValueInput | InputJsonValue
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type NewsUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    publish_date?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    gallery?: NewsGalleryUpdateManyWithoutNewsNestedInput
  }

  export type NewsUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    publish_date?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    gallery?: NewsGalleryUncheckedUpdateManyWithoutNewsNestedInput
  }

  export type NewsUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    publish_date?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableJsonNullValueInput | InputJsonValue
    thumbnail_url?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type NewsGalleryCreateManyNewsInput = {
    id?: string
    image_url: string
    title?: string | null
    subtitle?: string | null
    sequence_no: Decimal | DecimalJsLike | number | string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type NewsGalleryUpdateWithoutNewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type NewsGalleryUncheckedUpdateWithoutNewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type NewsGalleryUncheckedUpdateManyWithoutNewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    image_url?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CompanyCountOutputTypeDefaultArgs instead
     */
    export type CompanyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityRuleCountOutputTypeDefaultArgs instead
     */
    export type SecurityRuleCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityRuleCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityGroupCountOutputTypeDefaultArgs instead
     */
    export type SecurityGroupCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityGroupCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProjectCountOutputTypeDefaultArgs instead
     */
    export type ProjectCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProjectCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoryCountOutputTypeDefaultArgs instead
     */
    export type CategoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NewsCountOutputTypeDefaultArgs instead
     */
    export type NewsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NewsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ApplicationLogDefaultArgs instead
     */
    export type ApplicationLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ApplicationLogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AuditLogDefaultArgs instead
     */
    export type AuditLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AuditLogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompanyDefaultArgs instead
     */
    export type CompanyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RefreshTokenDefaultArgs instead
     */
    export type RefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RefreshTokenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityRuleDefaultArgs instead
     */
    export type SecurityRuleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityRuleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityRuleWiseMenuPermissionDefaultArgs instead
     */
    export type SecurityRuleWiseMenuPermissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityRuleWiseMenuPermissionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityGroupDefaultArgs instead
     */
    export type SecurityGroupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityGroupDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityGroupRuleDefaultArgs instead
     */
    export type SecurityGroupRuleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityGroupRuleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserGroupDefaultArgs instead
     */
    export type UserGroupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserGroupDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MenuDefaultArgs instead
     */
    export type MenuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MenuDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProjectDefaultArgs instead
     */
    export type ProjectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProjectDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProjectGalleryDefaultArgs instead
     */
    export type ProjectGalleryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProjectGalleryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProjectKeyFeatureDefaultArgs instead
     */
    export type ProjectKeyFeatureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProjectKeyFeatureDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProjectServiceDefaultArgs instead
     */
    export type ProjectServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProjectServiceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ContactDefaultArgs instead
     */
    export type ContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ContactDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoryDefaultArgs instead
     */
    export type CategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CareerDefaultArgs instead
     */
    export type CareerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CareerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NewsDefaultArgs instead
     */
    export type NewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NewsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NewsGalleryDefaultArgs instead
     */
    export type NewsGalleryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NewsGalleryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompanyAdditionalInfoDefaultArgs instead
     */
    export type CompanyAdditionalInfoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyAdditionalInfoDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}